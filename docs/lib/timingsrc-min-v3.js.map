{"version":3,"file":"timingsrc-min-v3.js","sources":["../../v3/util/utils.js","../../v3/util/endpoint.js","../../v3/util/interval.js","../../v3/util/motionutils.js","../../v3/util/binarysearch.js","../../v3/util/eventify.js","../../v3/util/observablemap.js","../../v3/dataset/cuecollection.js","../../v3/util/timeout.js","../../v3/timingobject/masterclock.js","../../v3/timingobject/internalprovider.js","../../v3/timingobject/externalprovider.js","../../v3/timingobject/timingobject.js","../../v3/timingobject/loopconverter.js","../../v3/timingobject/rangeconverter.js","../../v3/timingobject/timingsampler.js","../../v3/timingobject/positioncallback.js","../../v3/dataset/dataset.js","../../v3/sequencing/schedule.js","../../v3/sequencing/basesequencer.js","../../v3/sequencing/pointsequencer.js","../../v3/sequencing/intervalsequencer.js","../../v3/ui/timingprogress.js","../../v3/index.js","../../v3/ui/datasetviewer.js","../../v3/timingobject/delayconverter.js","../../v3/timingobject/scaleconverter.js","../../v3/timingobject/skewconverter.js","../../v3/dataset/subset.js","../../v3/timingobject/timeshiftconverter.js"],"sourcesContent":["/*\n    Copyright 2020\n    Author : Ingar Arntzen\n\n    This file is part of the Timingsrc module.\n\n    Timingsrc is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Timingsrc is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\nexport function random_string(length) {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n    for(var i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n}\n\n\n/* Set Comparison */\nexport function eqSet(as, bs) {\n    return as.size === bs.size && all(isIn(bs), as);\n}\n\nexport function all(pred, as) {\n    for (var a of as) if (!pred(a)) return false;\n    return true;\n}\n\nexport function isIn(as) {\n    return function (a) {\n        return as.has(a);\n    };\n}\n\nexport function set_difference(as, bs) {\n    return new Set([...as].filter((e) => !bs.has(e)));\n}\n\n\n\n\n\n/*\n    get the difference of two Maps\n    key in a but not in b\n*/\nexport const map_difference = function (a, b) {\n    if (a.size == 0) {\n        return new Map();\n    } else if (b.size == 0) {\n        return a;\n    } else {\n        return new Map([...a].filter(function ([key, value]) {\n            return !b.has(key)\n        }));\n    }\n};\n\n/*\n    get the intersection of two Maps\n    key in a and b\n*/\nexport const map_intersect = function (a, b) {\n    [a, b] = (a.size <= b.size) ? [a,b] : [b,a];\n    if (a.size == 0) {\n        // No intersect\n        return new Map();\n    }\n    return new Map([...a].filter(function ([key, value]) {\n        return b.has(key)\n    }));\n};\n\n/*\n\nNOTE : just as good to do \n    let merged = new Map(...map0, ...map1, ...)\n\neffective concatenation of multiple arrays\n- order - if true preserves ordering of input arrays\n        - else sorts input arrays (longest first)\n        - default false is more effective\n- copy  - if true leaves input arrays unchanged, copy\n          values into new array\n        - if false copies remainder arrays into the first\n          array\n        - default false is more effective\n*/\nexport function map_merge(array_of_maps, options={}) {\n    let {copy=false, order=false} = options;\n    // check input\n    if (array_of_maps instanceof Map) {\n        return array_of_maps;\n    }\n    if (!Array.isArray(array_of_maps)) {\n        throw new Error(\"illegal input array_of_maps\", array_of_maps);\n    }\n    if (array_of_maps.length == 0) {\n        throw new Error(\"empty array_of_maps\");\n    }\n    let is_maps = array_of_maps.map((o) => {\n        return (o instanceof Map);\n    });\n    if (!is_maps.every((e) => e == true)) {\n        throw new Error(\"some object in array_of_maps is not a Map\", array_of_maps);\n    }\n    // order\n    if (!order) {\n        // sort array_of_maps according to size - longest first\n        array_of_maps.sort((a, b) => b.size - a.size);\n    }\n    // copy\n    let first = (copy) ? new Map() : array_of_maps.shift(); \n    // fill up first Map with entries from other Maps\n    for (let m of array_of_maps) {\n        for (let [key, val] of m.entries()) {\n            first.set(key, val);\n        }\n    }\n    return first;\n}\n\n\nexport function divmod (n, d) {\n    let r = n % d;\n    let q = (n-r)/d;\n    return [q, r];\n}\n\n\nexport function isIterable(obj) {\n    // checks for null and undefined\n    if (obj == null) {\n        return false;\n    }\n    return typeof obj[Symbol.iterator] === 'function';\n}\n\n/*\n    effective concatenation of multiple arrays\n    - order - if true preserves ordering of input arrays\n            - else sorts input arrays (longest first)\n            - default false is more effective\n    - copy  - if true leaves input arrays unchanged, copy\n              values into new array\n            - if false copies remainder arrays into the first\n              array\n            - default false is more effective\n*/\nexport function array_concat(arrays, options = {}) {\n    let {copy=false, order=false} = options;\n    if (arrays.length == 0) {\n        return [];\n    }\n    if (arrays.length == 1) {\n        return arrays[0];\n    }\n    let total_len = arrays.reduce((acc, cur) => acc + cur.length, 0);\n    // order\n    if (!order) {\n        // sort arrays according to length - longest first\n        arrays.sort((a, b) => b.length - a.length);\n    }\n    // copy\n    let first = (copy) ? [] : arrays.shift();\n    let start = first.length;\n    // reserve memory total length\n    first.length = total_len;\n    // fill up first with entries from other arrays\n    let end, len;\n    for (let arr of arrays) {\n        len = arr.length;\n        end = start + len;\n        for (let i=0; i<len; i++) {\n            first[start + i] = arr[i]\n        }\n        start = end;\n    }\n    return first;\n};\n\n\n\n/*\n    default object equals\n*/\nexport function object_equals(a, b) {\n    // Create arrays of property names\n    let aProps = Object.getOwnPropertyNames(a);\n    let bProps = Object.getOwnPropertyNames(b);\n    let len = aProps.length;\n    let propName;\n    // If properties lenght is different => not equal\n    if (aProps.length != bProps.length) {\n        return false;\n    }\n    for (let i=0; i<len; i++) {\n        propName = aProps[i];\n        // If property values are not equal => not equal\n        if (a[propName] !== b[propName]) {\n            return false;\n        }\n    }\n    // equal\n    return true;\n}\n\n\n/* document readypromise */\nexport const docready = new Promise(function(resolve) {\n    if (document.readyState === 'complete') {\n        resolve();\n    } else {\n        let onReady = function () {\n            resolve();\n            document.removeEventListener('DOMContentLoaded', onReady, true);\n            window.removeEventListener('load', onReady, true);\n        };\n        document.addEventListener('DOMContentLoaded', onReady, true);\n        window.addEventListener('load', onReady, true);\n    }\n});\n\n","/*\n\tCopyright 2020\n\tAuthor : Ingar Arntzen\n\n\tThis file is part of the Timingsrc module.\n\n\tTimingsrc is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tTimingsrc is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\nconst isNumber = function(n) {\n\tlet N = parseFloat(n);\n    return (n===N && !isNaN(N));\n};\n\n\n/*********************************************************\n\nENDPOINT\n\nUtilities for interval endpoints comparison\n\n**********************************************************/\n\n/*\n\tendpoint modes - in endpoint order\n\tendpoint order\n\tp), [p, [p], p], (p\n*/\nconst MODE_RIGHT_OPEN = 0;\nconst MODE_LEFT_CLOSED = 1;\nconst MODE_SINGULAR = 2;\nconst MODE_RIGHT_CLOSED = 3;\nconst MODE_LEFT_OPEN = 4;\n\n// create endpoint\nfunction create(val, right, closed, singular) {\n\t// make sure infinity endpoints are legal\n\tif (val == Infinity) {\n\t\tif (right == false || closed == false) {\n\t\t\tthrow new Error(\"Infinity endpoint must be right-closed or singular\");\n\t\t}\n\t}\n\tif (val == -Infinity) {\n\t\tif (right == true || closed == false) {\n\t\t\tthrow new Error(\"-Infinity endpoint must be left-closed or singular\")\n\t\t}\n\t}\n\treturn [val, right, closed, singular];\n}\n\n\n/*\n\tresolve endpoint mode\n*/\nfunction get_mode(e) {\n\t// if right, closed is given\n\t// use that instead of singular\n\tlet [val, right, closed, singular] = e;\n\tif (right == undefined) {\n\t\treturn MODE_SINGULAR;\n\t} else if (right) {\n\t\tif (closed) {\n\t\t\treturn MODE_RIGHT_CLOSED;\n\t\t} else {\n\t\t\treturn MODE_RIGHT_OPEN;\n\t\t}\n\t} else {\n\t\tif (closed) {\n\t\t\treturn MODE_LEFT_CLOSED;\n\t\t} else {\n\t\t\treturn MODE_LEFT_OPEN;\n\t\t}\n\t}\n}\n\n/*\n\tget order\n\n\tgiven two endpoints\n\treturn two numbers representing their order\n\n\talso accepts regular numbers as endpoints\n\tregular number are represented as singular endpoints\n\n\tfor endpoint values that are not\n\tequal, these values convey order directly,\n\totherwise endpoint mode numbers 0-4 are returned\n\n\tparameters are either\n\t- point: Number\n\tor,\n\t- endpoint: [\n\t\tvalue (number),\n\t\tright (bool),\n\t\tclosed (bool),\n\t\tsingular (bool)\n\t  ]\n*/\n\nfunction get_order(e1, e2) {\n\t// support plain numbers (not endpoints)\n\tif (e1.length === undefined) {\n\t\tif (!isNumber(e1)) {\n\t\t\tthrow new Error(\"e1 not a number\", e1);\n\t\t}\n\t\te1 = create(e1, undefined, undefined, true);\n\t}\n\tif (e2.length === undefined) {\n\t\tif (!isNumber(e2)) {\n\t\t\tthrow new Error(\"e2 not a number\", e2);\n\t\t}\n\t\te2 = create(e2, undefined, undefined, true);\n\t}\n\tif (e1[0] != e2[0]) {\n\t\t// different values\n\t\treturn [e1[0], e2[0]];\n\t} else {\n\t\t// equal values\n\t\treturn [get_mode(e1), get_mode(e2)];\n\t}\n}\n\n/*\n\treturn true if e1 is ordered before e2\n\tfalse if equal\n*/\n\nfunction leftof(e1, e2) {\n\tlet [order1, order2] = get_order(e1, e2);\n\treturn (order1 < order2);\n}\n\n/*\n\treturn true if e1 is ordered after e2\n\tfalse is equal\n*/\n\nfunction rightof(e1, e2) {\n\tlet [order1, order2] = get_order(e1, e2);\n\treturn (order1 > order2);\n}\n\n/*\n\treturn true if e1 is ordered equal to e2\n*/\n\nfunction equals(e1, e2) {\n\tlet [order1, order2] = get_order(e1, e2);\n\treturn (order1 == order2);\n}\n\n/*\n\treturn -1 if ordering e1, e2 is correct\n\treturn 0 if e1 and e2 is equal\n\treturn 1 if ordering e1, e2 is incorrect\n*/\n\nfunction cmp(e1, e2) {\n\tlet [order1, order2] = get_order(e1, e2);\n\tlet diff = order1 - order2;\n\tif (diff == 0) return 0;\n\treturn (diff > 0) ? 1 : -1;\n}\n\n\nfunction min(e1, e2) {\n    return (cmp(e1, e2) <= 0) ? e1 : e2;\n}\n\n\nfunction max(e1, e2) {\n    return (cmp(e1, e2) <= 0) ? e2 : e1;\n}\n\n\n/*\n\thuman friendly endpoint representation\n*/\nfunction toString(e) {\n\tif (e.length === undefined) {\n\t\treturn e.toString();\n\t} else {\n\t\tlet mode = get_mode(e);\n\t\tlet val = e[0];\n\t\tif (val == Infinity || val == -Infinity) {\n\t\t\tval = \"--\";\n\t\t}\n\t\tif (mode == MODE_RIGHT_OPEN) {\n\t\t\treturn `${val})`\n\t\t} else if (mode == MODE_LEFT_CLOSED) {\n\t\t\treturn `[${val}`\n\t\t} else if (mode == MODE_SINGULAR){\n\t\t\treturn `[${val}]`\n\t\t} else if (mode == MODE_RIGHT_CLOSED) {\n\t\t\treturn `${val}]`\n\t\t} else if (mode == MODE_LEFT_OPEN) {\n\t\t\treturn `(${val}`\n\t\t}\n\t}\n}\n\n\nexport default {\n\tcmp,\n\ttoString,\n\tequals,\n\trightof,\n\tleftof,\n\tcreate,\n\tmin,\n\tmax\n};\n","/*\n\tCopyright 2020\n\tAuthor : Ingar Arntzen\n\n\tThis file is part of the Timingsrc module.\n\n\tTimingsrc is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tTimingsrc is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\nimport endpoint from './endpoint.js';\n\n\nconst isNumber = function(n) {\n\tlet N = parseFloat(n);\n    return (n===N && !isNaN(N));\n};\n\n/*********************************************************\nINTERVAL ERROR\n**********************************************************/\n\nclass IntervalError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name == \"IntervalError\";\n\t}\n};\n\n\n/*********************************************************\nINTERVAL\n**********************************************************/\n\n// Interval Relations\nconst Relation = Object.freeze({\n\tOUTSIDE_LEFT: 64,  \t// 0b1000000\n\tOVERLAP_LEFT: 32,  \t// 0b0100000\n\tCOVERED: 16,\t\t// 0b0010000\n\tEQUALS: 8,\t\t\t// 0b0001000\n\tCOVERS: 4,\t\t\t// 0b0000100\n\tOVERLAP_RIGHT: 2,\t// 0b0000010\n\tOUTSIDE_RIGHT: 1\t// 0b0000001\n});\n\n/*\n    Masks for Interval matching\n*/\nconst MATCH_OUTSIDE = Relation.OUTSIDE_LEFT + Relation.OUTSIDE_RIGHT;\nconst MATCH_INSIDE = Relation.EQUALS + Relation.COVERED;\nconst MATCH_OVERLAP = MATCH_INSIDE +\n\tRelation.OVERLAP_LEFT + Relation.OVERLAP_RIGHT;\nconst MATCH_COVERS = MATCH_OVERLAP + Relation.COVERS;\nconst MATCH_ALL = MATCH_COVERS + MATCH_OUTSIDE;\n\nconst Match = Object.freeze({\n\tOUTSIDE: MATCH_OUTSIDE,\n\tINSIDE: MATCH_INSIDE,\n\tOVERLAP: MATCH_OVERLAP,\n\tCOVERS: MATCH_COVERS,\n\tALL: MATCH_ALL\n});\n\n\n/*********************************************************\nCOMPARE INTERVALS\n**********************************************************\n\ncompare (a, b)\nparam a Interval\nparam b Interval\nreturns IntervalRelation\n\ncompares interval b to interval a\ne.g. return value COVERED reads b is covered by a.\n\ncmp_1 = endpoint_compare(b_low, a_low);\ncmp_2 = endpoint_compare(b_high, a_high);\n\nkey = 10*cmp_1 + cmp_2\n\ncmp_1  cmp_2  key  relation\n=====  =====  ===  ============================\n-1     -1     -11  OUTSIDE_LEFT, PARTIAL_LEFT\n-1 \t   0      -10  COVERS\n-1     1       -9  COVERS\n0\t   -1      -1  COVERED\n0      0        0  EQUAL\n0 \t   1        1  COVERS\n1      -1       9  COVERED\n1 \t   0       10  COVERED\n1 \t   1       11  OUTSIDE_RIGHT, OVERLAP_RIGHT\n=====  =====  ===  ============================\n\n**********************************************************/\n\nfunction compare(a, b) {\n\tif (! a instanceof Interval) {\n\t\t// could be a number\n\t\tif (isNumber(a)) {\n\t\t\ta = new Interval(a);\n\t\t} else {\n\t\t\tthrow new IntervalError(\"a not interval\", a);\n\t\t}\n\t}\n\tif (! b instanceof Interval) {\n\t\t// could be a number\n\t\tif (isNumber(b)) {\n\t\t\tb = new Interval(b);\n\t\t} else {\n\t\t\tthrow new IntervalError(\"b not interval\", b);\n\t\t}\n\t}\n\n\tlet cmp_1 = endpoint.cmp(a.endpointLow, b.endpointLow);\n\tlet cmp_2 = endpoint.cmp(a.endpointHigh, b.endpointHigh);\n\tlet key = cmp_1*10 + cmp_2;\n\n\tif (key == 11) {\n\t\t// OUTSIDE_LEFT or PARTIAL_LEFT\n\t\tif (endpoint.leftof(b.endpointHigh, a.endpointLow)) {\n\t\t\treturn Relation.OUTSIDE_RIGHT;\n\t\t} else {\n\t\t\treturn Relation.OVERLAP_RIGHT;\n\t\t}\n\t} else if ([-1, 9, 10].includes(key)) {\n\t\treturn Relation.COVERED;\n\t} else if ([1, -9, -10].includes(key)) {\n\t\treturn Relation.COVERS;\n\t} else if (key == 0) {\n\t\treturn Relation.EQUALS;\n\t} else {\n\t\t// key == -11\n\t\t// OUTSIDE_RIGHT, PARTIAL_RIGHT\n\t\tif (endpoint.rightof(b.endpointLow, a.endpointHigh)) {\n\t\t\treturn Relation.OUTSIDE_LEFT;\n\t\t} else {\n\t\t\treturn Relation.OVERLAP_LEFT;\n\t\t}\n\t}\n}\n\n/*********************************************************\nCOMPARE INTERVALS BY ENDPOINT\n**********************************************************\n\ncmp functions for sorting intervals (ascending) based on\nendpoint low or high\n\nuse with array.sort()\n\n**********************************************************/\n\nfunction _make_interval_cmp(low) {\n\treturn function cmp (a, b) {\n\t\tlet e1, e2;\n\t\tif (low) {\n\t\t\te1 = [a.low, false, a.lowInclude, a.singular];\n\t\t\te2 = [b.low, false, b.lowInclude, a.singular];\n\t\t} else {\n\t\t\te1 = [a.high, true, a.highInclude, a.singular];\n\t\t\te2 = [b.high, true, b.highInclude, a.singular];\n\t\t}\n\t\treturn endpoint.cmp(e1, e2);\n\t}\n}\n\n\n\n/**\n *  Create interval from two endpoints\n */\n\nfunction fromEndpoints(endpointLow, endpointHigh) {\n\tlet [low, low_right, low_closed, low_singular] = endpointLow;\n\tlet [high, high_right, high_closed, high_singular] = endpointHigh;\n\tif (low_right) {\n\t\tthrow new IntervalError(\"illegal endpointLow - bracket must be left\");\n\t}\n\tif (!high_right) {\n\t\tthrow new IntervalError(\"illegal endpointHigh - bracket must be right\");\n\t}\n\treturn new Interval(low, high, low_closed, high_closed);\n};\n\n\n// intersect two intervals\nfunction intersect(a, b) {\n\tlet rel = compare(a, b);\n\tif (rel == Relation.OUTSIDE_LEFT) {\n\t\treturn [];\n\t} else if (rel == Relation.OVERLAP_LEFT) {\n\t\treturn [Interval.fromEndpoints(b.endpointLow, a.endpointHigh)];\n\t} else if (rel == Relation.COVERS) {\n\t\treturn [b];\n\t} else if (rel == Relation.EQUALS) {\n\t\treturn [a]; // or b\n\t} else if (rel == Relation.COVERED) {\n\t\treturn [a];\n\t} else if (rel == Relation.OVERLAP_RIGHT) {\n\t\treturn [Interval.fromEndpoints(a.endpointLow, b.endpointHigh)];\n\t} else if (rel == Relation.OUTSIDE_RIGHT) {\n\t\treturn [];\n\t}\n}\n\n// union of two intervals\nfunction union(a, b) {\n\tlet rel = compare(a, b);\n\tif (rel == Relation.OUTSIDE_LEFT) {\n\t\t// merge\n\t\t// [aLow,aHigh)[bLow, bHigh] or [aLow,aHigh](bLow, bHigh]\n\t\tif (a.high == b.low) {\n\t\t\treturn [Interval.fromEndpoints(a.endpointLow, b.endpointHigh)]; \n\t\t} else {\n\t\t\treturn [a, b];\n\t\t}\n\t} else if (rel == Relation.OVERLAP_LEFT) {\n\t\treturn [Interval.fromEndpoints(a.endpointLow, b.endpointHigh)];\n\t} else if (rel == Relation.COVERS) {\n\t\treturn [a];\n\t} else if (rel == Relation.EQUALS) {\n\t\treturn [a]; // or b\n\t} else if (rel == Relation.COVERED) {\n\t\treturn [b];\n\t} else if (rel == Relation.OVERLAP_RIGHT) {\n\t\treturn [Interval.fromEndpoints(b.endpointLow, a.endpointHigh)];\n\t} else if (rel == Relation.OUTSIDE_RIGHT) {\n\t\t// merge\n\t\t// [bLow,bHigh)[aLow, aHigh] or [bLow,bHigh](aLow, aHigh]\n\t\tif (a.high == b.low) {\n\t\t\treturn [Interval.fromEndpoints(b.endpointLow, a.endpointHigh)]; \n\t\t} else {\n\t\t\treturn [b, a];\n\t\t}\n\t}\n}\n\n// intersection of multiple intervals\nfunction intersectAll(intervals) {\n\tintervals.sort(Interval.cmpLow);\n\tif (intervals.length <= 1) {\n\t\treturn intervals;\n\t}\n\tconst result = [intervals.shift()];\n\twhile (intervals.length > 0) {\n\t\tlet prev = result.pop();\n\t\tlet next = intervals.shift()\n\t\tresult.push(...Interval.intersect(prev, next));\n\t}\n\treturn result;\n}\n\n// union of multiple interval\nfunction unionAll(intervals) {\n\tintervals.sort(Interval.cmpLow);\n\tif (intervals.length <= 1) {\n\t\treturn intervals;\n\t}\n\tconst result = [intervals.shift()];\n\twhile (intervals.length > 0) {\n\t\tlet prev = result.pop();\n\t\tlet next = intervals.shift()\n\t\tresult.push(...Interval.union(prev, next));\n\t}\n\treturn result;\n}\n\n\n/*********************************************************\nINTERVAL CLASS\n**********************************************************/\n\nclass Interval {\n\n\t/*\n\t\tAdd static variables to Interval class.\n\t*/\n\tstatic Relation = Relation;\n\tstatic Match = Match;\n\tstatic cmpLow = _make_interval_cmp(true);\n\tstatic cmpHigh = _make_interval_cmp(false);\n\tstatic fromEndpoints = fromEndpoints;\n\tstatic intersect = intersect;\n\tstatic union = union;\n\tstatic intersectAll = intersectAll;\n\tstatic unionAll = unionAll;\n\n\t// private variables\n\n\t/*\n\t\tConstructor\n\t*/\n\tconstructor (low, high, lowInclude, highInclude) {\n\t\tvar lowIsNumber = isNumber(low);\n\t\t// new Interval(3.0) defines singular - low === high\n\t\tif (lowIsNumber && high === undefined) high = low;\n\t\tif (!isNumber(low)) throw new IntervalError(\"low not a number\");\n\t\tif (!isNumber(high)) throw new IntervalError(\"high not a number\");\n\t\tif (low > high) throw new IntervalError(\"low > high\");\n\t\tif (low === high) {\n\t\t\tlowInclude = true;\n\t\t\thighInclude = true;\n\t\t}\n\t\tif (low === -Infinity) lowInclude = true;\n\t\tif (high === Infinity) highInclude = true;\n\t\tif (lowInclude === undefined) lowInclude = true;\n\t\tif (highInclude === undefined) highInclude = false;\n\t\tif (typeof lowInclude !== \"boolean\") throw new IntervalError(\"lowInclude not boolean\");\n\t\tif (typeof highInclude !== \"boolean\") throw new IntervalError(\"highInclude not boolean\");\n\t\tthis._low = low;\n\t\tthis._high = high;\n\t\tthis._lowInclude = lowInclude;\n\t\tthis._highInclude = highInclude;\n\t\tthis._length = this._high - this._low;\n\t\tthis._singular = (this._low === this._high);\n\t\tthis._finite = (isFinite(this._low) && isFinite(this._high));\n\n\t\t/*\n\t\t\tAccessors for full endpoint representationo\n\t\t\t[value (number), right (bool), closed (bool)]\n\n\t\t\t- use with inside(endpoint, interval)\n\t\t*/\n\t\tthis._endpointLow = endpoint.create(this._low, false, this._lowInclude, this._singular);\n\t\tthis._endpointHigh = endpoint.create(this._high, true, this._highInclude, this._singular);\n\t}\n\n\t// accessors\n\tget low () {return this._low;}\n\tget high () {return this._high;}\n\tget lowInclude () {return this._lowInclude;}\n\tget highInclude () {return this._highInclude;}\n\tget length () {return this._length;}\n\tget singular () {return this._singular;}\n\tget finite () {return this._finite;}\n\tget endpointLow () {return this._endpointLow;}\n\tget endpointHigh () {return this._endpointHigh;}\n\t\n\t/**\n\t *  Instance methods\n\t */\n\n\ttoString () {\n\t\tconst toString = endpoint.toString;\n\t\tif (this._singular) {\n\t\t\tlet p = this._endpointLow[0];\n\t\t\treturn `[${p}]`;\n\t\t} else {\n\t\t\tlet low = endpoint.toString(this._endpointLow);\n\t\t\tlet high = endpoint.toString(this._endpointHigh);\n\t\t\treturn `${low},${high}`;\n\t\t}\n\t};\n\n\tcovers_endpoint (p) {\n\t\tlet leftof = endpoint.leftof(p, this._endpointLow);\n\t\tlet rightof = endpoint.rightof(p, this._endpointHigh);\n\t\treturn !leftof && !rightof;\n\t}\n\n\tcompare (other) {\n\t\treturn compare(this, other);\n\t}\n\n\tequals (other) {\n\t\treturn compare(this, other) == Relation.EQUALS;\n\t}\n\n\t/*\n\t\tdefault mode - all except outside\n\t\t2+4+8+16+32 = 62\n\t*/\n\tmatch (other, mask=MATCH_COVERS) {\n\t\tlet relation = compare(this, other);\n\t\treturn Boolean(mask & relation);\n\t}\n}\n\nexport default Interval;\n\n","/*\n\tCopyright 2020\n\tAuthor : Ingar Arntzen\n\n    This file is part of the Timingsrc module.\n\n    Timingsrc is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Timingsrc is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport endpoint from './endpoint.js';\nimport Interval from './interval.js';\n\n\n// sort func\nconst cmp = function (a, b) {return a - b;};\n\n/*******************************************************************\n BASIC\n*******************************************************************/\n\nexport function equalVectors(vector_a, vector_b) {\n    let pos = vector_a.position == vector_b.position;\n    let vel = vector_a.velocity == vector_b.velocity;\n    let acc = vector_a.acceleration == vector_b.acceleration;\n    let ts = vector_a.timestamp == vector_b.timestamp;\n    return pos && vel && acc && ts;\n};\n\n\nexport function copyVector(vector) {\n    return {\n        position: vector.position,\n        velocity: vector.velocity,\n        acceleration: vector.acceleration,\n        timestamp: vector.timestamp\n    }\n};\n\n/*\n    Calculate vector snapshot for motion defined by vector at time ts\n\n    vector: [p0,v0,a0,t0]\n    t0 and ts are absolute time from same clock, in seconds\n*/\n\nexport function calculateVector(vector, ts) {\n\tif (ts === undefined) {\n\t    throw new Error (\"no ts provided for calculateVector\");\n\t}\n\tconst deltaSec = ts - vector.timestamp;\n\treturn {\n\t\tposition : vector.position + vector.velocity*deltaSec + 0.5*vector.acceleration*deltaSec*deltaSec,\n\t\tvelocity : vector.velocity + vector.acceleration*deltaSec,\n\t\tacceleration : vector.acceleration,\n\t\ttimestamp : ts\n\t};\n};\n\n\n/*\n    Calculate direction of motion at time ts\n    1 : forwards, -1 : backwards: 0, no movement\n*/\nexport function calculateDirection(vector, ts) {\n    /*\n      Given initial vector calculate direction of motion at time t\n      (Result is valid only if (t > vector[T]))\n      Return Forwards:1, Backwards -1 or No-direction (i.e. no-motion) 0.\n      If t is undefined - t is assumed to be now.\n    */\n    let freshVector;\n    if (ts == undefined) {\n        freshVector = vector;\n    } else {\n        freshVector = calculateVector(vector, ts);\n    }\n    // check velocity\n    let direction = cmp(freshVector.velocity, 0.0);\n    if (direction === 0) {\n        // check acceleration\n        direction = cmp(vector.acceleration, 0.0);\n    }\n    return direction;\n};\n\n\n/*\n    isMoving\n\n    returns true if motion is moving else false\n*/\nexport function isMoving(vector) {\n    return (vector.velocity !== 0.0 || vector.acceleration !== 0.0);\n};\n\n\n/*******************************************************************\n RANGE\n*******************************************************************/\n\n//\tRANGE STATE is used for managing/detecting range violations.\nexport const RangeState = Object.freeze({\n    INIT : \"init\",\n    INSIDE: \"inside\",\n    OUTSIDE_LOW: \"outsidelow\",\n    OUTSIDE_HIGH: \"outsidehigh\"\n});\n\n/*\n\tA snapshot vector is checked with respect to range,\n\tcalclulates correct RangeState (i.e. INSIDE|OUTSIDE)\n*/\nexport function correctRangeState(vector, range) {\n    const {position: p, velocity: v, acceleration: a} = vector;\n\tif (p > range[1]) return RangeState.OUTSIDE_HIGH;\n\tif (p < range[0]) return RangeState.OUTSIDE_LOW;\n\t// corner cases\n\tif (p === range[1]) {\n\t\tif (v > 0.0) return RangeState.OUTSIDE_HIGH;\n\t\tif (v === 0.0 && a > 0.0) return RangeState.OUTSIDE_HIGH;\n\t} else if (p === range[0]) {\n\t    if (v < 0.0) return RangeState.OUTSIDE_LOW;\n\t    if (v == 0.0 && a < 0.0) return RangeState.OUTSIDE_HIGH;\n\t}\n\treturn RangeState.INSIDE;\n};\n\n/*\n\n\tA snapshot vector is checked with respect to range.\n\tReturns vector corrected for range violations, or input vector unchanged.\n*/\nexport function checkRange(vector, range) {\n\tconst state = correctRangeState(vector, range);\n\tif (state !== RangeState.INSIDE) {\n\t\t// protect from range violation\n\t\tvector.velocity = 0.0;\n\t\tvector.acceleration = 0.0;\n\t\tif (state === RangeState.OUTSIDE_HIGH) {\n\t\t\tvector.position = range[1];\n\t\t} else vector.position = range[0];\n\t}\n\treturn vector;\n};\n\n\n/*\n    Return tsEndpoint of (first) range intersect if any.\n*/\nexport function rangeIntersect(vector, range) {\n    let t0 = vector.timestamp;\n    // Time delta to hit rangeLeft\n    let deltaLeft = calculateMinPositiveRealSolution(vector, range[0]);\n    // Time delta to hit rangeRight\n    let deltaRight = calculateMinPositiveRealSolution(vector, range[1]);\n    // Pick the appropriate solution\n    if (deltaLeft !== undefined && deltaRight !== undefined) {\n        if (deltaLeft < deltaRight) {\n            return [t0 + deltaLeft, range[0]];\n        }\n        else\n            return [t0 + deltaRight, range[1]];\n    }\n    else if (deltaLeft !== undefined)\n        return [t0 + deltaLeft, range[0]];\n    else if (deltaRight !== undefined)\n        return [t0 + deltaRight, range[1]];\n    else return [undefined, undefined];\n}\n\n\n/*******************************************************************\n EQUATIONS\n*******************************************************************/\n\n/*\n    hasRealSolution\n\n    Given motion determined from p,v,a,t.\n    Determine if equation p(t) = p + vt + 0.5at^2 = x\n    has solutions for some real number t.\n*/\n\nfunction hasRealSolution (p,v,a,x) {\n\tif ((Math.pow(v,2) - 2*a*(p-x)) >= 0.0) return true;\n\telse return false;\n};\n\n\n/*\n    calculateRealSolution\n\n    Given motion determined from p,v,a,t.\n    Determine if equation p(t) = p + vt + 0.5at^2 = x\n    has solutions for some real number t.\n    Calculate and return real solutions, in ascending order.\n*/\n\nfunction calculateRealSolutions(p,v,a,x) {\n\t// Constant Position\n\tif (a === 0.0 && v === 0.0) {\n\t    if (p != x) return [];\n\t    else return [0.0];\n\t}\n\t// Constant non-zero Velocity\n\tif (a === 0.0) return [(x-p)/v];\n\t// Constant Acceleration\n\tif (hasRealSolution(p,v,a,x) === false) return [];\n\t// Exactly one solution\n\tconst discriminant = v*v - 2*a*(p-x);\n\tif (discriminant === 0.0) {\n\t    return [-v/a];\n\t}\n\tconst sqrt = Math.sqrt(Math.pow(v,2) - 2*a*(p-x));\n\tconst d1 = (-v + sqrt)/a;\n\tconst d2 = (-v - sqrt)/a;\n\treturn [Math.min(d1,d2),Math.max(d1,d2)];\n};\n\n\n/*\n    calculatePositiveRealSolutions\n\n    Given motion determined from p,v,a,t.\n    Determine if equation p(t) = p + vt + 0.5at^2 = x\n    has solutions for some real number t.\n    Calculate and return positive real solutions, in ascending order.\n*/\n\nfunction calculatePositiveRealSolutions(p,v,a,x) {\n\tconst res = calculateRealSolutions(p,v,a,x);\n\tif (res.length === 0) return [];\n\telse if (res.length == 1) {\n\t    if (res[0] > 0.0) {\n\t\t\treturn [res[0]];\n\t    }\n\t    else return [];\n\t}\n\telse if (res.length == 2) {\n\t    if (res[1] < 0.0) return [];\n\t    if (res[0] > 0.0) return [res[0], res[1]];\n\t    if (res[1] > 0.0) return [res[1]];\n\t    return [];\n\t}\n\telse return [];\n};\n\n\n/*\n    calculateMinPositiveRealSolution\n\n    Given motion determined from p,v,a,t.\n    Determine if equation p(t) = p + vt + 0.5at^2 = x\n    has solutions for some real number t.\n    Calculate and return the least positive real solution.\n*/\nfunction calculateMinPositiveRealSolution(vector, x) {\n    const {position: p, velocity: v, acceleration: a} = vector;\n\tconst res = calculatePositiveRealSolutions(p,v,a,x);\n\tif (res.length === 0) {\n        return;\n    }\n\telse return res[0];\n};\n\n\n/*\n    calculateDelta\n\n\n    Given motion determined from p0,v0,a0 (initial conditions or snapshot),\n    Supply two posisions, posBefore < p0 < posAfter.\n    Calculate which of these positions will be reached first,\n    if any, by the movement described by the vector.\n    In addition, calculate when this position will be reached.\n    Result will be expressed as time delta relative to t0, if solution exists,\n    and a flag to indicate Before (false) or After (true)\n    Note: t1 == (delta + t0) is only guaranteed to be in the\n    future as long as the function\n    is evaluated at time t0 or immediately after.\n*/\nexport function calculateDelta(vector, range) {\n\t// Time delta to hit posBefore\n\tlet deltaBeforeSec = calculateMinPositiveRealSolution(vector, range[0]);\n\t// Time delta to hit posAfter\n\tlet deltaAfterSec = calculateMinPositiveRealSolution(vector, range[1]);\n    // Infinity is no good solution\n    if (deltaBeforeSec == Infinity) {\n        deltaBeforeSec = undefined;\n    }\n    if (deltaAfterSec == Infinity) {\n        deltaAfterSec = undefined;\n    }\n    // Pick the appropriate solution\n\tif (deltaBeforeSec !== undefined && deltaAfterSec !== undefined) {\n\t    if (deltaBeforeSec < deltaAfterSec)\n\t\t\treturn [deltaBeforeSec, range[0]];\n\t    else\n\t\t\treturn [deltaAfterSec, range[1]];\n\t}\n\telse if (deltaBeforeSec !== undefined)\n\t    return [deltaBeforeSec, range[0]];\n\telse if (deltaAfterSec !== undefined)\n\t    return [deltaAfterSec, range[1]];\n\telse return [undefined, undefined];\n};\n\n\n/*******************************************************************\n TIME_INTERVAL POS_INTERVAL\n*******************************************************************/\n\n/*\n    posInterval_from_timeInterval\n\n    given\n    - a time interval\n    - a vector describing motion within the time interval\n    figure out the smallest interval (of positions)\n    that covers all possible positions during the time interval\n*/\n\nexport function posInterval_from_timeInterval (timeInterval, vector) {\n\n    /*\n        no motion or singular time interval\n    */\n    if (!isMoving(vector) || timeInterval.singular) {\n        return new Interval(vector.position);\n    }\n\n    let t0 = timeInterval.low;\n    let t1 = timeInterval.high;\n    let t0_closed = timeInterval.lowInclude;\n    let t1_closed = timeInterval.highInclude;\n\n    let vector0 = calculateVector(vector, t0);\n    let p0 = vector0.position;\n    let v0 = vector0.velocity;\n    let a0 = vector0.acceleration;\n    let p1 = calculateVector(vector, t1).position;\n\n    if (a0 != 0) {\n\n        /*\n            motion, with acceleration\n\n            position over time is a parabola\n            figure out if extrema happens to occor within\n            timeInterval. If it does, extreme point is endpoint in\n            position Interval. p0 or p1 will be the other\n            interval endpoint.\n\n            I extreme point is not occuring within timeInterval,\n            interval endpoint will be p0 and p1.\n\n            general parabola\n            y = Ax*x + Bx + C\n            extrema (x,y) : x = - B/2A, y = -B*B/4A + C\n\n            where t0 <= t <= t1\n            p(t) = 0.5*a0*(t-t0)*(t-t0) + v0*(t-t0) + p0,\n\n            A = a0/2, B = v0, C = p0\n\n            extrema (t_extrema, p_extrema):\n            t_extrem = -v0/a0 + t0\n            p_extrem = -v0*v0/(2*a0) + p0\n\n        */\n        let t_extrem = -v0/a0 + t0;\n        if (timeInterval.covers_endpoint(t_extrem)) {\n            let p_extrem = -v0*v0/(2.0*a0) + p0;\n            // maximal point reached in time interval\n            if (a0 > 0.0) {\n                // p_extrem is minimum\n                // figure out if p0 or p1 is maximum\n                if (p0 < p1) {\n                    return new Interval(p_extrem, p1, true, t1_closed);\n                } else {\n                    return new Interval(p_extrem, p0, true, t0_closed);\n                }\n            } else {\n                // p_extrem is maximum\n                // figure out if p0 or p1 is minimum\n                if (p0 < p1) {\n                    return new Interval(p0, p_extrem, t0_closed, true);\n                } else {\n                    return new Interval(p1, p_extrem, t1_closed, true);\n                }\n            }\n        }\n    }\n\n    /*\n        Motion, with or without acceleration,\n        yet with no extreme points within interval\n\n        positition monotonic increasing (forward velocity)\n        or decreasing (backward velocity)\n\n        extrem positions are associated with p0 and p1.\n    */\n\n    if (p0 < p1) {\n        // forward\n        return new Interval(p0, p1, t0_closed, t1_closed);\n    } else {\n        // backward\n        return new Interval(p1, p0, t1_closed, t0_closed);\n    }\n}\n\n\n/*\n    time endpoint and pos endpoints.\n\n    time is always increasing even when position\n    is decreasing. When making a timeEndpoint from\n    a posEndpoin the right/left aspect of the endpoint\n    needs to be flipped.\n\n    ts - the value of the timeEndpoint, ie. the time when\n         motion will pass over posEndpoing\n    direction - direction of motion at time ts\n*/\n\nexport function timeEndpoint_from_posEndpoint(posEndpoint, ts, direction) {\n    let [pos, right, close, singular] = posEndpoint;\n    // flip right/left if direction is backwards\n    if (direction < 0 && right !== undefined) {\n        right = !right\n    }\n    return [ts, right, close, singular];\n}\n\n\n/*******************************************************************\n ENDPOINT EVENTS\n*******************************************************************/\n\n/*\n    endpointEvents\n\n    Given a motion and a set of endpoing, calculate when\n    the motion will pass by each endpoing.\n\n    Given\n    - timeInterval\n    - posInterval\n    - vector describing motion within timeInterval\n    - list of endpointItems\n\n    endpointItem\n    {\n        endpoint: [value, high, closed, singular],\n        cue: {\n            key: \"mykey\",\n            interval: new Interval(...),\n            data: {...}\n        }\n    }\n\n    Creates eventItem by adding to endpointItem\n    - tsEndpoint : timestamp endpoint (future) when motion will pass the endpoint\n    - direction: true if motion passes endpoint while moving forward\n\n    EventItems will be sorted by ts\n\n    Issue:\n\n        timeInterval [t0, t1)\n        posinterval [p0, p1)\n\n        Consider event at time t1 concerning endpoint p1)\n        This will be outside the timeInterval, but inside\n        the posInterval.\n\n        Conversely, it will be inside the next timeInterval,\n        but not the next posInterval.\n\n        This is a problem - like falling between chairs.\n\n        Resolve this by representing timestamps as endpoints too\n\n*/\n\nexport function endpointEvents (timeInterval, posInterval, vector, endpointItems) {\n\n    /*\n        no motion or singular time interval\n    */\n    if (timeInterval.singular) {\n        throw new Error(\"getEventItems: timeInterval is singular\");\n    }\n    if (!isMoving(vector)) {\n        throw new Error(\"getEventItems: no motion\")\n    }\n\n    let p0 = vector.position;\n    let v0 = vector.velocity;\n    let a0 = vector.acceleration;\n    let t0 = vector.timestamp;\n\n    let value, ts, deltas;\n    let tsEndpoint, direction;\n    let eventItems = [];\n\n    endpointItems.forEach(function(item) {\n        // check that endpoint is inside given posInterval\n        if (!posInterval.covers_endpoint(item.endpoint)) {\n            return;\n        }\n        value = item.endpoint[0];\n        // check if equation has any solutions\n        if (!hasRealSolution(p0, v0, a0, value)) {\n            return;\n        }\n        // find time when motion will pass value\n        // time delta is relative to t0\n        // could be both in history or future\n        deltas = calculateRealSolutions(p0,v0,a0, value);\n        // include any timestamp within the timeinterval\n        deltas.forEach(function(delta) {\n            ts = t0 + delta;\n            direction = calculateDirection(vector, ts);\n            tsEndpoint = timeEndpoint_from_posEndpoint(item.endpoint, ts, direction);\n            if (timeInterval.covers_endpoint(tsEndpoint)){\n                item.tsEndpoint = tsEndpoint;\n                item.direction = direction;\n                eventItems.push(item);\n            }\n        });\n    });\n\n    // sort eventItems according to tsEndpoints\n    const cmp = function (a,b) {\n        return endpoint.cmp(a.tsEndpoint, b.tsEndpoint);\n    };\n    eventItems.sort(cmp);\n    return eventItems;\n};\n\n\n/*******************************************************************\n MOTION TRANSITION\n*******************************************************************/\n\n/*\n    Figure the nature of the transition from one motion to another,\n    i.e. when old_vector is replaced by new_vector.\n\n    The time when this transition occured is given bey\n    new_vector.timestamp, by definition.\n\n    - was moving (boolean) - true if moving before change\n    - is moving (boolean) - true if moving after change\n    - pos changed (boolean) - true if position was changed instantaneously\n    - move changed (boolean) - true if movement was changed instantaneously\n\n    report changed in two independent aspects\n    - change in position (i.e. discontinuity in position)\n    - change in movement (i.e. starting, stopping, changed)\n\n    These are represented as\n    - PosDelta\n    - MoveDelta\n\n    return [PosDelta, MoveDelta]\n*/\n\n\nexport class MotionDelta {\n\n\n    static PosDelta = Object.freeze({\n        NOOP: 0,                // no change in position\n        CHANGE: 1               // change in position\n    });\n\n\n    static MoveDelta = Object.freeze({\n        NOOP: 0,                // no change in movement, not moving\n        NOOP_MOVING: 1,         // no change in movement, moving\n        START: 2,               // not moving -> moving\n        CHANGE: 3,              // keep moving, movement changed\n        STOP: 4                 // moving -> not moving\n    });\n\n    constructor (old_vector, new_vector) {\n        let ts = new_vector.timestamp;\n        let is_moving = isMoving(new_vector)\n        let init = (old_vector == undefined || old_vector.position == undefined);\n        const PosDelta = MotionDelta.PosDelta;\n        const MoveDelta = MotionDelta.MoveDelta;\n\n        if (init) {\n            /*\n                Possible to introduce\n                PosDelta.INIT here instead of PosDelta.CHANGE\n                Not sure if this is needed.\n            */\n            if (is_moving) {\n                this._mc = [PosDelta.CHANGE, MoveDelta.START];\n            } else {\n                this._mc = [PosDelta.CHANGE, MoveDelta.NOOP];\n            }\n        } else {\n            let was_moving = isMoving(old_vector);\n            let end_vector = calculateVector(old_vector, ts);\n            let start_vector = calculateVector(new_vector, ts);\n\n            // position change\n            let pos_changed = (end_vector.position != start_vector.position);\n            let pct = (pos_changed) ? PosDelta.CHANGE : PosDelta.NOOP;\n\n            // movement change\n            let mct;\n            if (was_moving && is_moving) {\n                let vel_changed = (end_vector.velocity != start_vector.velocity);\n                let acc_changed = (end_vector.acceleration != start_vector.acceleration);\n                let move_changed = (vel_changed || acc_changed);\n                if (move_changed) {\n                    mct = MoveDelta.CHANGE;\n                } else {\n                    mct = MoveDelta.NOOP_MOVING;\n                }\n            } else if (!was_moving && is_moving) {\n                mct = MoveDelta.START;\n            } else if (was_moving && !is_moving) {\n                mct = MoveDelta.STOP;\n            } else if (!was_moving && !is_moving) {\n                mct = MoveDelta.NOOP;\n            }\n            this._mc = [pct, mct];\n        }\n    }\n\n    get posDelta () {\n        return this._mc[0];\n    }\n\n    get moveDelta () {\n        return this._mc[1]\n    }\n\n    toString() {\n        const PosDelta = MotionDelta.PosDelta;\n        const MoveDelta = MotionDelta.MoveDelta;\n        let str = (this.posDelta == PosDelta.CHANGE) ? \"jump, \" : \"\";\n        if (this.moveDelta == MoveDelta.START) {\n            str += \"movement started\";\n        } else if (this.moveDelta == MoveDelta.CHANGE) {\n            str += \"movement changed\";\n        } else if (this.moveDelta == MoveDelta.STOP) {\n            str += \"movement stopped\";\n        } else if (this.moveDelta == MoveDelta.NOOP_MOVING) {\n            str += \"movement noop - moving\";\n        } else if (this.moveDelta == MoveDelta.NOOP) {\n            str += \"movement noop - not moving\";\n        }\n        return str;\n    }\n}\n\n\n// return module object\n/*\nexport default {\n    isMoving,\n    // equalVectors,\n    // copyVector,\n\tcalculateVector,\n\tcalculateDirection,\n\t// calculateMinPositiveRealSolution,\n\tcalculateDelta,\n\t// correctRangeState,\n\t// checkRange,\n\t// RangeState,\n    posInterval_from_timeInterval,\n    endpointEvents,\n    rangeIntersect,\n    MotionDelta\n};\n*/\n\n","/*\n    Copyright 2020\n    Author : Ingar Arntzen\n\n    This file is part of the Timingsrc module.\n\n    Timingsrc is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Timingsrc is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport Interval from './interval.js';\n\n// check if n is a number\nfunction is_number(n) {\n\tvar N = parseFloat(n);\n    return (n==N && !isNaN(N));\n};\n\n\n/*\n    utility function for protecting against duplicates\n*/\nfunction unique(A) {\n    return [...new Set(A)];\n};\n\n\n\n/*\n    batch inserts and removes have two strategies\n    1) change-sort\n    2) splice\n\n    simple rule by measurement\n    splice is better for batchlength <= 100 for both insert and remove\n*/\nfunction resolve_approach(arrayLength, batchLength) {\n    if (arrayLength == 0) {\n        return \"sort\";\n    }\n    return (batchLength <= 100) ? \"splice\" : \"sort\";\n};\n\n\nclass BinarySearchError extends Error {\n\n    constructor(message) {\n        super(message);\n        this.name = \"BinarySearchError\";\n    }\n\n}\n\n\n/*\n\nBINARY SEARCH\n\n- based on sorted list of unique elements\n- implements protection against duplicates\n\n\nPublic API\n- update (remove_elements, insert_elements)\n- lookup (interval) - returns list for all elements\n- remove (interval) - removes elements within interval\n- has (element)     - returns true if element exists with value == element, else false\n- get (element)     - returns element with value if exists, else undefined\n- values ()         - returns iterable for all elements\n- indexOf(element)  - returns index of element\n- indexOfElements(elements)\n- getByIndex(index) - returns element at given index\n\n\n*/\n\nfunction cmp(a, b) {return a-b;};\n\n\nclass BinarySearch {\n\n    constructor(options) {\n        this.array = [];\n        this.options = options || {};\n    }\n\n\n    /**\n     * Binary search on sorted array\n     * @param {*} searchElement The item to search for within the array.\n     * @return {Number} The index of the element which defaults to -1 when not found.\n     */\n    binaryIndexOf(searchElement) {\n        let minIndex = 0;\n        let maxIndex = this.array.length - 1;\n        let currentIndex;\n        let currentElement;\n        while (minIndex <= maxIndex) {\n    \t\tcurrentIndex = (minIndex + maxIndex) / 2 | 0;\n    \t\tcurrentElement = this.array[currentIndex];\n            if (currentElement < searchElement) {\n                minIndex = currentIndex + 1;\n            } else if (currentElement > searchElement) {\n                maxIndex = currentIndex - 1;\n            } else {\n                // found\n    \t\t    return currentIndex;\n    \t\t}\n        }\n        // not found - indicate at what index the element should be inserted\n    \treturn ~maxIndex;\n\n        // NOTE : ambiguity\n\n        /*\n        search for an element that is less than array[0]\n        should return a negative value indicating that the element\n        was not found. Furthermore, as it escapes the while loop\n        the returned value should indicate the index that this element\n        would have had - had it been there - as is the idea of this bitwise\n        operator trick\n\n        so, it follows that search for value of minimum element returns 0 if it exists, and 0 if it does not exists\n        this ambiguity is compensated for in relevant methods\n        */\n    };\n\n\n    /*\n        utility function for resolving ambiguity\n    */\n    isFound(index, x) {\n        if (index > 0) {\n            return true;\n        }\n        if (index == 0 && this.array.length > 0 && this.array[0] == x) {\n            return true;\n        }\n        return false;\n    };\n\n    /*\n        returns index of value or -1\n    */\n    indexOf(x) {\n        var index = this.binaryIndexOf(x);\n        return (this.isFound(index, x)) ? index : -1;\n    };\n\n    indexOfElements(elements) {\n        let x, index;\n        let indexes = [];\n        for (let i=0; i<elements.length; i++) {\n            x = elements[i];\n            index = this.indexOf(x);\n            if (index > -1) {\n                indexes.push(index);\n            }\n        }\n        return indexes;\n    };\n\n    /*\n        element exists with value\n    */\n    has(x) {\n        return (this.indexOf(x) > -1) ? true : false;\n    };\n\n    get(index) {\n        return this.array[index];\n    };\n\n\n\n    /*\n        REMOVE\n        Removes all elements with given values\n        search for each one and splice remove them individually\n        (reverse order)\n\n        INSERT\n        binarysearch and splice\n        insert - binarysearch and splice\n\n        WARNING - there should be no need to insert elements that are already\n        present in the array. This function drops such duplicates\n    */\n    _update_splice(to_remove, to_insert, options) {\n\n        // REMOVE\n        if (this.array.length > 0) {\n            let indexes = this.indexOfElements(to_remove);\n            /*\n                sort indexes to make sure we are removing elements\n                in backwards order\n                optimization\n                - if elements were sorted in the first place this should not be necessary\n            */\n            indexes.sort(function(a,b){return a-b;});\n            for (let i=indexes.length-1; i > -1; i--) {\n                this.array.splice(indexes[i], 1);\n            }\n        }\n\n        // INSERT\n        let x, index;\n        let len = to_insert.length;\n        for (let i=0; i<len; i++) {\n            x = to_insert[i];\n            index = this.binaryIndexOf(x);\n            if (!this.isFound(index, x)) {\n                // insert at correct place\n                this.array.splice(Math.abs(index), 0, x);\n            }\n        }\n    };\n\n\n    /*\n        remove - flag - sort to end and remove\n\n        Removes all elements with given values\n        - visit all elements - set their value to Infinite\n        - sort O(N) - native\n        - splice off Infinity values at end\n\n        insert - concat and sort\n\n        by doing both remove and insert in one operation,\n        sorting can be done only once.\n    */\n    _update_sort(to_remove, to_insert, options) {\n        // REMOVE\n        if (this.array.length > 0 && to_remove.length > 0) {\n            // visit all elements and set their value to undefined\n            // undefined values will be sorted to the end of the array\n            let indexes = this.indexOfElements(to_remove);\n            for (let i=0; i<indexes.length;i++) {\n                this.array[indexes[i]] = undefined;\n            }\n        }\n        // INSERT\n        // concat\n        this.array = this.array.concat(to_insert);\n        // sort\n        this.array.sort(cmp);\n        // remove undefined values at the end if any\n        if (to_remove.length > 0) {\n            let index = this.array.indexOf(undefined);\n            if (index > -1) {\n                this.array.splice(index, this.array.length-index);\n            }\n        }\n        // remove duplicates\n        this.array = unique(this.array);\n    };\n\n\n    /*\n        Update - removing and inserting elements in one operation\n\n        a single element should only be present once in the list, thus avoiding\n        multiple operations to one element. This is presumed solved externally.\n        - also objects must not be members of both lists.\n\n        - internally selects the best method - searchsplice or concatsort\n        - selection based on relative sizes of existing elements and new elements\n\n    */\n    update(to_remove, to_insert, options) {\n        let size = to_remove.length + to_insert.length;\n        if (size == 0) {\n            return;\n        }\n\n        // regular case\n        let approach = resolve_approach(this.array.length, size);\n        if (approach == \"splice\") {\n            this._update_splice(to_remove, to_insert, options);\n        } else if (approach == \"sort\"){\n            this._update_sort(to_remove, to_insert, options);\n        }\n    };\n\n\n    /*\n        Accessors\n    */\n\n    getMinimum() {\n        return (this.array.length > 0) ? this.array[0] : undefined;\n    };\n\n    getMaximum = function () {\n        return (this.array.length > 0) ? this.array[this.array.length - 1] : undefined;\n    };\n\n\n    /*\n        Internal search functions\n    */\n\n    /*\n       Find index of largest value less than x\n       Returns -1 if noe values exist that are less than x\n     */\n    ltIndexOf(x) {\n        var i = this.binaryIndexOf(x);\n        if (this.isFound(i, x)) {\n            /*\n                found - x is found on index i\n                consider element to the left\n                if we are at the left end of the array nothing is found\n                return -1\n            */\n            if (i > 0) {\n                return i-1;\n            } else {\n                return -1;\n            }\n        } else {\n            /*\n                not found - Math.abs(i) is index where x should be inserted\n                => Math.abs(i) - 1 is the largest value less than x\n            */\n            return Math.abs(i)-1;\n        }\n    };\n\n    /*\n       Find index of rightmost value less than x or equal to x\n       Returns -1 if noe values exist that are less than x or equal to x\n     */\n    leIndexOf(x) {\n        var i = this.binaryIndexOf(x);\n        if (this.isFound(i, x)) {\n            /*\n                element found\n            */\n            return i;\n        } else {\n            // not found - consider element to the left\n            i = Math.abs(i) - 1;\n            return (i >= 0) ? i : -1;\n        }\n    };\n\n    /*\n       \tFind index of leftmost value greater than x\n       \tReturns -1 if no values exist that are greater than x\n    */\n\n    gtIndexOf(x) {\n        var i = this.binaryIndexOf(x);\n        if (this.isFound(i, x)) {\n            /*\n                found - x is found on index i\n                if there are no elements to the right return -1\n            */\n            if (i < this.array.length -1) {\n                return i+1;\n            } else {\n                return -1;\n            }\n        } else {\n            /*\n                not found - Math.abs(i) is index where x should be inserted\n                => Math.abs(i) is the smallest value greater than x\n                unless we hit the end of the array, in which cas no smalles value\n                exist which is greater than x\n            */\n            let idx = Math.abs(i);\n            return (idx < this.array.length) ? idx : -1;\n        }\n    };\n\n\n    /*\n       Find index of leftmost value which is greater than x or equal to x\n       Returns -1 if noe values exist that are greater than x or equal to x\n     */\n\n    geIndexOf(x) {\n        var i = this.binaryIndexOf(x);\n        if (this.isFound(i, x)) {\n            /*\n                found element\n            */\n            return i;\n        } else {\n            // not found - consider the element where x would be inserted\n            i = Math.abs(i);\n            return (i<this.array.length) ? i : -1;\n        }\n    };\n\n    /*\n        lookup start and end indexes of elements within interval\n        for use with slice operation\n        returns undefined if no elements are found\n    */\n    lookupIndexes(interval) {\n        if (interval === undefined)\n            interval = new Interval(-Infinity, Infinity, true, true);\n        if (interval instanceof Interval === false)\n            throw new BinarySearchError(\"lookup requires Interval argument\");\n\n        // interval represents a single point\n        if (interval.singular) {\n            let index = this.indexOf(interval.low);\n            if (index > -1) {\n                return [index, index + 1];\n            } else {\n                return [undefined, undefined];\n            }\n        }\n\n        // regular non-singular interval\n        var start_index = -1, end_index = -1;\n        if (interval.lowInclude) {\n            start_index = this.geIndexOf(interval.low);\n        } else {\n            start_index = this.gtIndexOf(interval.low);\n        }\n        if (start_index === -1) {\n            return [undefined, undefined];\n        }\n        if (interval.highInclude) {\n            end_index = this.leIndexOf(interval.high);\n        } else {\n            end_index = this.ltIndexOf(interval.high);\n        }\n        if (end_index === -1) { // not reachable - I think\n            return [undefined, undefined];\n        }\n        return [start_index, end_index + 1];\n    };\n\n\n    /*\n        lookup by interval\n    */\n    lookup(interval) {\n        let [start, end] = this.lookupIndexes(interval);\n        return (start != undefined) ? this.array.slice(start, end) : [];\n    };\n\n    /*\n        remove by interval\n    */\n    remove(interval) {\n        let [start, end] = this.lookupIndexes(interval);\n        return (start != undefined) ? this.array.splice(start, end-start) : [];\n    };\n\n\n    slice(start, end) {\n        return this.array.slice(start, end);\n    };\n\n    splice(start, length) {\n        return this.array.splice(start, length);\n    };\n\n\n\n    /*\n        method for removing multiple closely placed elements in place\n        - removeList is sorted\n        - changes only affect the part of the index between first and last element\n        - move remaining elements to the left, remove elements with a single splice\n        - efficent if removelist references elements that are close to eachother\n    */\n\n    removeInSlice(removeList) {\n        if (removeList.length == 0){\n            return;\n        }\n        const low = removeList[0];\n        const high = removeList[removeList.length-1];\n        let [start, end] = this.lookupIndexes(new Interval(low, high, true, true));\n\n        let rd_ptr = start;\n        let wr_ptr = start;\n        let rm_ptr = 0;\n\n        while (rd_ptr < end) {\n            let rd_elem = this.array[rd_ptr];\n            let rm_elem = removeList[rm_ptr];\n            if (rd_elem < rm_elem) {\n                this.array[wr_ptr] = this.array[rd_ptr];\n                wr_ptr++;\n                rd_ptr++;\n            } else if (rd_elem == rm_elem) {\n                rd_ptr++;\n                rm_ptr++;\n            } else {\n                // rd_elem > rm_elem\n                rm_ptr++;\n            }\n            if (rm_ptr == removeList.length) {\n                break\n            }\n        }\n        this.array.splice(wr_ptr, rd_ptr-wr_ptr);\n    };\n\n\n    values() {\n        return this.array.values();\n    };\n\n    clear() {\n        this.array = [];\n    };\n\n    get length () {\n        return this.array.length;\n    }\n\n}\n\nexport default BinarySearch;\n\n\n\n","/*\n\tCopyright 2020\n\tAuthor : Ingar Arntzen\n\n\tThis file is part of the Timingsrc module.\n\n\tTimingsrc is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tTimingsrc is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n/*\n\tEvent\n\t- name: event name\n\t- publisher: the object which defined the event\n\t- init: true if the event suppports init events\n\t- subscriptions: subscriptins to this event\n\n*/\n\nclass Event {\n\n\tconstructor (publisher, name, options) {\n\t\toptions = options || {}\n\t\tthis.publisher = publisher;\n\t\tthis.name = name;\n\t\tthis.init = (options.init === undefined) ? false : options.init;\n\t\tthis.subscriptions = [];\n\t}\n\n\t/*\n\t\tsubscribe to event\n\t\t- subscriber: subscribing object\n\t\t- callback: callback function to invoke\n\t\t- options:\n\t\t\tinit: if true subscriber wants init events\n\t*/\n\tsubscribe (callback, options) {\n\t\tif (!callback || typeof callback !== \"function\") {\n\t\t\tthrow new Error(\"Callback not a function\", callback);\n\t\t}\n\t\tconst sub = new Subscription(this, callback, options);\n\t\tthis.subscriptions.push(sub);\n\t    // Initiate init callback for this subscription\n\t    if (this.init && sub.init) {\n\t    \tsub.init_pending = true;\n\t    \tlet self = this;\n\t    \tPromise.resolve().then(function () {\n\t    \t\tconst eArgs = self.publisher.eventifyInitEventArgs(self.name) || [];\n\t    \t\tfor (let eArg of eArgs) {\n\t    \t\t\tself.trigger(eArg, [sub], true);\n\t    \t\t}\n\t    \t\tsub.init_pending = false;\n\t    \t});\n\t    }\n\t\treturn sub\n\t}\n\n\t/*\n\t\ttrigger event\n\n\t\t- if sub is undefined - publish to all subscriptions\n\t\t- if sub is defined - publish only to given subscription\n\t*/\n\ttrigger (eArg, subs, init) {\n\t\tlet eInfo, ctx;\n\t\tfor (const sub of subs) {\n\t\t\t// ignore terminated subscriptions\n\t\t\tif (sub.terminated) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\teInfo = {\n\t\t\t\tsrc: this.publisher,\n\t\t\t\tname: this.name,\n\t\t\t\tsub: sub,\n\t\t\t\tinit: init\n\t\t\t}\n\t\t\tctx = sub.ctx || this.publisher;\n\t\t\ttry {\n\t\t\t\tsub.callback.call(ctx, eArg, eInfo);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(`Error in ${this.name}: ${sub.callback} ${err}`);\n\t\t\t}\n\t\t}\n\t}\n\n\t/*\n\tunsubscribe from event\n\t- use subscription returned by previous subscribe\n\t*/\n\tunsubscribe(sub) {\n\t\tlet idx = this.subscriptions.indexOf(sub);\n\t\tif (idx > -1) {\n\t\t\tthis.subscriptions.splice(idx, 1);\n\t\t\tsub.terminate();\n\t\t}\n\t}\n}\n\n\n/*\n\tSubscription class\n*/\n\nclass Subscription {\n\n\tconstructor(event, callback, options) {\n\t\toptions = options || {}\n\t\tthis.event = event;\n\t\tthis.name = event.name;\n\t\tthis.callback = callback\n\t\tthis.init = (options.init === undefined) ? this.event.init : options.init;\n\t\tthis.init_pending = false;\n\t\tthis.terminated = false;\n\t\tthis.ctx = options.ctx;\n\t}\n\n\tterminate() {\n\t\tthis.terminated = true;\n\t\tthis.callback = undefined;\n\t\tthis.event.unsubscribe(this);\n\t}\n}\n\n\n/*\n\n\tEVENTIFY INSTANCE\n\n\tEventify brings eventing capabilities to any object.\n\n\tIn particular, eventify supports the initial-event pattern.\n\tOpt-in for initial events per event type.\n\n\teventifyInitEventArgs(name) {\n\t\tif (name == \"change\") {\n\t\t\treturn [this._value];\n\t\t}\n\t}\n\n*/\n\nexport function eventifyInstance (object) {\n\tobject.__eventify_eventMap = new Map();\n\tobject.__eventify_buffer = [];\n\treturn object;\n};\n\n\n/*\n\tEVENTIFY PROTOTYPE\n\n\tAdd eventify functionality to prototype object\n*/\n\nexport function eventifyPrototype(_prototype) {\n\n\tfunction eventifyGetEvent(object, name) {\n\t\tconst event = object.__eventify_eventMap.get(name);\n\t\tif (event == undefined) {\n\t\t\tthrow new Error(\"Event undefined\", name);\n\t\t}\n\t\treturn event;\n\t}\n\n\t/*\n\t\tDEFINE EVENT\n\t\t- used only by event source\n\t\t- name: name of event\n\t\t- options: {init:true} specifies init-event semantics for event\n\t*/\n\tfunction eventifyDefine(name, options) {\n\t\t// check that event does not already exist\n\t\tif (this.__eventify_eventMap.has(name)) {\n\t\t\tthrow new Error(\"Event already defined\", name);\n\t\t}\n\t\tthis.__eventify_eventMap.set(name, new Event(this, name, options));\n\t};\n\n\t/*\n\t\tON\n\t\t- used by subscriber\n\t\tregister callback on event.\n\t*/\n\tfunction on(name, callback, options) {\n\t\treturn eventifyGetEvent(this, name).subscribe(callback, options);\n\t};\n\n\t/*\n\t\tOFF\n\t\t- used by subscriber\n\t\tUn-register a handler from a specfic event type\n\t*/\n\tfunction off(sub) {\n\t\treturn eventifyGetEvent(this, sub.name).unsubscribe(sub);\n\t};\n\n\n\tfunction eventifySubscriptions(name) {\n\t\treturn eventifyGetEvent(this, name).subscriptions;\n\t}\n\n\n\n\t/*\n\t\tTrigger list of eventItems on object\n\n\t\teventItem:  {name:.., eArg:..}\n\n\t\tcopy all eventItems into buffer.\n\t\trequest emptying the buffer, i.e. actually triggering events,\n\t\tevery time the buffer goes from empty to non-empty\n\t*/\n\tfunction eventifyTriggerAll(eventItems) {\n\t\tif (eventItems.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// make trigger items\n\t\t// resolve non-pending subscriptions now\n\t\t// else subscriptions may change from pending to non-pending\n\t\t// between here and actual triggering\n\t\t// make list of [ev, eArg, subs] tuples\n\t\tlet triggerItems = eventItems.map((item) => {\n\t\t\tlet {name, eArg} = item;\n\t\t\tlet ev = eventifyGetEvent(this, name);\n\t\t\tlet subs = ev.subscriptions.filter(sub => sub.init_pending == false);\n\t\t\treturn [ev, eArg, subs];\n\t\t}, this);\n\n\t\t// append trigger Items to buffer\n\t\tconst len = triggerItems.length;\n\t\tconst buf = this.__eventify_buffer;\n\t\tconst buf_len = this.__eventify_buffer.length;\n\t\t// reserve memory - set new length\n\t\tthis.__eventify_buffer.length = buf_len + len;\n\t\t// copy triggerItems to buffer\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tbuf[buf_len+i] = triggerItems[i];\n\t\t}\n\t\t// request emptying of the buffer\n\t\tif (buf_len == 0) {\n\t\t\tlet self = this;\n\t\t\tPromise.resolve().then(function() {\n\t\t\t\tfor (let [ev, eArg, subs] of self.__eventify_buffer) {\n\t\t\t\t\t// actual event triggering\n\t\t\t\t\tev.trigger(eArg, subs, false);\n\t\t\t\t}\n\t\t\t\tself.__eventify_buffer = [];\n\t\t\t});\n\t\t}\n\t}\n\n\t/*\n\t\tTrigger multiple events of same type (name)\n\t*/\n\tfunction eventifyTriggerAlike(name, eArgs) {\n\t\treturn this.eventifyTriggerAll(eArgs.map(eArg => {\n\t\t\treturn {name, eArg};\n\t\t}));\n\t}\n\n\t/*\n\t\tTrigger single event\n\t*/\n\tfunction eventifyTrigger(name, eArg) {\n\t\treturn this.eventifyTriggerAll([{name, eArg}]);\n\t}\n\n\t_prototype.eventifyDefine = eventifyDefine;\n\t_prototype.eventifyTrigger = eventifyTrigger;\n\t_prototype.eventifyTriggerAlike = eventifyTriggerAlike;\n\t_prototype.eventifyTriggerAll = eventifyTriggerAll;\n\t_prototype.eventifySubscriptions = eventifySubscriptions;\n\t_prototype.on = on;\n\t_prototype.off = off;\n};\n\n\n/*\n\tEvent Variable\n\n\tObjects with a single \"change\" event\n*/\n\nexport class EventVariable {\n\n\tconstructor (value) {\n\t\teventifyInstance(this);\n\t\tthis._value = value;\n\t\tthis.eventifyDefine(\"change\", {init:true});\n\t}\n\n\teventifyInitEventArgs(name) {\n\t\tif (name == \"change\") {\n\t\t\treturn [this._value];\n\t\t}\n\t}\n\n\tget value () {return this._value};\n\tset value (value) {\n\t\tif (value != this._value) {\n\t\t\tthis._value = value;\n\t\t\tthis.eventifyTrigger(\"change\", value);\n\t\t}\n\t}\n}\neventifyPrototype(EventVariable.prototype);\n\n/*\n\tEvent Boolean\n\n\n\tNote : implementation uses falsiness of input parameter to constructor and set() operation,\n\tso eventBoolean(-1) will actually set it to true because\n\t(-1) ? true : false -> true !\n*/\n\nexport class EventBoolean extends EventVariable {\n\tconstructor(value) {\n\t\tsuper(Boolean(value));\n\t}\n\n\tset value (value) {\n\t\tsuper.value = Boolean(value);\n\t}\n\tget value () {return super.value};\n}\n\n\n/*\n\tmake a promise which is resolved when EventBoolean changes\n\tvalue.\n*/\nexport function makePromise(eventObject, conditionFunc) {\n\tconditionFunc = conditionFunc || function(val) {return val == true};\n\treturn new Promise (function (resolve, reject) {\n\t\tlet sub = eventObject.on(\"change\", function (value) {\n\t\t\tif (conditionFunc(value)) {\n\t\t\t\tresolve(value);\n\t\t\t\teventObject.off(sub);\n\t\t\t}\n\t\t});\n\t});\n};\n\n// module api\nexport default {\n\teventifyPrototype,\n\teventifyInstance,\n\tEventVariable,\n\tEventBoolean,\n\tmakePromise\n};\n\n","/*\n    Copyright 2020\n    Author : Ingar Arntzen\n\n    This file is part of the Timingsrc module.\n\n    Timingsrc is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Timingsrc is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport eventify from './eventify.js';\n\n/*******************************************************************\n BASE OBSERVABLE MAP\n*******************************************************************/\n\n/*\n    This is a base class for observable map\n*/\n\nclass ObservableMap {\n\n    constructor (options={}) {\n        \n        this.options = options;\n\n        // Events\n        eventify.eventifyInstance(this);\n        this.eventifyDefine(\"batch\", {init:true});\n        this.eventifyDefine(\"change\", {init:true});\n        this.eventifyDefine(\"remove\", {init:false});\n    }\n\n    /**\n     *  Abstract accessor to datasource backing implementation\n     *  of observable map. Typically this is an instance of Map() class.\n     * \n     *  Must be implemented by subclass. \n     */\n\n    get datasource () {\n        throw new Error(\"not implemented\");\n    }\n\n    /***************************************************************\n     ORDERING\n    ***************************************************************/\n\n    sortOrder(options={}) {\n        // sort options override constructor options\n        let {order=this.options.order} = options;\n        if (typeof order == \"function\") {\n            return order;\n        }       \n    }\n\n    /* \n        Sort values of Observable map\n        ordering can be overidden by specifying option <order>\n        fallback to order from constructor\n        noop if no ordering is defined\n    */\n    sortValues(iter, options={}) {\n        let order = this.sortOrder(options);\n        if (typeof order == \"function\") {\n            // sort\n            // if iterable not array - convert into array ahead of sorting\n            let arr = (Array.isArray(iter)) ? iter : [...iter];\n            return arr.sort(order);\n        } else {\n            // noop\n            return iter;\n        }\n    }\n\n    /* \n        Sort items (in-place) by value {new:value, old:value} using\n        ordering function for values\n    */\n    sortItems(items) {\n        let order = this.sortOrder();        \n        if (typeof order == \"function\") {\n            items.sort(function(item_a, item_b) {\n                let cue_a = (item_a.new) ? item_a.new : item_a.old;\n                let cue_b = (item_b.new) ? item_b.new : item_b.old;\n                return order(cue_a, cue_b);\n            });\n        }\n    }\n\n    /***************************************************************\n     EVENTS\n    ***************************************************************/\n\n    /*\n        Eventify: immediate events\n    */\n    eventifyInitEventArgs(name) {\n        if (name == \"batch\" || name == \"change\") {\n            let items = [...this.datasource.entries()].map(([key, val]) => {\n                return {key:key, new:val, old:undefined};\n            });\n            // sort init items (if order defined)\n            this.sortItems(items);\n            return (name == \"batch\") ? [items] : items;\n        }\n    }\n\n    /*\n        Event Notification\n    */\n    _notifyEvents(items) {\n        // event notification\n        if (items.length == 0) {\n            return;\n        }\n        const has_update_subs = this.eventifySubscriptions(\"batch\").length > 0;\n        const has_remove_subs = this.eventifySubscriptions(\"remove\").length > 0;\n        const has_change_subs = this.eventifySubscriptions(\"change\").length > 0;\n        // update\n        if (has_update_subs) {\n            this.eventifyTrigger(\"batch\", items);\n        }\n        // change, remove\n        if (has_remove_subs || has_change_subs) {\n            for (let item of items) {\n                if (item.new == undefined && item.old != undefined) {\n                    if (has_remove_subs) {\n                        this.eventifyTrigger(\"remove\", item);\n                    }\n                } else {\n                    if (has_change_subs) {\n                        this.eventifyTrigger(\"change\", item);\n                    }\n                }\n            }\n        }\n    }\n\n\n    /***************************************************************\n     ACCESSORS\n    ***************************************************************/\n\n    get size () {\n        return this.datasource.size;\n    }\n\n    has(key) {\n        return this.datasource.has(key);\n    };\n\n    get(key) {\n        return this.datasource.get(key);\n    };\n\n    keys() {\n        return this.datasource.keys();\n    };\n\n    values() {\n        return this.datasource.values();\n    };\n\n    entries() {\n        return this.datasource.entries();\n    }\n\n\n    /***************************************************************\n     MODIFY\n    ***************************************************************/\n\n    set(key, value) {\n        let old = undefined;\n        if (this.datasource.has(key)) {\n            old = this.datasource.get(key);\n        }\n        this.datasource.set(key, value);\n        this._notifyEvents([{key: key, new:value, old: old}]);\n        return this;\n    }\n\n    delete(key) {\n        let result = false;\n        let old = undefined;\n        if (this.datasource.has(key)) {\n            old = this.datasource.get(key);\n            this.datasource.delete(key);\n            result = true;\n        }\n        this._notifyEvents([{key: key, new:undefined, old: old}]);\n        return result;\n    }\n\n    clear() {\n        // create change events for all cues\n        const items = [...this.datasource.entries()].map(([key, val]) => {\n            return {key: key, new: undefined, old: val};\n        })\n        // clear _map\n        this.datasource.clear();\n        // event notification\n        this._notifyEvents(items);\n    }\n\n}\n\neventify.eventifyPrototype(ObservableMap.prototype);\n\nexport default ObservableMap;\n","/*\n    Copyright 2020\n    Author : Ingar Arntzen\n\n    This file is part of the Timingsrc module.\n\n    Timingsrc is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Timingsrc is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport ObservableMap from '../util/observablemap.js';\nimport Interval from '../util/interval.js';\n\n/**\n *  Extends ObservableMap\n * \n *  with logic specific to collections of cues.\n */\n\nclass CueCollection extends ObservableMap {\n\n    static cmpLow(cue_a, cue_b) {\n        return Interval.cmpLow(cue_a.interval, cue_b.interval);\n    }\n\n    static cmpHigh(cue_a, cue_b) {\n        return Interval.cmpHigh(cue_a.interval, cue_b.interval);\n    }\n\n    // extend sortOrder to accept order as string\n    sortOrder(options={}) {\n        let order = options.order || super.sortOrder(options);\n        if (order == \"low\") {\n            return CueCollection.cmpLow;\n        } else if (order == \"high\") {\n            return CueCollection.cmpHigh;\n        } else {\n            if (typeof order != \"function\") {\n                return;\n            }\n        }\n        return order;\n    }\n\n    // add cues method\n    cues (options = {}) {\n        let cues = this.sortValues(this.values(), options);\n        // ensure array\n        return (Array.isArray(cues)) ? cues : [...cues];\n    }\n}\n\n// module definition\nexport default CueCollection;","/*\n    Copyright 2020\n    Author : Ingar Arntzen\n\n    This file is part of the Timingsrc module.\n\n    Timingsrc is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Timingsrc is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n/*\n    Wraps the built in setTimeout to provide a\n    Timeout that does not fire too early.\n\n    Importantly, the Timeout object manages at most\n    one timeout.\n\n    - Given clock.now() returns a value in seconds.\n    - The timeout is set with and absolute timestamp,\n      not a delay.\n*/\n\nclass Timeout {\n\n    constructor (timingObject, callback) {\n        this.tid = undefined;\n        this.to = timingObject;\n        this.callback = callback;\n    }\n\n    isSet() {\n        return this.tid != undefined;\n    }\n\n    /*\n        set timeout to point in time (seconds)\n    */\n    setTimeout(target_ts, arg) {\n        if (this.tid != undefined) {\n            throw new Error(\"at most on timeout\");\n        }\n        let now = this.to.clock.now();\n        let delay = Math.max(target_ts - now, 0) * 1000;\n        this.tid = setTimeout(this.onTimeout.bind(this), delay, target_ts, arg);\n    }\n\n    /*\n        handle timeout intended for point in time (seconds)\n    */\n    onTimeout(target_ts, arg) {\n        if (this.tid != undefined) {\n            this.tid = undefined;\n            // check if timeout was too early\n            let now = this.to.clock.now()\n            if (now < target_ts) {\n                // schedule new timeout\n                this.setTimeout(target_ts, arg);\n            } else {\n                // handle timeout\n                this.callback(now, arg);\n            }\n        }\n    }\n\n    /*\n        cancel and clear timeout if active\n    */\n    clear() {\n        if (this.tid != undefined) {\n            clearTimeout(this.tid);\n            this.tid = undefined;\n        }\n    }\n}\n\nexport default Timeout;\n","/*\n\tCopyright 2015 Norut Northern Research Institute\n\tAuthor : Ingar Mæhlum Arntzen\n\n\tThis file is part of the Timingsrc module.\n\n\tTimingsrc is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tTimingsrc is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n/*\n\tMASTER CLOCK\n\n\n\tMasterClock is the reference clock used by TimingObjects.\n\n\tIt is implemented using performance.now,\n\tbut is skewed and rate-adjusted relative to this local clock.\n\n\tThis allows it to be used as a master clock in a distributed system,\n\twhere synchronization is generally relative to some other clock than the local clock.\n\n\tThe master clock may need to be adjusted in time, for instance as a response to\n\tvarying estimation of clock skew or drift. The master clock supports an adjust primitive for this purpose.\n\n\tWhat policy is used for adjusting the master clock may depend on the circumstances\n\tand is out of scope for the implementation of the MasterClock.\n\tThis policy is implemented by the timing object. This policy may or may not\n\tprovide monotonicity.\n\n\tA change event is emitted every time the masterclock is adjusted.\n\n\tVector values define\n\t- position : absolute value of the clock in seconds\n\t- velocity : how many seconds added per second (1.0 exactly - or very close)\n\t- timestamp : timstamp from local system clock (performance) in seconds. Defines point in time where position and velocity are valid.\n\n\tIf initial vector is not provided, default value is\n\t{position: now, velocity: 1.0, timestamp: now};\n\timplying that master clock is equal to local clock.\n*/\n\nimport eventify from '../util/eventify.js';\n\n\n// Need a polyfill for performance,now as Safari on ios doesn't have it...\n(function(){\n    if (\"performance\" in window === false) {\n        window.performance = {};\n        window.performance.offset = new Date().getTime();\n    }\n    if (\"now\" in window.performance === false){\n      window.performance.now = function now(){\n        return new Date().getTime() - window.performance.offset;\n      };\n    }\n\t})();\n\n// local clock in seconds\nconst local_clock = {\n\tnow : function () {return performance.now()/1000.0;}\n};\n\nfunction calculateVector(vector, tsSec) {\n\tif (tsSec === undefined) tsSec = local_clock.now();\n\tvar deltaSec = tsSec - vector.timestamp;\n\treturn {\n\t\tposition : vector.position + vector.velocity*deltaSec,\n\t\tvelocity : vector.velocity,\n\t\ttimestamp : tsSec\n\t};\n};\n\nclass MasterClock {\n\n\tconstructor (options) {\n\t\tvar now = local_clock.now();\n\t\toptions = options || {};\n\t\tthis._vector  = {position: now, velocity: 1.0, timestamp: now};\n\t\t// event support\n\t\teventify.eventifyInstance(this);\n\t\tthis.eventifyDefine(\"change\", {init:false}); // define change event (no init-event)\n\t\t// adjust\n\t\tthis.adjust(options);\n\t};\n\n\t/*\n\t\tADJUST\n\t\t- could also accept timestamp for velocity if needed?\n\t\t- given skew is relative to local clock\n\t\t- given rate is relative to local clock\n\t*/\n\tadjust(options) {\n\t\toptions = options || {};\n\t\tvar now = local_clock.now();\n\t\tvar nowVector = this.query(now);\n\t\tif (options.skew === undefined && options.rate === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tthis._vector = {\n\t\t\tposition : (options.skew !== undefined) ? now + options.skew : nowVector.position,\n\t\t\tvelocity : (options.rate !== undefined) ? options.rate : nowVector.velocity,\n\t\t\ttimestamp : nowVector.timestamp\n\t\t}\n\t\tthis.eventifyTrigger(\"change\");\n\t};\n\n\t/*\n\t\tNOW\n\t\t- calculates the value of the clock right now\n\t\t- shorthand for query\n\t*/\n\tnow() {\n\t\treturn calculateVector(this._vector, local_clock.now()).position;\n\t};\n\n\t/*\n\t\tQUERY\n\t\t- calculates the state of the clock right now\n\t\t- result vector includes position and velocity\n\t*/\n\tquery(now) {\n\t\treturn calculateVector(this._vector, now);\n\t};\n\n}\neventify.eventifyPrototype(MasterClock.prototype);\n\nexport default MasterClock;\n","/*\n\tCopyright 2015 Norut Northern Research Institute\n\tAuthor : Ingar Mæhlum Arntzen\n\n\tThis file is part of the Timingsrc module.\n\n\tTimingsrc is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tTimingsrc is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\nimport MasterClock from './masterclock.js';\nimport {calculateVector, checkRange} from '../util/motionutils.js';\n\n\n/*\n\tINTERNAL PROVIDER\n\n\tTiming provider internal to the browser context\n\n\tUsed by timing objects as timingsrc if no timingsrc is specified.\n*/\n\nclass InternalProvider {\n\n\tconstructor (callback, options) {\n\t\toptions = options || {};\n\t\t// initialise internal state\n\t\tthis._clock = new MasterClock({skew:0});\n\t\tthis._range = [-Infinity, Infinity];\n\t\tthis._vector;\n\t\tthis._callback = callback;\n\t\t// options\n\t\toptions.timestamp = options.timestamp || this._clock.now();\n\t\tthis._process_update(options);\n\t};\n\n\t// internal clock\n\tget clock() {return this._clock;};\n\tget range() {return this._range;};\n\tget vector() {return this._vector;};\n\n\tisReady() {return true;};\n\n\t// update\n\t_process_update(arg) {\n\t\t// process arg\n\t\tlet {\n\t\t\tposition: pos,\n\t\t\tvelocity: vel,\n\t\t\tacceleration: acc,\n\t\t\ttimestamp: ts,\n\t\t\trange: range,\n\t\t\t...rest\n\t\t} = arg;\n\n\t\t// record state from current motion\n\t\tlet p = 0, v = 0, a = 0;\n\t\tif (this._vector != undefined) {\n\t\t\tlet nowVector = calculateVector(this._vector, ts);\n\t\t\tnowVector = checkRange(nowVector, this._range);\n\t\t\tp = nowVector.position;\n\t\t\tv = nowVector.velocity;\n\t\t\ta = nowVector.acceleration;\n\t\t}\n\n\t\t// fill in from current motion, for missing properties\n\t\tlet vector = {\n\t\t\tposition : (pos != undefined) ? pos : p,\n\t\t\tvelocity : (vel != undefined) ? vel : v,\n\t\t\tacceleration : (acc != undefined) ? acc : a,\n\t\t\ttimestamp : ts\n\t\t};\n\n\t\t// update range\n\t\tif (range != undefined) {\n\t\t\tlet [low, high] = range;\n\t\t\tif (low < high) {\n\t\t\t\tif (low != this._range[0] || high != this._range[1]) {\n\t\t\t\t\tthis._range = [low, high];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// check vector with respect to range\n\t\tvector = checkRange(vector, this._range);\n\t\t// save old vector\n\t\tthis._old_vector = this._vector;\n\t\t// update vector\n\t\tthis._vector = vector;\n\t\treturn {range, ...vector, ...rest};\n\t};\n\n\t// update\n\tupdate(arg) {\n\t\targ = this._process_update(arg);\n\t\treturn this._callback(arg);\n\t}\n\n\tclose() {\n\t\tthis._callback = undefined;\n\t}\n}\n\nexport default InternalProvider;\n\n","/*\n\tCopyright 2015 Norut Northern Research Institute\n\tAuthor : Ingar Mæhlum Arntzen\n\n\tThis file is part of the Timingsrc module.\n\n\tTimingsrc is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tTimingsrc is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\n\n\nimport MasterClock from './masterclock.js';\n\n\nfunction checkTimingProvider(obj){\n\tlet required = [\"on\", \"skew\", \"vector\", \"range\", \"update\"];\n\tfor (let prop of required) {\n\t\tif (!(prop in obj)) {\n\t\t\tthrow new Error(`TimingProvider ${obj} missing property ${prop}`);\n\t\t}\n\t}\n}\n\n\n/*\n\tEXTERNAL PROVIDER\n\n\tExternal Provider bridges the gap between the PROVIDER API (implemented by external timing providers)\n\tand the TIMINGSRC API\n\n\tObjects implementing the TIMINGSRC API may be used as timingsrc (parent) for another timing object.\n\n\t- wraps a timing provider external\n\t- handles some complexity that arises due to the very simple API of providers\n\t- implements a clock for the provider\n*/\n\nclass ExternalProvider {\n\n\tconstructor(provider, callback, options) {\n\t\tcheckTimingProvider(provider);\n\t\toptions = options || {};\n\n\t\tthis._provider = provider;\n\t\tthis._callback = callback;\n\t\tthis._range;\n\t\tthis._vector;\n\t\tthis._ready = false\n\n\t\t/*\n\t\t\tprovider clock (may fluctuate based on live skew estimates)\n\t\t*/\n\t\tthis._provider_clock;\n\t\t/*\n\t\t\tlocal clock\n\t\t\tprovider clock normalised to values of performance now\n\t\t\tnormalisation based on first skew measurement, so\n\t\t*/\n\t\tthis._clock;\n\n\n\t\t// register event handlers\n\t\tthis._provider.on(\"vectorchange\", this._onVectorChange.bind(this));\n\t\tthis._provider.on(\"skewchange\", this._onSkewChange.bind(this));\n\n\t\t// check if provider is ready\n\t\tlet self = this;\n\t\tif (this._provider.skew != undefined) {\n\t\t\tlet self = this;\n\t\t\tPromise.resolve(function () {\n\t\t\t\tself._onSkewChange();\n\t\t\t});\n\t\t}\n\t};\n\n\tisReady() {return this._ready;};\n\n\t// internal clock\n\tget clock() {return this._clock;};\n\tget range() {return this._range;};\n\n\n\t/*\n\t\t- local timestamp of vector is set for each new vector, using the skew available at that time\n\t\t- the vector then remains unchanged\n\t\t- skew changes affect local clock, thereby affecting the result of query operations\n\n\t\t- one could imagine reevaluating the vector as well when the skew changes,\n\t\t\tbut then this should be done without triggering change events\n\n\t\t- ideally the vector timestamp should be a function of the provider clock\n\t*/\n\n\tget vector() {\n\t\t// local_ts = provider_ts - skew\n\t\tlet local_ts = this._vector.timestamp - this._provider.skew;\n\t\treturn {\n\t\t\tposition : this._vector.position,\n\t\t\tvelocity : this._vector.velocity,\n\t\t\tacceleration : this._vector.acceleration,\n\t\t\ttimestamp : local_ts\n\t\t}\n\t}\n\n\n\t// internal provider object\n\tget provider() {return this._provider;};\n\n\n\t_onSkewChange() {\n\t\tif (!this._clock) {\n\t\t\tthis._provider_clock = new MasterClock({skew: this._provider.skew});\n\t\t\tthis._clock = new MasterClock({skew:0});\n\t\t} else {\n\t\t\tthis._provider_clock.adjust({skew: this._provider.skew});\n\t\t\t// provider clock adjusted with new skew - correct local clock similarly\n\t\t\t// current_skew = clock_provider - clock_local\n\t\t\tlet current_skew = this._provider_clock.now() - this._clock.now();\n\t\t\t// skew delta = new_skew - current_skew\n\t\t\tlet skew_delta = this._provider.skew - current_skew;\n\t\t\tthis._clock.adjust({skew: skew_delta});\n\t\t}\n\t\tif (!this.isReady() && this._provider.vector != undefined) {\n\t\t\t// just became ready\n\t\t\tthis._ready = true;\n\t\t\tthis._range = this._provider.range;\n\t\t\tthis._vector = this._provider.vector;\n\t\t\tlet eArg = {\n\t\t\t\trange: this.range,\n\t\t\t\t...this.vector,\n\t\t\t\tlive: false\n\t\t\t}\n\t\t\tthis._callback(eArg);\n\t\t}\n\t};\n\n\t_onVectorChange() {\n\t\tif (this._clock) {\n\t\t\t// is ready (onSkewChange has fired earlier)\n\t\t\tif (!this._ready) {\n\t\t\t\tthis._ready = true;\n\t\t\t}\n\t\t\tif (!this._range) {\n\t\t\t\tthis._range = this._provider.range;\n\t\t\t}\n\t\t\tthis._vector = this._provider.vector;\n\t\t\tlet eArg = {\n\t\t\t\trange: this.range,\n\t\t\t\t...this.vector\n\t\t\t}\n\t\t\tthis._callback(eArg);\n\t\t}\n\t};\n\n\n\t// update\n\t/*\n\t\tTODO - support setting range on provider\n\t\tTODO - suppport tunnel\n\t\tTODO - support onRangeChange from provider\n\t*/\n\tupdate(arg) {\n\t\tlet vector = {\n\t\t\tposition: arg.position,\n\t\t\tvelocity: arg.velocity,\n\t\t\tacceleration: arg.acceleration,\n\t\t\ttimestamp: arg.timestamp\n\t\t};\n\t\t// calc back to provider ts\n\t\t// local_ts = provider_ts - skew\n\t\tvector.timestamp = vector.timestamp + this._provider.skew;\n\t\tlet res = this._provider.update(vector);\n\t\t// return success\n\t\treturn true;\n\t};\n}\n\nexport default ExternalProvider;\n\n\n","/*\n\tCopyright 2020\n\tAuthor : Ingar Mæhlum Arntzen\n\n\tThis file is part of the Timingsrc module.\n\n\tTimingsrc is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tTimingsrc is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\nimport eventify from '../util/eventify.js';\nimport Timeout from '../util/timeout.js';\nimport * as motionutils from '../util/motionutils.js';\nimport InternalProvider from './internalprovider.js';\nimport ExternalProvider from './externalprovider.js';\n\nconst MAX_NONCE = 10000;\n\nfunction getRandomInt() {\n \treturn Math.floor(Math.random() * MAX_NONCE);\n};\n\nfunction isTimingProvider(obj){\n\tlet required = [\"on\", \"skew\", \"vector\", \"range\", \"update\"];\n\tfor (let prop of required) {\n\t\tif (!(prop in obj)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction checkRange(live, now, vector, range) {\n\tif (live) {\n\t\treturn motionutils.checkRange(vector, range);\n\t} else {\n\t\tlet now_vector = motionutils.calculateVector(vector, now);\n\t\treturn motionutils.checkRange(now_vector, range);\n\t}\n}\n\n\n\n/*\n\tTIMING BASE\n\n\tabstract base class for objects that may be used as timingsrc\n\n\tessential internal state\n\t- range, vector\n\n\texternal methods\n\tquery, update\n\n\tevents\n\ton/off \"change\", \"timeupdate\"\n\n\tinternal methods for range timeouts\n\n\tdefines internal processing steps\n\t- handleEvent(arg) <- from external timingobject\n\t\t- vector = onChange(vector)\n\t\t- process(vector) <- from timeout or preProcess\n\t- handleTimeout(arg) <- timeout on range restrictions\n\t- process (arg)\n\t\t- set internal vector, range\n\t\t- dispatchEvents(arg)\n\t\t- renew range timeout\n\t- dispatchEvent (arg)\n\t\t- emit change event and timeupdate event\n\t\t- turn periodic timeupdate on or off\n\n\tindividual steps in this structure may be specialized\n\tby subclasses (i.e. timing converters)\n*/\n\n\nclass TimingObject {\n\n\tconstructor (timingsrc, options) {\n\n\t\t// special support for options given as first and only argument\n\t\t// equivalent to new TimingObject(undefined, options)\n\t\t// in this case, timingsrc may be found in options\n\t\tif (timingsrc != undefined && options == undefined) {\n\t\t\tif (!(timingsrc instanceof TimingObject) && !isTimingProvider(timingsrc)) {\n\t\t\t\t// timingsrc is neither timing object nor timingprovider\n\t\t\t\t// assume timingsrc is options\n\t\t\t\toptions = timingsrc;\n\t\t\t\ttimingsrc = undefined;\n\t\t\t\tif (options.provider) {\n\t\t\t\t\ttimingsrc = options.provider;\n\t\t\t\t} else if (options.timingsrc) {\n\t\t\t\t\ttimingsrc = options.timingsrc;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t// options\n\t\toptions = options || {};\n\t\tthis.__options = options;\n\n\n\t\t// default timeout option\n\t\tif (options.timeout == undefined) {\n\t\t\toptions.timeout = true;\n\t\t}\n\n\t\t// cached vectors and range\n\t\tthis.__old_vector;\n\t\tthis.__vector;\n\t\tthis.__range = [-Infinity, Infinity];\n\n\t\t// range restriction timeout\n\t\tthis.__timeout = new Timeout(this, this.__handleTimeout.bind(this));\n\n\t\t// timeoutid for timeupdate event\n\t\tthis.__tid = undefined;\n\n\t\t// timingsrc\n\t\tthis.__timingsrc;\n\t\tthis.__sub;\n\n\t\t// update promises\n\t\tthis.__update_events = new Map();\n\n\t\t// readiness\n\t\tthis.__ready = new eventify.EventBoolean();\n\n\t\t// exported events\n\t\teventify.eventifyInstance(this);\n\t\tthis.eventifyDefine(\"timingsrc\", {init:true});\n\t\tthis.eventifyDefine(\"change\", {init:true});\n\t\tthis.eventifyDefine(\"rangechange\", {init:true});\n\t\tthis.eventifyDefine(\"timeupdate\", {init:true});\n\n\t\t// initialise timingsrc\n\t\tthis.__set_timingsrc(timingsrc, options);\n\t};\n\n\n\t/***************************************************************\n\n\t\tEVENTS\n\n\t***************************************************************/\n\n\t/*\n\t  \toverrides how immediate events are constructed\n\t  \tspecific to eventutils\n\t  \t- overrides to add support for timeupdate events\n\t*/\n\teventifyInitEventArgs(name) {\n\t\tif (this.__ready.value) {\n\t\t\tif (name == \"timingsrc\") {\n\t\t\t\tlet eArg = {\n\t\t\t\t\t...this.__vector,\n\t\t\t\t\trange: this.__range,\n\t\t\t\t\tlive:false\n\t\t\t\t}\n\t\t\t\treturn [eArg];\n\t\t\t} else if (name == \"timeupdate\") {\n\t\t\t\treturn [undefined];\n\t\t\t} else if (name == \"change\") {\n\t\t\t\treturn [this.__vector];\n\t\t\t} else if (name == \"rangechange\") {\n\t\t\t\treturn [this.__range];\n\t\t\t}\n\t\t}\n\t};\n\n\n\t/***************************************************************\n\n\t\tACCESSORS\n\n\t***************************************************************/\n\n\t// ready or not\n\tisReady() {return this.__ready.value;};\n\n\t// ready promise\n    get ready() {return eventify.makePromise(this.__ready);};\n\n    // range\n    get range() {\n    \t// copy\n    \treturn [this.__range[0], this.__range[1]];\n    };\n\n    // vector\n    get vector() {\n    \t// copy\n\t\treturn {\n\t\t\tposition : this.__vector.position,\n\t\t\tvelocity : this.__vector.velocity,\n\t\t\tacceleration : this.__vector.acceleration,\n\t\t\ttimestamp : this.__vector.timestamp\n\t\t};\n    };\n\n    // old vector\n    get old_vector() {return this.__old_vector;};\n\n    // delta\n    get delta() {\n    \treturn new motionutils.MotionDelta(this.__old_vector, this.__vector);\n    }\n\n\t// clock - from timingsrc or provider\n\tget clock() {return this.__timingsrc.clock};\n\n\tget version() {return 5;}\n\n\n\t/***************************************************************\n\n\t\tQUERY\n\n\t***************************************************************/\n\n\t// query\n\tquery() {\n\t\tif (this.__ready.value == false)  {\n\t\t\tthrow new Error(\"query before timing object is ready\");\n\t\t}\n\t\t// reevaluate state to handle range violation\n\t\tlet vector = motionutils.calculateVector(this.__vector, this.clock.now());\n\t\t// detect range violation - only if timeout is set {\n\t\tif (this.__timeout.isSet()) {\n\t\t\tif (vector.position < this.__range[0] || this.__range[1] < vector.position) {\n\t\t\t\t// emulate update event to trigger range restriction\n\t\t\t\tthis.__process({...this.onRangeViolation(vector)});\n\t\t\t}\n\t\t\t// re-evaluate query after state transition\n\t\t\treturn motionutils.calculateVector(this.__vector, this.clock.now());\n\t\t}\n\t\treturn vector;\n\t};\n\n\t// shorthand query\n\tget pos() {return this.query().position;};\n\tget vel() {return this.query().velocity;};\n\tget acc() {return this.query().acceleration;};\n\n\n\t/***************************************************************\n\n\t\tUPDATE\n\n\t***************************************************************/\n\n\t// internal update\n\t__update(arg) {\n\t\tif (this.__timingsrc instanceof TimingObject) {\n\t\t\treturn this.__timingsrc.__update(arg);\n\t\t} else {\n\t\t\t// provider\n\t\t\treturn this.__timingsrc.update(arg);\n\t\t}\n\t};\n\n\t// external update\n\tupdate(arg) {\n\t\t// check if noop\n\t\tlet ok = (arg.range != undefined);\n\t\tok = ok || (arg.position != undefined);\n\t\tok = ok || (arg.velocity != undefined);\n\t\tok = ok || (arg.acceleration != undefined);\n\t\tif (!ok) {\n\t\t\treturn Promise.resolve(arg);\n\t\t}\n\t\targ.tunnel = getRandomInt();\n\t\tif (arg.timestamp == undefined) {\n\t\t\targ.timestamp = this.clock.now();\n\t\t}\n\t\tlet event = new eventify.EventVariable();\n\t\tthis.__update_events.set(arg.tunnel, event);\n\t\tlet promise = eventify.makePromise(event, val => (val != undefined));\n\t\tthis.__update(arg);\n\t\treturn promise;\n\t}\n\n\n\t/***************************************************************\n\n\t\tCORE UPDATE PROCESSING\n\n\t***************************************************************/\n\n\t/*\n\t\tdo not override\n\t\thandle incoming change event\n\t\teArg = {vector:vector, range:range, live:true}\n\n\t\tsubclasses may specialise behaviour by overriding\n\t\tonVectorChange\n\n\t*/\n\t__handleEvent(arg) {\n\t\tlet {\n\t\t\trange,\n\t\t\tlive = true,\n\t\t\t...rest\n\t\t} = arg;\n\t\t// copy range object\n\t\tif (range != undefined) {\n\t\t\trange = [range[0], range[1]];\n\t\t}\n\t\t// new arg object\n\t\tlet _arg = {\n\t\t\trange,\n\t\t\tlive,\n\t\t\t...rest,\n\t\t};\n\t\t_arg = this.onUpdateStart(_arg);\n\t\tif (_arg != undefined) {\n\t\t\treturn this.__process(_arg);\n\t\t}\n\t};\n\n\t/*\n\t\tdo not override\n\t\thandle timeout\n\t*/\n\t__handleTimeout(now, vector) {\n\t\tthis.__process({...this.onRangeViolation(vector)});\n\t}\n\n\t/*\n\t\tcore processing step after change event or timeout\n\t\tassignes the internal vector\n\t*/\n\t__process(arg) {\n\t\tlet {\n\t\t\trange,\n\t\t\tposition,\n\t\t\tvelocity,\n\t\t\tacceleration,\n\t\t\ttimestamp,\n\t\t\tlive=true,\n\t\t\t...rest\n\t\t} = arg;\n\n\n\t\t// update range\n\t\tlet range_change = false;\n\t\tif (range != undefined) {\n\t\t\tlet [low, high] = range;\n\t\t\tif (low < high) {\n\t\t\t\tif (low != this.__range[0] || high != this.__range[1]) {\n\t\t\t\t\tthis.__range = [low, high];\n\t\t\t\t\trange = [low, high];\n\t\t\t\t\trange_change = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// update vector\n\t\tlet vector;\n\t\tlet vector_change = false;\n\t\tlet now = this.clock.now();\n\n\t\t// make sure vector is consistent with range\n\t\tif (position != undefined) {\n\t\t\t// vector change\n\t\t\tvector = {position, velocity, acceleration, timestamp};\n\t\t\t// make sure vector is consistent with range\n\t\t\tvector = checkRange(live, now, vector, this.__range);\n\t\t} else {\n\t\t\t// there is no vector change, but if range was changed,\n\t\t\t// the current vector must be checked for new range.\n\t\t\tif (range_change) {\n\t\t\t\tvector = checkRange(false, now, this.__vector, this.__range);\n\t\t\t}\n\t\t}\n\n\t\tif (vector != undefined) {\n\t\t\t// update vector\n\t\t\tif (this.__vector != undefined) {\n\t\t\t\tvector_change = !motionutils.equalVectors(vector, this.__vector);\n\t\t\t} else {\n\t\t\t\tvector_change = true;\n\t\t\t}\n\t\t\tif (vector_change) {\n\t\t\t\t// save old vector\n\t\t\t\tthis.__old_vector = this.__vector;\n\t\t\t\t// update vector\n\t\t\t\tthis.__vector = vector;\n\t\t\t}\n\t\t}\n\n\t\tlet _arg;\n\t\tif (range_change && vector_change) {\n\t\t\t_arg = {range, ...vector, live, ...rest};\n\t\t} else if (range_change) {\n\t\t\t_arg = {range, live, ...rest};\n\t\t} else if (vector_change) {\n\t\t\t_arg = {...vector, live, ...rest};\n\t\t} else {\n\t\t\t_arg = {live, ...rest};\n\t\t}\n\n\t\t// trigger events\n\t\tthis.__ready.value = true;\n\t\tthis.__dispatchEvents(_arg, range_change, vector_change);\n\t\t// renew timeout\n\t\tif (this.__options.timeout) {\n\t\t\tthis.__renewTimeout();\n\t\t}\n\t\t// release update promises\n\t\tif (_arg.tunnel != undefined) {\n\t\t\tlet event = this.__update_events.get(_arg.tunnel);\n\t\t\tif (event) {\n\t\t\t\tthis.__update_events.delete(_arg.tunnel);\n\t\t\t\tdelete _arg.tunnel;\n\t\t\t\tevent.value = _arg;\n\t\t\t}\n\t\t}\n\t\t// TODO\n\t\t// since externalprovider does not support tunnel yet\n\t\t// free all remaining promises\n\t\tfor (let event of this.__update_events.values()) {\n\t\t\tevent.value = {};\n\t\t}\n\t\tthis.onUpdateDone(_arg);\n\t\treturn _arg;\n\t};\n\n\t/*\n\t\tprocess a new vector applied in order to trigger events\n\t\toverriding this is only necessary if external change events\n\t\tneed to be suppressed,\n\t*/\n\t__dispatchEvents(arg, range_change, vector_change) {\n\t\tlet {\n\t\t\trange,\n\t\t\tposition,\n\t\t\tvelocity,\n\t\t\tacceleration,\n\t\t\ttimestamp\n\t\t} = arg;\n\t\t// trigger timingsrc events\n\t\tthis.eventifyTrigger(\"timingsrc\", arg);\n\t\t// trigger public change events\n\t\tif (vector_change) {\n\t\t\tlet vector = {position, velocity, acceleration, timestamp};\n\t\t\tthis.eventifyTrigger(\"change\", vector);\n\t\t}\n\t\tif (range_change) {\n\t\t\tthis.eventifyTrigger(\"rangechange\", range);\n\t\t}\n\t\t// trigger timeupdate events\n\t\tthis.eventifyTrigger(\"timeupdate\");\n\t\tlet moving = motionutils.isMoving(this.__vector);\n\t\tif (moving && this.__tid === undefined) {\n\t\t\tlet self = this;\n\t\t\tthis.__tid = setInterval(function () {\n\t\t\t\tself.eventifyTrigger(\"timeupdate\");\n\t\t\t}, 200);\n\t\t} else if (!moving && this.__tid !== undefined) {\n\t\t\tclearTimeout(this.__tid);\n\t\t\tthis.__tid = undefined;\n\t\t}\n\t};\n\n\n\t/***************************************************************\n\n\t\tSUBCLASS MAY OVERRIDE\n\n\t***************************************************************/\n\n\t/*\n\t\tmay be overridden\n\t*/\n\tonRangeViolation(vector) {return vector;};\n\n\t/*\n\t\tmay be overridden\n\t*/\n\tonUpdateStart(arg) {return arg;};\n\n\t/*\n\t\tmay be overridden\n\t*/\n\tonUpdateDone(arg) {};\n\n\n\t/***************************************************************\n\n\t\tTIMEOUTS\n\n\t***************************************************************/\n\n\t/*\n\t\trenew timeout is called during every processing step\n\t\tin order to recalculate timeouts.\n\n\t\t- optional vector - default is own vector\n\t\t- optional range - default is own range\n\t*/\n\t__renewTimeout(vector, range) {\n\t\tthis.__timeout.clear();\n\t\tlet timeout_vector = this.__calculateTimeoutVector(vector, range);\n\t\tif (timeout_vector == undefined) {\n\t\t\treturn;\n\t\t}\n\t\tthis.__timeout.setTimeout(timeout_vector.timestamp, timeout_vector);\n\t};\n\n\n\t/*\n\t\tcalculate a vector that will be delivered to _process().\n\t\tthe timestamp in the vector determines when it is delivered.\n\n\t\t- optional vector - default is own vector\n\t\t- optional range - default is own range\n\t*/\n\t__calculateTimeoutVector(vector, range) {\n\t\tvector = vector || this.__vector;\n\t\trange = range || this.__range;\n\t\tlet now = this.clock.now();\n\t\tlet now_vector = motionutils.calculateVector(vector, now);\n\t\tlet [delta, pos] = motionutils.calculateDelta(now_vector, range);\n\t\tif (delta == undefined) {\n\t\t\treturn;\n\t\t}\n\t\t// vector when range restriction will be reached\n\t\tlet timeout_vector = motionutils.calculateVector(vector, now + delta);\n\t\t// possibly avoid rounding errors\n\t\ttimeout_vector.position = pos;\n\t\treturn timeout_vector;\n\t};\n\n\n\t/***************************************************************\n\n\t\tTIMINGSRC\n\n\t***************************************************************/\n\n\t/*\n\n\t\ttimingsrc property and switching on assignment\n\n\t*/\n\t__clear_timingsrc() {\n\t\t// clear timingsrc\n\t\tif (this.__timingsrc != undefined) {\n\t\t\tif (this.__timingsrc instanceof TimingObject) {\n\t\t\t\tthis.__timingsrc.off(this.__sub);\n\t\t\t\tthis.__sub = undefined;\n\t\t\t\tthis.__timingsrc = undefined;\n\t\t\t} else {\n\t\t\t\t// provider\n\t\t\t\tthis.__timingsrc.close();\n\t\t\t\tthis.__timingsrc = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\t__set_timingsrc(timingsrc, options) {\n\t\t// set timingsrc\n\t\tlet callback = this.__handleEvent.bind(this);\n\t\tif (timingsrc instanceof TimingObject) {\n\t\t\t// timingsrc\n\t\t\tthis.__timingsrc = timingsrc;\n\t\t\tthis.__sub = this.__timingsrc.on(\"timingsrc\", callback);\n\t\t} else {\n\t\t\t// provider\n\t\t\tif (timingsrc == undefined) {\n\t\t\t\t// Internal Provider\n\t\t\t\tthis.__timingsrc = new InternalProvider(callback, options);\n\t\t\t} else {\n\t\t\t\t// External Provider\n\t\t\t\tthis.__timingsrc = new ExternalProvider(timingsrc, callback, options);\n\t\t\t}\n\t\t\t// emulating initial event from provider, causing\n\t\t\t// this timingobject to initialise\n\t\t\tif (this.__timingsrc.isReady()) {\n\t\t\t\tlet arg = {\n\t\t\t\t\trange: this.__timingsrc.range,\n\t\t\t\t\t...this.__timingsrc.vector,\n\t\t\t\t\tlive: false\n\t\t\t\t}\n\t\t\t\t// generate initial event\n\t\t\t\tcallback(arg);\n\t\t\t}\n\t\t}\n\t}\n\n\t__get_timingsrc() {\n\t\t// returns InternalProvider, ExternalProvider or TimingObject\n\t\treturn this.__timingsrc;\n\t}\n\n\tget timingsrc () {\n\t\t// returns TimingObject, Provider or undefined\n\t\tlet timingsrc = this.__get_timingsrc();\n\t\tif (timingsrc instanceof TimingObject) {\n\t\t\treturn timingsrc;\n\t\t} else if (timingsrc instanceof InternalProvider) {\n\t\t\treturn undefined;\n\t\t} else if (timingsrc instanceof ExternalProvider) {\n\t\t\treturn timingsrc._provider;\n\t\t} else {\n\t\t\tthrow new Error(\"illegal timingsrc\")\n\t\t}\n\t}\n\t\n\tset timingsrc(timingsrc) {\n\t\tthis.__clear_timingsrc();\n\t\tthis.__set_timingsrc(timingsrc);\n\t}\n\n}\n\neventify.eventifyPrototype(TimingObject.prototype);\n\nexport default TimingObject;\n\n\n\n","/*\n\tCopyright 2015 Norut Northern Research Institute\n\tAuthor : Ingar Mæhlum Arntzen\n\n\tThis file is part of the Timingsrc module.\n\n\tTimingsrc is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tTimingsrc is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n/*\n\tLOOP CONVERTER\n\n\tThis is a modulo type transformation where the converter will be looping within\n\ta given range. Potentially one could create an associated timing object keeping track of the\n\tloop number.\n*/\n\n\nimport {calculateVector} from '../util/motionutils.js';\nimport TimingObject from './timingobject.js';\n\n\n// ovverride modulo to behave better for negative numbers\nfunction mod(n, m) {\n\treturn ((n % m) + m) % m;\n};\n\nfunction transform(x, range) {\n\tlet skew = range[0];\n\tlet length = range[1] - range[0];\n\treturn skew + mod(x-skew, length);\n}\n\n\n/*\n\tLOOP CONVERTER\n*/\n\nclass LoopConverter extends TimingObject {\n\n\tconstructor(timingsrc, range) {\n\t\tsuper(timingsrc, {timeout:true});\n\t\tthis.__range = range;\n\t};\n\n\tupdate(arg) {\n\t\t// range change - only a local operation\n\t\tif (arg.range != undefined) {\n\t\t\t// implement local range update\n\t\t\tlet [low, high] = arg.range;\n\t\t\tif (low >= high) {\n\t\t\t\tthrow new Error(\"illegal range\", arg.range)\n\t\t\t}\n\t\t\tif (low != this.__range[0] || high != this.__range[1]) {\n\t\t\t\tthis.__range = [low, high];\n\t\t\t\tlet vector = this.__get_timingsrc().query();\n\t\t\t\tvector.position = transform(vector.position, this.__range);\n\t\t\t\tthis.__vector = vector;\n\t\t\t\t// trigger vector change\n\t\t\t\tlet _arg = {range: this.__range, ...this.__vector, live:true};\n\t\t\t\tthis.__dispatchEvents(_arg, true, true);\n\t\t\t}\n\t\t\tdelete arg.range;\n\t\t}\n\t\t// vector change\n\t\tif (arg.position != undefined) {\n\t\t\t// inverse transformation of position, from looper\n\t\t\t// coordinates to timingsrc coordinates\n\t\t\t// preserve relative position diff\n\t\t\tlet now = this.clock.now();\n\t\t\tlet now_vector = calculateVector(this.vector, now);\n\t\t\tlet diff = now_vector.position - arg.position;\n\t\t\tlet now_vector_src = calculateVector(this.__get_timingsrc().vector, now);\n\t\t\targ.position = now_vector_src.position - diff;\n\t\t}\n\t\treturn super.update(arg);\n\t};\n\n\t// overrides\n\tonRangeViolation(vector) {\n\t\t// vector is moving\n\t\tif (vector.position <= this.__range[0]) {\n\t\t\tvector.position = this.__range[1];\n\t\t} else if (this.__range[1] <= vector.position) {\n\t\t\tvector.position = this.__range[0];\n\t\t}\n\t\treturn vector;\n\t};\n\n\t// overrides\n\tonUpdateStart(arg) {\n        if (arg.range != undefined) {\n            // ignore range change from timingsrc\n            // instead, insist that this._range is correct\n            arg.range = this.__range;\n        }\n        if (arg.position != undefined) {\n        \t// vector change\n        \targ.position = transform(arg.position, this.__range);\n        }\n        return arg;\n\t};\n\n}\nexport default LoopConverter;\n\n","/*\n\tCopyright 2015 Norut Northern Research Institute\n\tAuthor : Ingar Mæhlum Arntzen\n\n\tThis file is part of the Timingsrc module.\n\n\tTimingsrc is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tTimingsrc is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/*\n\n\tRANGE CONVERTER\n\n\tThe converter enforce a range on position.\n\n\tIt only has effect if given range is a restriction on the range of the timingsrc.\n\tRange converter will pause on range endpoints if timingsrc leaves the range.\n\tRange converters will continue mirroring timingsrc once it comes into the range.\n*/\n\n\nimport {RangeState, correctRangeState, checkRange} from '../util/motionutils.js';\nimport TimingObject from './timingobject.js';\n\n\nfunction state() {\n\tvar _state = RangeState.INIT;\n\tvar _range = null;\n\tvar is_special_state_change = function (old_state, new_state) {\n\t\t// only state changes between INSIDE and OUTSIDE* are special state changes.\n\t\tif (old_state === RangeState.OUTSIDE_HIGH && new_state === RangeState.OUTSIDE_LOW) return false;\n\t\tif (old_state === RangeState.OUTSIDE_LOW && new_state === RangeState.OUTSIDE_HIGH) return false;\n\t\tif (old_state === RangeState.INIT) return false;\n\t\treturn true;\n\t}\n\tvar get = function () {return _state;};\n\tvar set = function (new_state, new_range) {\n\n\t\tvar absolute = false; // absolute change\n\t\tvar special = false;  // special change\n\n\t\t// check absolute change\n\t\tif (new_state !== _state || new_range !== _range) {\n\t\t\tabsolute = true;\n\t\t}\n\t\t// check special change\n\t\tif (new_state !== _state) {\n\t\t\tspecial = is_special_state_change(_state, new_state);\n\t\t}\n\t\t// range change\n\t\tif (new_range !== _range) {\n\t\t\t_range = new_range;\n\t\t}\n\t\t// state change\n\t\tif (new_state !== _state) {\n\t\t\t_state = new_state;\n\t\t}\n\t\treturn {special:special, absolute:absolute};\n\n\t}\n\treturn {get: get, set:set};\n};\n\n\n/*\n\tRange converter allows a new (smaller) range to be specified.\n\n\t- ignores the range of its timingsrc\n\t- vector change from timingsrc\n\t  - outside own range - drop - set timeout to inside\n\t  - inside own range - normal processing\n\t- extra vector changes (compared to timingsrc)\n\t\t- enter inside\n\t\t- range violation own range\n\t- range updated locally\n\n*/\n\nclass RangeConverter extends TimingObject {\n\n\tconstructor (timingObject, range) {\n\t\tsuper(timingObject, {timeout:true});\n\t\tthis.__state = state();\n\t\tthis.__range = range;\n\t};\n\n\n\tupdate(arg) {\n\t\tthrow Error(\"Not Implemented!\");\n\t\t/*\n\t\t\trange change - only a local operation\n\n\t\t\t\t- need to trigger local processing of new range,\n\t\t\t\tso that range is changed and events triggered\n\t\t\t\t- also need to trigger a reevaluation of\n\t\t\t\tvector from timingsrc vector, for instance, if\n\t\t\t\trange grows while timingsrc is outside, the\n\t\t\t\tposition of the vector needs to change\n\t\t\t\t- cannot do both these things via emulation\n\t\t\t\tof timingsrc event - because rangeconverter\n\t\t\t\tis supposed to ignore range change from timingsrc\n\t\t\t\t- could do both locally, but this would effectively\n\t\t\t\trequire reimplementation of logic in __process\n\t\t\t\t- in addition, this could be a request to update\n\t\t\t\tboth range and vector at the same time, in which case\n\t\t\t\tit would be good to do them both at the same time\n\n\t\t\t- possible solution - somehow let range converter\n\t\t\t  discriminate range changes based on origin?\n\n\t\t*/\n\t\tif (arg.range != undefined) {\n\n\t\t\t// local processing of range change\n\t\t\t// to trigger range change event\n\t\t\tlet _arg = {range: arg.range, ...this.__get_timingsrc().vector, live:true};\n\t\t\tthis.__process(_arg);\n\t\t\t// avoid that range change affects timingsrc\n\t\t\tdelete arg.range;\n\n\t\t}\n\t\treturn super.update(arg);\n\t};\n\n\n\n\t// overrides\n\tonUpdateStart(arg) {\n        if (arg.range != undefined) {\n        \t// ignore range change from timingsrc\n        \t// delete causes update to be dropped\n            delete arg.range;\n        }\n        if (arg.position != undefined) {\n        \t// vector change from timingsrc\n        \tlet {position, velocity, acceleration, timestamp} = arg;\n        \tlet vector = {position, velocity, acceleration, timestamp};\n        \tvector = this.onVectorChange(vector);\n        \tif (vector == undefined) {\n        \t\t// drop because motion is outside\n\t\t\t\t// create new timeout for entering inside\n\t\t\t\tthis.__renewTimeout(this.__get_timingsrc().vector, this.__range);\n\t\t\t\treturn;\n        \t} else {\n        \t\t// regular\n        \t\targ.position = vector.position;\n        \t\targ.velocity = vector.velocity;\n        \t\targ.acceleration = vector.acceleration;\n        \t\targ.timestamp = vector.timestamp;\n        \t}\n        }\n        return arg;\n\t};\n\n\n\tonVectorChange(vector) {\n\t\tvar new_state = correctRangeState(vector, this.__range);\n\t\tvar state_changed = this.__state.set(new_state, this.__range);\n\t\tif (state_changed.special) {\n\t\t\t// state transition between INSIDE and OUTSIDE\n\t\t\tif (this.__state.get() === RangeState.INSIDE) {\n\t\t\t\t// OUTSIDE -> INSIDE, generate fake start event\n\t\t\t\t// vector delivered by timeout\n\t\t\t\t// forward event unchanged\n\t\t\t} else {\n\t\t\t\t// INSIDE -> OUTSIDE, generate fake stop event\n\t\t\t\tvector = checkRange(vector, this.__range);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// no state transition between INSIDE and OUTSIDE\n\t\t\tif (this.__state.get() === RangeState.INSIDE) {\n\t\t\t\t// stay inside or first event inside\n\t\t\t\t// forward event unchanged\n\t\t\t} else {\n\t\t\t\t// stay outside or first event outside\n\t\t\t\t// forward if\n\t\t\t\t// - first event outside\n\t\t\t\t// - skip from outside-high to outside-low\n\t\t\t\t// - skip from outside-low to outside-high\n\t\t\t\t// - range change\n\t\t\t\t// else drop\n\t\t\t\t// - outside-high to outside-high (no range change)\n\t\t\t\t// - outside-low to outside-low (no range change)\n\t\t\t\tif (state_changed.absolute) {\n\t\t\t\t\tvector = checkRange(vector, this.__range);\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn vector;\n\t};\n}\n\nexport default RangeConverter;\n\n","/*\n\tCopyright 2020\n\tAuthor : Ingar Mæhlum Arntzen\n\n\tThis file is part of the Timingsrc module.\n\n\tTimingsrc is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tTimingsrc is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n/**\n * Sampler for Timing Object\n * \n * - samples timing object position and emits a change event at certain frequency\n * - does not emit any events when timing object is paused\n * - options\n *      - period (between samples) in ms\n *      - frequency (sample frequency) in hz\n *      if both given - period takes precedence\n *      if none given - default period = 200 ms \n * \n *  TODO\n        - set refresh frequency to be sensitive\n            to velocity - adapted to a fixed rate\n            change in percent\n            calculate percent velocity\n            rate change in percent per second\n\n * \n * \n */\n\nimport eventify from '../util/eventify.js';\n\nconst DEFAULT_PERIOD = 200;\n\nclass TimingSampler {\n\n    constructor (timingObject, options = {}) {\n        this._to = timingObject;\n        // timeout id\n        this._tid;\n        // period\n        let {period, frequency} = options;\n        this._period = DEFAULT_PERIOD;\n        if (period != undefined) {\n            this._period = period;\n        } else if (frequency != undefined) {\n            this._period = 1.0/frequency;\n        }        \n        // Events\n        eventify.eventifyInstance(this);\n\n        this.eventifyDefine(\"change\", {init:true});\n        // Handle timing object change event\n        this._sub = this._to.on(\"change\", this._onChange.bind(this));\n    }\n\n    /*\n        Eventify: immediate events\n    */\n    eventifyInitEventArgs(name) {\n        if (name == \"change\" && this._to.isReady()) {\n            return [this._to.pos];\n        }\n    }\n\n    /**\n     * Start/stop sampling\n     */\n    _onChange() {\n        let v = this._to.query();\n        let moving = (v.velocity != 0.0 || v.acceleration != 0.0);\n        // start or stop sampling\n        if (moving && this._tid == undefined) {\n            this._tid = setInterval(function(){\n                this._onSample();\n            }.bind(this), this._period);\n        }\n        if (!moving && this._tid != undefined) {\n            clearTimeout(this._tid);\n            this._tid = undefined;\n        }\n        this._onSample(v.position);\n    }\n\n    /**\n     * Sample timing object\n     */\n    _onSample(position) {\n        position = (position != undefined) ? position : this._to.pos;\n        this.eventifyTrigger(\"change\", position);\n    }\n   \n    /**\n     * Terminate sampler\n     */\n    clear() {\n        // stop sampling\n        if (this._tid) {\n            clearTimeout(this._tid);\n            this._tid = undefined;\n        }\n        // disconnect handler\n        this._to.off(this._sub);\n    }\n}\n\neventify.eventifyPrototype(TimingSampler.prototype);\n\nexport default TimingSampler;","\n\n\nimport Timeout from '../util/timeout.js';\nimport * as motionutils from '../util/motionutils.js';\n\n/*\n    modify modulo operation\n*/\nfunction mod(n,m) {\n    return ((n % m) + m) % m;   \n}\n\n/*\n    divide n by m, \n    find q (integer) and r such that  \n    n = q*m + r \n*/\nfunction divmod(n, m) {\n    let q = Math.floor(n/m);\n    let r = mod(n, m);\n    return [q,r];\n}\n\n/**\n *  point n == offset + q*stride + r\n    - given stride, offset\n    represent point as [q, r]\n */\n\nfunction float2point(n, stride, offset) {\n    return divmod(n-offset, stride);\n}\n\nfunction point2float(p, stride, offset) {\n    let [q, r] = p;\n    return offset + q*stride + r;\n}\n\n\n/*\n    Given stride and offset, calculate nearest\n    waypoints before and after given position.\n    If position is exact match with waypoint,\n    return [true, before, after]\n*/\nfunction stride_points(position, stride, offset) {\n    let [q, r] = float2point(position, stride, offset);\n    let after = [q+1, 0];\n    let before = (r == 0) ? [q-1, 0]: [q, 0];\n    before = point2float(before, stride, offset);\n    after = point2float(after, stride, offset);\n    return [(r==0), before, after];\n};\n\n\n\n/*\n    \n    Position callback\n\n    - callback whenever the timing object position is x, \n      where (x - offset) % stride === 0\n\n    - analogy to setInterval - except callbacks are in position space, not\n      in time space\n\n    options : {\n        stride - default 1\n        offset - default 0\n    }\n\n    NOTE: pausing on x and later resuming from x triggers callback in both cases \n\n*/\n\nclass PositionCallback {\n\n    constructor (timingObject, callback, options={}) {\n        this._to = timingObject;\n        let {stride=1, offset=0} = options;\n        this._offset = offset;\n        this._stride = stride;\n        this._callback = callback;\n        this._timeout = new Timeout(this._to, this._handleTimeout.bind(this));\n\n        // timing object timingsrc event\n        this._to.on(\"timingsrc\", this._onChange.bind(this));\n    }\n\n    _onChange(eArg, eInfo) {\n        let pos = (eArg.live) ? eArg.position : this._to.pos;                \n        this._renewTimeout(pos);\n    }\n\n    _calculateTimeout(before, after) {\n        let vector = this._to.query();\n        let [delta, pos] = motionutils.calculateDelta(vector, [before, after]);\n        if (delta == undefined) {            \n            return;\n        } \n        // check range violation\n        let [rLow, rHigh] = this._to.range;\n        if (pos < rLow || rHigh < pos ) {\n            return [undefined, undefined];\n        }\n        return [vector.timestamp + delta, pos];   \n    }\n\n    _renewTimeout(pos) {\n        this._timeout.clear();\n        // find candidate points - before and after\n        let [match, before, after]  = stride_points(pos,\n                                                    this._stride, \n                                                    this._offset);\n        // callback\n        if (match) {\n            this._callback(pos);\n        }\n        // calculate timeout to next\n        let res = this._calculateTimeout(before, after);\n        if (res == undefined) {\n            return;\n        }\n        // set timeout\n        let ts = res[0];\n        this._timeout.setTimeout(ts, res);\n    }\n    \n    _handleTimeout(now, arg) {\n        let pos = arg[1];\n        this._renewTimeout(pos);\n    }\n}\n\n\nexport default PositionCallback;","/*\n    Copyright 2020\n    Author : Ingar Arntzen\n\n    This file is part of the Timingsrc module.\n\n    Timingsrc is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Timingsrc is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport * as utils from '../util/utils.js';\nimport eventify from '../util/eventify.js';\nimport endpoint from '../util/endpoint.js';\nimport Interval from '../util/interval.js';\nimport BinarySearch from '../util/binarysearch.js';\nimport CueCollection from './cuecollection.js';\n\nconst Relation = Interval.Relation;\n\n/*\n    UTILITY\n*/\n\nfunction cue_to_string(cue) {\n    if (cue) {\n        return `${cue.interval.toString()} ${cue.data}`;\n    } else {\n        return `${cue}`;\n    }    \n}\n\n/*\n    Add cue to array\n    - does not add if cue already exists\n    - returns array length\n*/\nfunction addCueToArray(arr, cue) {\n    // cue equality defined by key property\n    if (arr.length == 0) {\n        arr.push(cue);\n    } else {\n        let idx = arr.findIndex(function (_cue) {\n            return _cue.key == cue.key;\n        });\n        if (idx == -1) {\n            arr.push(cue);\n        }\n    }\n    return arr.length;\n};\n\n/*\n    Remove cue from array\n    - noop if cue does not exist\n    - returns array empty\n*/\nfunction removeCueFromArray(arr, cue) {\n    // cue equality defined by key property\n    if (arr.length == 1) {\n        if (arr[0].key == cue.key) {\n            arr.shift();\n        }\n        return arr.length == 0;\n    }\n    else if (arr.length == 0) {\n        return true;\n    } else {\n        let idx = arr.findIndex(function (_cue) {\n            return _cue.key == cue.key;\n        });\n        if (idx > -1) {\n            arr.splice(idx, 1);\n        }\n        return arr.length == 0;\n    }\n};\n\n/*\n    Replace cue in array\n    - noop if cue does not exist in array\n    - returns sucess\n*/\n\nfunction replaceCueInArray (arr, cue) {\n    if (arr.length == 0) {\n        return false;\n    } else if (arr.length == 1) {\n        if (arr[0].key == cue.key) {\n            arr[0] = cue;\n            return true;\n        }\n    } else {\n        let idx = arr.findIndex(function (_cue) {\n            return _cue.key == cue.key;\n        });\n        if (idx > -1) {\n            arr[idx] = cue;\n            return true;\n        }\n    }\n    return false;\n}\n\n\n/*\n    Setup ID's for cue buckets.\n*/\nconst CueBucketIds = [0, 10, 100, 1000, 10000, 100000, Infinity];\nvar getCueBucketId = function (length) {\n    for (let i=0; i<CueBucketIds.length; i++) {\n        if (length <= CueBucketIds[i]) {\n            return CueBucketIds[i];\n        }\n    }\n};\n\n\n/*\n    Delta\n\n    Used to represent statechanges in batchMap,\n    for intervals and data.\n*/\nconst Delta = Object.freeze({\n    NOOP: 0,\n    INSERT: 1,\n    REPLACE: 2,\n    DELETE: 3\n});\n\n/*\n    make a shallow copy of a cue\n*/\nfunction cue_copy(cue) {\n    if (cue == undefined) {\n        return;\n    }\n    return {\n        key: cue.key,\n        interval: cue.interval,\n        data: cue.data\n    };\n}\n\n/*\n    Characterize the transition from cue_a to cue_b\n    in terms of delta values for interval and data\n\n    For instance, interval has\n    - INSERT: value not in a but in b\n    - DELETE: value in a but not in b\n    - REPLACE: value in a and in be and not equal\n    - NOOP: either remains undefined or remains equal\n\n    optional equals function for data comparison\n    otherwise simple object equality (==) is used\n*/\nfunction cue_delta(cue_a, cue_b, equals) {\n    let interval_delta, data_delta, eq;\n    // interval delta\n    let a_interval_defined = cue_a != undefined && cue_a.interval != undefined;\n    let b_interval_defined = cue_b != undefined && cue_b.interval != undefined;\n    if (!a_interval_defined && !b_interval_defined) {\n        interval_delta = Delta.NOOP;\n    } else if (!a_interval_defined) {\n        interval_delta = Delta.INSERT;\n    } else if (!b_interval_defined) {\n        interval_delta = Delta.DELETE;\n    } else {\n        // check interval equality\n        eq = cue_a.interval.equals(cue_b.interval);\n        interval_delta = (eq) ? Delta.NOOP : Delta.REPLACE;\n    }\n    // data delta\n    let a_data_defined = cue_a != undefined && cue_a.data != undefined;\n    let b_data_defined = cue_b != undefined && cue_b.data != undefined;\n    if (!a_data_defined && !b_data_defined) {\n        data_delta = Delta.NOOP;\n    } else if (!a_data_defined) {\n        data_delta = Delta.INSERT;\n    } else if (!b_data_defined) {\n        data_delta = Delta.DELETE;\n    } else {\n        // check data equality\n        if (equals) {\n            eq = equals(cue_a.data, cue_b.data);\n        } else {\n            eq = utils.object_equals(cue_a.data, cue_b.data);\n        }\n        data_delta = (eq) ? Delta.NOOP : Delta.REPLACE;\n    }\n    return {interval: interval_delta, data: data_delta};\n}\n\n\nfunction cue_equals(cue_a, cue_b) {\n    let delta = cue_delta(cue_a, cue_b);\n    return delta.interval == Delta.NOOP && delta.data == Delta.NOOP;\n}\n\n/*\n    CueArgBuilder\n\n    AddCue - adds or changes a cue.\n    RemoveCue - removes a cue\n    Clear - remove un-submitted cues\n\n    Cues are submitted to dataset update by \".done\" promise (after task processing), which also makes the result available\n\n    manual submit if autosubmit is false\n\n*/\n\nclass CueArgBuilder {\n\n    constructor (dataset, options={}) {\n        \n        \n        // dataset\n        this._ds = dataset;\n        // options\n        let defaults = {autosubmit:true};\n        this._options = Object.assign({}, defaults, options);\n        // cue arg buffer\n        this._cues;\n        // batch done flag\n        this._done;\n        // done promise\n        this.updateDone;\n        // initialise\n        this._reset();\n    }\n\n    _reset() {\n        this._cues = [];\n        // create new done promise\n        this._done = new eventify.EventBoolean();\n        this.updateDone = eventify.makePromise(this._done).then(() => {\n            return this._submit.bind(this)();\n        });\n    }\n\n    _push(cue_args) {\n        // append cue args\n        let m = this._cues.length;\n        let was_empty = m == 0;\n        let n = cue_args.length;\n        this._cues.length += n;\n        for (let i=0; i<n; i++) {\n            this._cues[m++] = cue_args[i];\n        }\n        if (this._options.autosubmit && was_empty && n > 0) {\n            // batch done immediately \n            // will be submitted by donePromise in next microtask\n            this._done.value = true;\n        }\n    }\n\n    _submit() {\n        let result = [];\n        // carry out update if necessary\n        if (this._cues.length > 0) {\n            result = this._ds.update(this._cues, this._options);    \n        }\n        // reset cue arg builder\n        this._reset();\n        // update result\n        return result;\n    }    \n    \n    /*\n        add or change single cue\n    \n        if both interval and data are undefined\n        this is not interpreted as remove,\n        but as a cue with no interval and a data value set\n        to undefined\n    */\n    addCue(key, interval, data) {\n        let cue_arg = {key:key};\n        cue_arg.interval = interval;        \n        if (arguments.length > 2) {\n            cue_arg.data = data;\n        }\n        this._push([cue_arg]);\n        return this;\n    }\n\n    /* remove single cue */\n    removeCue(key) {\n        this._push([{key:key}]);\n        return this;\n    }\n\n    /* load array of cue args into argbuilder */\n    update(cue_args) {\n        this._push(cue_args);\n    }\n\n    /* clear args currently in argbuilder */\n    clear() {\n        this._cues = [];\n        return this;\n    }\n\n    /* manually submit cue args from cue arg builder */\n    submit() {\n        if (this._options.autosubmit) {\n            throw new Error(\"manual submit while options.autosubmit is true\");\n        }\n        // mark batch as done\n        // will be submitted by donePromise in next microtask\n        this._done.value = true;\n    }\n}\n\n\n/*\n    this implements Dataset, a data collection supporting\n    efficient lookup of cues tied to intervals on the timeline\n\n    - cues may be tied to one or two points on the timeline, this\n      is expressed by an Interval.\n    - cues are indexed both by key and by intervals\n    - the interval index is divided into a set of CueBuckets,\n      based on cue interval length, for efficient lookup\n*/\n\nclass Dataset extends CueCollection {\n\n    static Delta = Delta;\n    static cue_delta = cue_delta;\n    static cue_equals = cue_equals;\n\n    constructor(options) {\n        super(options);\n\n        this._map = new Map();\n        this._builder = new CueArgBuilder(this);\n\n        /*\n            Initialise set of CueBuckets\n            Each CueBucket is responsible for cues of a certain length\n        */\n        this._cueBuckets = new Map();  // CueBucketId -> CueBucket\n        for (let i=0; i<CueBucketIds.length; i++) {\n            let cueBucketId = CueBucketIds[i];\n            this._cueBuckets.set(cueBucketId, new CueBucket(cueBucketId));\n        }\n\n        // Inline update callbacks\n        this._update_callbacks = [];\n    };\n\n    /**\n     * CueCollection (ObservableMap) needs access to map \n     */\n    get datasource () {\n        return this._map;\n    }\n\n    /***************************************************************\n        UPDATE CALLBACKS\n    */\n\n    add_callback (handler) {\n        let handle = {\n            handler: handler\n        }\n        this._update_callbacks.push(handle);\n        return handle;\n    };\n\n\n    del_callback (handle) {\n        let index = this._update_callbacks.indexof(handle);\n        if (index > -1) {\n            this._update_callbacks.splice(index, 1);\n        }\n    };\n\n\n    _notify_callbacks (batchMap, relevanceInterval) {\n        this._update_callbacks.forEach(function(handle) {\n            handle.handler(batchMap, relevanceInterval);\n        });\n    };\n\n    /***************************************************************\n     MAP METHODS\n    */\n\n    set (key, value) {\n        throw new Error(\"not implemented\");\n    }\n\n    delete (key) {\n        throw new Error(\"not implemented\");\n    }\n\n\n    /***************************************************************\n     CUE ARG BUILDER\n    */\n \n    makeBuilder(options) {\n        return new CueArgBuilder(this, options);\n    }\n\n    // not really useful (v2 complience)\n    get builder () {return this._builder;};\n\n    \n    /***************************************************************\n     ADD CUE, REMOVE CUE\n\n        - COMPATIBILTY WITH V2\n        - SAFE TO USE repeatedly (batched using promise)\n    */\n\n    addCue(key, interval, data) {\n        if (arguments.length > 2) {\n            this._builder.addCue(key, interval, data);\n        } else {\n            this._builder.addCue(key, interval);\n        }\n        return this;\n    }\n\n    removeCue(key) {\n        this._builder.removeCue(key);\n        return this;\n    }\n\n    get updateDone() {return this._builder.updateDone};\n\n    /***************************************************************\n     ADD CUE, REMOVE CUE - INTERACTIVE USE\n\n        - CONVENIENCE for interactive use\n        - COMPATIBILTY WITH V2\n        - NOT RECOMMENDED TO USE repeatedly (batched using promise)\n    */\n\n    _addCue(key, interval, data) {\n        return this.update({key:key, interval:interval, data:data});\n    }\n\n    _removeCue(key) {\n        return this.update({key:key});\n    }\n\n    /***************************************************************\n        UPDATE\n\n        - insert, replace or delete cues\n\n        update(cues, equals, check)\n\n        <cues> ordered list of cues to be updated\n        <equals> - equality function for data objects\n\n        cue = {\n            key:key,\n            interval: Interval,\n            data: data\n        }\n\n        required\n        - cue.key property is defined and value is != undefined\n        - if cue.interval != undefined, it must be instance of Interval\n\n        EXAMPLES\n\n        // INSERT (no pre-existing cue)\n\n        cue = {key:1, interval: new Interval(3,4), data: {}}\n        // insert cue with only interval\n        cue = {key:1, interval: new Interval(3,4)}\n        // insert cue with only data\n        cue = {key:1, data: {}}\n\n\n        // REPLACE (pre-existing cue)\n        preexisting_cue = {key:1, interval: new Interval(3,4), data: {}}\n\n        cue = {key:1, interval: new Interval(3,5), data: {foo:\"bar\"}}\n        // replace interval, keep data\n        cue = {key:1, interval: new Interval(3,5)}\n        // replace interval, delete data\n        cue = {key:1, interval: new Interval(3,5), data: undefined\n        // replace data, keep interval\n        cue = {key:1, data: {foo:\"bar\"}}\n        // replace data, delete interval\n        cue = {key:1, interval: undefined, data: {foo:\"bar\"}}\n\n        // DELETE (pre-existing)\n        cue = {key:1}\n        // delete interval, keep data\n        cue = {key:1, interval: undefined}\n        // delete data, keep interval\n        cue = {key:1, data: undefined}\n\n\n        Update returns a list of event items - describes the effects of an update.\n            {\n                new: new_cue,\n                old: old_cue,\n                delta: {\n                    interval: Delta,\n                    data: Delta\n                }\n            }\n\n        with independent delta values for interval and data:\n        Delta.NOOP: 0\n        Delta.INSERT: 1\n        Delta.REPLACE: 2\n        Delta.DELETE: 3\n\n        Duplicates\n        - if there are multiple cue operations for the same key,\n          within the same batch of cues,\n          these will be processed in order.\n\n        - The old cue will always be the state of the cue,\n          before the batch started.\n\n        - The returned delta values will be calcultated relative to\n          the cue before the batch started (old).\n\n          This way, external mirroring observers may will be able to\n          replicate the effects of the update operation.\n\n    ***************************************************************/\n\n    update(cues, options = {}) {\n        const batchMap = new Map();\n        let current_cue;\n        let has_interval, has_data;\n\n        // options\n        let {debug=false, equals} = options;\n\n        // support single cue arg for convenience\n        if (!utils.isIterable(cues)) {\n            cues = [cues];\n        }\n\n        /***********************************************************\n            process all cues\n        ***********************************************************/\n        for (let cue of cues) {\n\n            /*******************************************************\n                check validity of cue argument\n            *******************************************************/\n\n            if (!(cue) || !cue.hasOwnProperty(\"key\") || cue.key == undefined) {\n                throw new Error(\"illegal cue\", cue);\n            }\n\n            has_interval = cue.hasOwnProperty(\"interval\");\n            has_data = cue.hasOwnProperty(\"data\");\n            if (has_interval) {\n                if (Array.isArray(cue.interval) ) {\n                    // support intervals as arrays\n                    let [low, high, lowInclude, highInclude] = cue.interval;\n                    cue.interval = new Interval(low, high, lowInclude, highInclude);\n                }\n                if (!cue.interval instanceof Interval) {\n                    throw new Error(\"interval must be Interval\");\n                }\n            }\n\n            /*******************************************************\n                adjust cue so that it correctly represents\n                the new cue to replace the current cue\n                - includes preservation of values from current cue\n            *******************************************************/\n\n            current_cue = this._map.get(cue.key);\n            if (current_cue == undefined) {\n                // make sure properties are defined\n                if (!has_interval) {\n                    cue.interval = undefined;\n                }\n                if (!has_data) {\n                    cue.data = undefined;\n                }\n            } else if (current_cue != undefined) {\n                if (!has_interval && !has_data) {\n                    // make sure properties are defined\n                    cue.interval = undefined;\n                    cue.data = undefined;\n                } else if (!has_data) {\n                    // REPLACE_INTERVAL, preserve data\n                    cue.data = current_cue.data;\n                } else if (!has_interval) {\n                    // REPLACE_DATA, preserve interval\n                    cue.interval = current_cue.interval;\n                } else {\n                    // REPLACE CUE\n                }\n            }\n\n            /*******************************************************\n                update cue\n                - update _map\n                - update cueBuckets\n                - create batchMap\n            *******************************************************/\n            this._update_cue(batchMap, current_cue, cue, options);\n        }\n\n        // flush all buckets so updates take effect\n        this._call_buckets(\"flush\");\n\n        if (batchMap.size > 0) {\n\n            /*\n                create events without delta property\n                and accumulate relevance interval for batch\n            */\n            let relevance = {low: Infinity, high: -Infinity};\n\n            // create list of events and remove delta property\n            let items = [...batchMap.values()].map(item => {\n                if (item.new && item.new.interval) {\n                    relevance.low = endpoint.min(relevance.low, item.new.interval.endpointLow);\n                    relevance.high = endpoint.max(relevance.high, item.new.interval.endpointHigh);\n                }\n                if (item.old && item.old.interval) {\n                    relevance.low = endpoint.min(relevance.low, item.old.interval.endpointLow);\n                    relevance.high = endpoint.max(relevance.high, item.old.interval.endpointHigh);\n                }\n                return {key:item.key, new:item.new, old:item.old};\n            });\n\n            // extra filter items to remove NOOP transitions\n            let event_items = items.filter((item) => {\n                let delta = cue_delta(item.new, item.old, equals);\n                return (delta.interval != Delta.NOOP || delta.data != Delta.NOOP);\n            });\n\n            // event notification\n            this._notifyEvents(event_items);\n\n            // create relevance Interval\n            let relevanceInterval = undefined;\n            if (relevance.low != Infinity) {\n                relevanceInterval = Interval.fromEndpoints(relevance.low, relevance.high);\n            }\n\n            /*\n                notify sequencer last so that change event\n                from the dataset will be applied before change\n                events from sequencers.\n            */\n            this._notify_callbacks(batchMap, relevanceInterval);\n          \n            // debug\n            if (debug) {this.integrity();}\n            return items;\n        }\n        // debug\n        if (debug) {this.integrity();}\n        return [];\n    };\n\n\n\n    /***************************************************************\n        UPDATE CUE\n\n        update operation for a single cue\n\n        - update _map\n        - generate entry for batchMap\n        - update CueBucket\n    ***************************************************************/\n\n    _update_cue(batchMap, current_cue, cue, options) {\n\n        let old_cue, new_cue;\n        let item, _item;\n        let oldCueBucket, newCueBucket;\n        let low_changed, high_changed;\n        let remove_needed, add_needed;\n\n        // options\n        let {chaining=true, safe=false, equals} = options;\n        \n        if (current_cue === cue) {\n            throw Error(\"illegal cue arg: same object as current cue\");\n        }\n\n        // check for equality\n        let delta = cue_delta(current_cue, cue, equals);\n\n\n        // (NOOP, NOOP)\n        if (delta.interval == Delta.NOOP && delta.data == Delta.NOOP) {\n            item = {\n                key:cue.key, new:current_cue,\n                old:current_cue, delta: delta\n            }\n            batchMap.set(cue.key, item);\n            return;\n        }\n\n        /***********************************************************\n            update _map and batchMap\n        ***********************************************************/\n\n        if (current_cue == undefined) {\n            // INSERT - add cue object to _map\n            old_cue = undefined;\n            new_cue = (safe)? Object.freeze(cue) : cue;\n            this._map.set(cue.key, new_cue);\n        } else if (cue.interval == undefined && cue.data == undefined) {\n            // DELETE - remove cue object from _map\n            old_cue = current_cue;\n            new_cue = undefined;\n            this._map.delete(cue.key);\n        } else {\n            // REPLACE\n            /*\n                Solution used to be in-place modification\n                of current cue.\n                Now we instead implement replace by inserting\n                a new cue object as current cue.\n                Since current cue is referenced both in\n                _map and in pointMap - it must be replaced both\n                places.\n\n                Adjustments to pointMap as a result of interval\n                changes are handled further down\n\n                Another design option would be to let point map\n                manage only keys of cues. This however would \n                impose an extra map lookup per item in lookup - \n                so better to pay this modest price in update\n            */\n            old_cue = current_cue;\n            new_cue = {\n                key: cue.key,\n                interval: cue.interval,\n                data: cue.data\n            }\n            if (safe) {\n                new_cue = Object.freeze(new_cue);\n            }\n\n            // replace in cue map\n            this._map.set(cue.key, new_cue);\n\n            // replace in point map\n            // - only necessary if old cue is in pointMap\n            //  i.e. if old_cue has interval\n            if (old_cue.interval) {\n                let bid = getCueBucketId(old_cue.interval.length);\n                let cueBucket = this._cueBuckets.get(bid);\n                // replace for low\n                cueBucket.replace_endpoint(old_cue.interval.low, new_cue);\n                // replace for high\n                if (!old_cue.singular) {\n                    cueBucket.replace_endpoint(old_cue.interval.high, new_cue);\n                }\n            }\n        }\n        item = {key:cue.key, new:new_cue, old:old_cue, delta:delta};\n\n        /*\n            if this item has been set earlier in batchMap\n            restore the correct old_cue by getting it from\n            the previous batchMap item\n\n            recalculate delta relative to old_cue\n            - continue processing with the original (delta, old_cue) defined\n            above, as this is required to correctly change cueBuckets\n            which have already been affected by previous item.\n        */\n        if (chaining) {\n            _item = batchMap.get(cue.key);\n            if (_item != undefined) {\n                item.old = _item.old;\n                item.delta = cue_delta(new_cue, item.old, equals);\n            }\n        }\n\n        batchMap.set(cue.key, item)\n\n        //console.log(\"OLD:\", cue_to_string(old_cue));\n        //console.log(\"NEW:\", cue_to_string(new_cue));\n\n        /***********************************************************\n            update cueBuckets\n\n            - use delta.interval to avoid unnessesary changes\n\n            - interval may change in several ways:\n                - low changed\n                - high changed\n                - low and high changed\n            - changed intervals may stay in bucket or change bucket:\n            - changing to/from singular may require special consideration\n              with respect to how many endpoints are being updated\n                - singular -> singular\n                - singular -> regular\n                - regular -> singular\n                - regular -> regular\n            - changes to interval.lowInclude and interval highInclude\n              do not require any changes to CueBuckets, as long\n              as interval.low and interval.high values stay unchanged.\n        ***********************************************************/\n\n        if (delta.interval == Delta.NOOP) {\n            // no changes to interval - no change needed in pointMap \n            return;\n        } else if (delta.interval == Delta.INSERT) {\n            remove_needed = false;\n            add_needed = true;\n            low_changed = true;\n            high_changed = true;\n        } else if (delta.interval == Delta.DELETE) {\n            remove_needed = true;\n            add_needed = false;\n            low_changed = true;\n            high_changed = true;\n        } else if (delta.interval == Delta.REPLACE) {\n            remove_needed = true;\n            add_needed = true;\n            low_changed = new_cue.interval.low != old_cue.interval.low;\n            high_changed = new_cue.interval.high != old_cue.interval.high;\n        }\n\n        /*\n            old cue and new cue might not belong to the same cue bucket\n        */\n        if (remove_needed){\n            let old_bid = getCueBucketId(old_cue.interval.length);\n            oldCueBucket = this._cueBuckets.get(old_bid);\n        }\n        if (add_needed) {\n            let new_bid = getCueBucketId(new_cue.interval.length);\n            newCueBucket = this._cueBuckets.get(new_bid);\n        }\n\n        /*\n            if old CueBucket is different from the new cue Buckets\n            both low and high must be moved, even it one was not\n            changed\n        */\n        if (oldCueBucket && newCueBucket) {\n            if (oldCueBucket != newCueBucket) {\n                remove_needed = true;\n                add_needed = true;\n                low_changed = true;\n                high_changed = true;\n            }\n        }\n\n        /*\n            dispatch add and remove operations for interval points\n\n            cues in CueBucket may be removed using a copy of the cue,\n            because remove is by key.\n\n            cues added to CueBucket must be the correct object\n            (current_cue), so that later in-place modifications become\n            reflected in CueBucket.\n        */\n\n        // update low point - if changed\n        if (low_changed) {\n            if (remove_needed) {\n                oldCueBucket.del_endpoint(old_cue.interval.low, old_cue);\n            }\n            if (add_needed) {\n                newCueBucket.add_endpoint(new_cue.interval.low, new_cue);\n            }\n        }\n        // update high point - if changed\n        if (high_changed) {\n            if (remove_needed && !old_cue.interval.singular) {\n                oldCueBucket.del_endpoint(old_cue.interval.high, old_cue);\n            }\n            if (add_needed && !new_cue.interval.singular) {\n                newCueBucket.add_endpoint(new_cue.interval.high, new_cue);\n            }\n        }\n    }\n\n\n    /*\n        INTERNAL FUNCTION\n        execute method across all cue buckets\n        and aggregate results\n    */\n    _call_buckets(method, ...args) {\n        const arrays = [];\n        for (let cueBucket of this._cueBuckets.values()) {\n            let cues = cueBucket[method](...args);\n            if (cues != undefined && cues.length > 0) {\n                arrays.push(cues);\n            }\n        }\n        return utils.array_concat(arrays);\n    };\n\n    /*\n        LOOKUP ENDPOINTS\n\n        returns (endpoint, cue) for all endpoints covered by given interval\n\n        returns:\n            - [{endpoint: endpoint, cue:cue}]\n    */\n\n    lookup_endpoints(interval) {\n        return this._call_buckets(\"lookup_endpoints\", interval);\n    };\n\n\n    /*\n        LOOKUP\n    */\n\n    lookup(interval, mask) {\n        return this._call_buckets(\"lookup\", interval, mask);\n    };\n\n\n    /*\n        REMOVE CUES BY INTERVAL\n    */\n    lookup_delete(interval, mask) {\n        const cues = this._call_buckets(\"lookup_delete\", interval, mask);\n        // remove from _map and make event items\n        const items = [];\n        let cue;\n        for (let i=0; i<cues.length; i++) {\n            cue = cues[i];\n            this._map.delete(cue.key);\n            // check for equality\n            items.push({key:cue.key, new: undefined, old: cue});\n        }\n        // event notification\n        this._notifyEvents(items);\n        return items;\n    };\n\n    /*\n        CLEAR ALL CUES\n    */\n    clear() {\n        // clear cue Buckets\n        this._call_buckets(\"clear\");\n        // clear _map\n        let _map = this._map;\n        this._map = new Map();\n        // create change events for all cues\n        const items = [];\n        for (let cue of _map.values()) {\n            items.push({key: cue.key, new: undefined, old: cue});\n        }\n        // event notification\n        this._notifyEvents(items);\n        return items;\n    };\n\n\n    /*\n        utility\n    */\n    integrity() {\n\n        const res = this._call_buckets(\"integrity\");\n\n        // sum up cues and points\n        let cues = [];\n        let points = [];\n        for (let bucketInfo of res.values()) {\n            cues.push(bucketInfo.cues);\n            points.push(bucketInfo.points);\n        }\n        cues = [].concat(...cues);\n        points = [].concat(...points);\n        // remove point duplicates if any\n        points = [...new Set(points)];\n\n        // check map cues versus all cues in all buckets\n        // map cues may include cues with no interval\n        let no_interval_cues = [...this._map.values()].filter(cue => cue.interval == undefined);\n\n        let count_buckets = cues.length;\n        let count_no_interval = no_interval_cues.length;\n        let count_map = this._map.size;\n        let diff = count_map - count_buckets - count_no_interval;\n        if (diff != 0) {\n            console.log(\"count buckets\", count_buckets);\n            console.log(\"count no intervals\", count_no_interval);\n            console.log(\"count map\", count_map);\n            console.log(\"count diff\", diff);\n            throw new Error(\"inconsistent cue count\");\n        }\n\n        // check that cue maps are non overlapping\n        let bucket_map = new Map(cues.map(cue => [cue.key, cue]));\n        let map_map = new Map([...this._map.entries()].filter(([key, cue]) => {\n            return (cue.interval != undefined);\n        }));\n\n        let missing = utils.map_difference(bucket_map, map_map);\n        if (missing.size > 0) {\n            console.log(\"buckets missing cues:\")\n            console.log([...missing.keys()])\n            throw new Error(`buckets missing cues: ${[...missing.keys()]}`);\n        }\n        \n        missing = utils.map_difference(map_map, bucket_map);\n        if (missing.size > 0) {\n            throw new Error(`buckets too many cues: ${[...missing.keys()]}`);\n        }\n\n        return {\n            cues: cues.length,\n            points: points.length\n        };\n    };\n\n}\n\n\n/*\n    CueBucket is a bucket of cues limited to specific length\n*/\n\n\nclass CueBucket {\n\n\n    constructor(maxLength) {\n\n        // max length of cues in this bucket\n        this._maxLength = maxLength;\n\n        /*\n            pointMap maintains the associations between values (points on\n            the timeline) and cues that reference such points. A single point value may be\n            referenced by multiple cues, so one point value maps to a list of cues.\n\n            value -> [cue, ....]\n        */\n        this._pointMap = new Map();\n\n\n        /*\n            pointIndex maintains a sorted list of numbers for efficient lookup.\n            A large volume of insert and remove operations may be problematic\n            with respect to performance, so the implementation seeks to\n            do a single bulk update on this structure, for each batch of cue\n            operations (i.e. each invocations of addCues). In order to do this\n            all cue operations are processed to calculate a single batch\n            of deletes and a single batch of inserts which then will be applied to\n            the pointIndex in one atomic operation.\n\n            [1.2, 3, 4, 8.1, ....]\n        */\n        this._pointIndex = new BinarySearch();\n\n        // bookeeping during batch processing\n        this._created = new Set(); // point\n        this._dirty = new Set(); // point\n\n    };\n\n\n    /*\n\n        ENDPOINT BATCH PROCESSING\n\n        Needs to translate endpoint operations into a minimum set of\n        operations on the pointIndex.\n\n        To do this, we need to record points that are created and\n        points that are removed.\n\n        The total difference that the batch of cue operations\n        amounts to is expressed as one list of values to be\n        deleted, and and one list of values to be inserted.\n        The update operation of the pointIndex will process both\n        in one atomic operation.\n\n        On flush both the pointMap and the pointIndex will be brought\n        up to speed\n\n        created and dirty are used for bookeeping during\n        processing of a cue batch. They are needed to\n        create the correct diff operation to be applied on pointIndex.\n\n        created : includes values that were not in pointMap\n        before current batch was processed\n\n        dirty : includes values that were in pointMap\n        before current batch was processed, and that\n        have been become empty at least at one point during cue\n        processing.\n\n        created and dirty are used as temporary alternatives to pointMap.\n        after the cue processing, pointmap will updated based on the\n        contents of these two.\n\n        process buffers operations for pointMap and index so that\n        all operations may be applied in one batch. This happens in flush\n    */\n\n    add_endpoint(point, cue) {\n        let init = (this._pointMap.size == 0);\n        let cues = (init) ? undefined : this._pointMap.get(point);\n        if (cues == undefined) {\n            this._pointMap.set(point, [cue]);\n            this._created.add(point);\n        } else {\n            cues.push(cue);\n            //addCueToArray(cues, cue);\n        }\n    }\n\n    del_endpoint(point, cue) {\n        let init = (this._pointMap.size == 0);\n        let cues = (init) ? undefined : this._pointMap.get(point);\n        if (cues != undefined) {\n            let empty = removeCueFromArray(cues, cue);\n            if (empty) {\n                this._dirty.add(point);\n            }\n        }\n    };\n\n    /* \n        in case of data update without touching the interval\n        the new cue needs to be insert in place of the old\n    */\n    replace_endpoint(point, cue) {\n        let init = (this._pointMap.size == 0);\n        let cues = (init) ? undefined : this._pointMap.get(point);\n        if (cues != undefined) {\n            let ok = replaceCueInArray (cues, cue);\n            if (!ok) {\n                console.log(\"WARNING: attempt to replace non-existent cue in pointMap\")\n            }\n        }\n    }\n\n\n    /*\n        Batch processing is completed\n        Commit changes to pointIndex and pointMap.\n\n        pointMap\n        - update with contents of created\n\n        pointIndex\n        - points to delete - dirty and empty\n        - points to insert - created and non-empty\n\n        it is possible that a cue ends up in both created and dirty\n\n    */\n    flush() {\n        if (this._created.size == 0 && this._dirty.size == 0) {\n            return;\n        }\n\n        // update pointIndex\n        let to_remove = [];\n        let to_insert = [];\n        for (let point of this._created.values()) {\n            let cues = this._pointMap.get(point);\n            if (cues.length > 0) {\n                to_insert.push(point);\n            } else {\n                this._pointMap.delete(point);\n            }\n        }\n        for (let point of this._dirty.values()) {\n            let cues = this._pointMap.get(point);\n            if (cues == undefined) {\n                // point already deleted from created set - ignore\n                continue;\n            }\n            if (cues.length == 0) {\n                to_remove.push(point);\n                this._pointMap.delete(point);\n            }\n        }\n        this._pointIndex.update(to_remove, to_insert);\n        // cleanup\n        this._created.clear();\n        this._dirty.clear();\n    };\n\n\n    /*\n        LOOKUP_ENDPOINTS\n\n        returns all (endpoint, cue) pairs where\n            - endpoint is a cue endpoint (cue.endpointLow or cue.endpointHigh)\n            - endpoint is INSIDE search interval\n            - [{endpoint:endpoint, cue: cue}]\n\n        - a given endpoint may appear multiple times in the result,\n          as multiple cues may be tied to the same endpoint\n        - a given cue may appear two times in the result, if\n          both cue.endpointLow and cue.endpointHigh are both INSIDE interval\n        - a singular cue will appear only once\n        - ordering: no specific order is guaranteed\n          - results are concatenated from multiple CueBuckets\n          - internally in a single CueBucket\n            - no defined order for cues tied to the same endpoint\n          - the natural order is endpoint order\n            - but this can be added on the outside if needed\n            - no order is defined if two cues have exactly the\n              same endpoint\n\n    */\n\n    lookup_endpoints(interval) {\n        if (this._pointMap.size == 0) {\n            return [];\n        }\n        const broader_interval = new Interval(interval.low, interval.high, true, true);\n        const points = this._pointIndex.lookup(broader_interval);\n        const result = [];\n        const len = points.length;\n        let point, _endpoint;\n        for (let i=0; i<len; i++) {\n            point = points[i];\n            this._pointMap.get(point)\n                .forEach(function (cue) {\n                    /*\n                        figure out if point is endpoint low or high\n                        include cue if the endpoint is inside search interval\n                    */\n                    if (point == cue.interval.low) {\n                        _endpoint = cue.interval.endpointLow;\n                    } else if (point == cue.interval.high) {\n                        _endpoint = cue.interval.endpointHigh;\n                    } else {\n                        console.log(\"DS INDEX ERROR\");\n                        console.log(\"cuebucket:\", this._maxLength);\n                        console.log(\"lookup endpoints in interval\", broader_interval.toString());\n                        console.log(\"POINT:\", point); \n                        console.log(\"CUE:\", cue.interval.toString())\n                        this.integrity();\n                        throw new Error(\"fatal: point cue mismatch\");\n                    }\n                    if (interval.covers_endpoint(_endpoint)) {\n                        result.push({endpoint:_endpoint, cue:cue});\n                    }\n                }, this);\n        }\n        return result;\n    }\n\n\n    /*\n        _LOOKUP CUES\n\n        Internal function, used by LOOKUP.\n\n        Return list of cues\n        - all cues with at least one endpoint value v,\n          where interval.low <= v <= interval.high\n        - no duplicates\n\n        Note - some cues may be outside the search interval\n        e.g. if the search interval is [.., 4) then\n        (4, ...] will be returned, even if this strictly\n        is OUTSIDE_RIGHT the search interval.\n        This is necessary in lookup for correct calculation of covers\n        from left_interval.\n    */\n\n    _lookup_cues(interval) {\n        if (this._pointMap.size == 0) {\n            return [];\n        }\n        const broader_interval = new Interval(interval.low, interval.high, true, true);\n        const points = this._pointIndex.lookup(broader_interval);\n        const len = points.length;\n        const cueSet = new Set();\n        const result = [];\n        let low_inside, high_inside;\n        for (let i=0; i<len; i++) {\n            this._pointMap.get(points[i])\n                .forEach(function(cue) {\n                    // avoid duplicates\n                    if (cueSet.has(cue.key)) {\n                        return;\n                    } else {\n                        cueSet.add(cue.key);\n                    }\n                    result.push(cue);\n                });\n        }\n        return result;\n    }\n\n\n\n    /*\n        LOOKUP\n\n        Strategy split task into two subtasks,\n\n        1) find cues [OVERLAP_LEFT, COVERED, EQUALS, OVERLAP_RIGHT]\n        2) find cues [COVERS]\n\n        // mode order\n        Relation.OVERLAP_LEFT,\n        Relation.COVERED,\n        Relation.EQUALS,\n        Relation.COVERS,\n        Relation.OVERLAP_RIGHT\n    */\n\n\n    lookup(interval, mask=Interval.Match.COVERS) {\n\n        if (this._pointMap.size == 0) {\n            return [];\n        }\n\n        let cues = [];\n\n        // ignore illegal values\n        mask &= Interval.Match.COVERS;\n\n        // special case only [EQUALS]\n        if (mask == Relation.EQUALS) {\n            return this._pointMap.get(interval.low).filter(function(cue) {\n                return cue.interval.match(interval, Relation.EQUALS);\n            });\n        }\n\n        // handle match with the basic lookup mask first\n        // [OVERLAP_LEFT, COVERED, EQUALS, OVERLAP_RIGHT]\n        let _mask = mask & Interval.Match.OVERLAP;\n        if (_mask) {\n            // keep cues which match lookup part of basic mask,\n            cues = this._lookup_cues(interval)\n                .filter(function(cue){\n                    return cue.interval.match(interval, _mask);\n                });\n        }\n\n        /*\n            intervals in this CueBucket are limited by maxLength\n            if interval.length is larger than maxLength, no cue\n            in this CueBucket can cover interval\n        */\n        if (interval.length > this._maxLength) {\n            return cues;\n        }\n\n        /*\n            handle match with COVERS separately\n\n            search left of search interval for cues\n            that covers the search interval\n            search left is limited by CueBucket maxlength\n            left_interval: [interval.high-maxLength, interval.low]\n\n            it would be possible to search right too, but we\n            have to choose one.\n        */\n        if (mask & Relation.COVERS) {\n\n\n            let low = interval.high - this._maxLength;\n            let high = interval.low;\n            // protect against float rounding effects creating\n            // high < low by a very small margin\n            [low, high] = [Math.min(low, high), Math.max(low, high)];\n            let left_interval = new Interval(low, high, true, true);\n            this._lookup_cues(left_interval)\n                .forEach(function(cue){\n                    if (cue.interval.match(interval, Relation.COVERS)) {\n                        cues.push(cue);\n                    }\n                });\n        }\n\n        return cues;\n    }\n\n\n    /*\n        REMOVE CUES\n    */\n    lookup_delete(interval, mask) {\n        /*\n            update pointMap\n            - remove all cues from pointMap\n            - remove empty entries in pointMap\n            - record points that became empty, as these need to be deleted in pointIndex\n            - separate into two bucketes, inside and outside\n        */\n        const cues = this.lookup(interval, mask);\n        const to_remove = [];\n        let cue, point, points;\n        for (let i=0; i<cues.length; i++) {\n            cue = cues[i];\n            // points of cue\n            if (cue.interval.singular) {\n                points = [cue.interval.low];\n            } else {\n                points = [cue.interval.low, cue.interval.high];\n            }\n            for (let j=0; j<points.length; j++) {\n                point = points[j];\n                // remove cue from pointMap\n                // delete pointMap entry only if empty\n                let empty = removeCueFromArray(this._pointMap.get(point), cue);\n                if (empty) {\n                    this._pointMap.delete(point);\n                    to_remove.push(point);\n                }\n            }\n        }\n\n        /*\n            update pointIndex\n\n            - remove all points within pointIndex\n            - exploit locality, the operation is limited to a segment of the index, so\n              the basic idea is to take out a copy of segment (slice), do modifications, and then reinsert (splice)\n            - the segment to modify is limited by [interval.low - maxLength, interval.high + maxLenght] as this will cover\n              both cues inside, partial and overlapping.\n\n            # Possible - optimization\n            alternative approach using regular update could be more efficient for very samll batches\n            this._pointIndex.update(to_remove, []);\n            it could also be comparable for huge loads (250.000 cues)\n        */\n\n        to_remove.sort(function(a,b){return a-b});\n        this._pointIndex.removeInSlice(to_remove);\n\n        /*\n            alternative solution\n            this._pointIndex.update(to_remove, []);\n        */\n\n        return cues;\n    };\n\n\n    /*\n        Possible optimization. Implement a removecues method that\n        exploits locality by removing an entire slice of pointIndex.\n        - this can safely be done for LookupMethod.OVERLAP and PARTIAL.\n        - however, for LookupMethod.INSIDE, which is likely the most useful\n          only some of the points in pointIndex shall be removed\n          solution could be to remove entire slice, construct a new slice\n          with those points that should not be deleted, and set it back in.\n    */\n    clear() {\n        this._pointMap.clear();\n        this._pointIndex = new BinarySearch();\n        this._created.clear();\n        this._dirty.clear();\n    };\n\n\n    /*\n        Integrity test for cue bucket datastructures\n        pointMap and pointIndex\n    */\n    integrity() {\n\n        /* \n            invariable - pointMap and pointIndex always manage the same set of points\n        */\n        const index_point_set = new Set([...this._pointIndex.values()]);\n        const map_point_set = new Set([...this._pointMap.keys()]);\n\n        if (!utils.eqSet(index_point_set, map_point_set)) {\n            let missing = utils.set_difference(index_point_set, map_point_set);\n            if (missing.size > 0) {\n                throw new Error(`pointMap missing points: ${[...missing]}`);\n            }\n            \n            missing = utils.set_difference(map_point_set, index_point_set);\n            if (missing.size > 0) {\n                throw new Error(`pointIndex missing points: ${[...missing]}`);\n            }\n        }\n\n        /*\n            invariable - pointIndex shall always be sorted and not contain duplicates\n        */\n        let points = [...this._pointIndex.values()];\n        if (points.length != index_point_set.size) {\n            throw new Error(\"pointIndex include duplicate points\");\n        }\n        for (let i=1; i<points.length; i++) {\n            if (points[i-1] >= points[i]) {\n                throw new Error(\"pointIndex not ordered\");\n            }            \n        }\n\n        /**\n         *  invariable - pointMap point -> cues \n         *  cues shall only include cues which are relevant to given point\n         */\n        for (let point of points) {\n            let cues = this._pointMap.get(point);\n            for (let cue of cues) {\n                // figure out if point is endpoint low or high\n                if (point == cue.interval.low) {\n                    continue;\n                } else if (point == cue.interval.high) {\n                    continue;\n                } else {\n                    console.log(\"POINT:\", point); \n                    console.log(\"CUE:\", cue.interval.toString());\n                    throw new Error(\"pointMap: wrong cue\");\n                }\n            }        \n        }\n\n\n        /**\n         * invariable - all endpoints from all cues from pointMap are found as points in pointMap\n         */\n\n        for (let _cue_list of [...this._pointMap.values()]) {\n            for (let cue of _cue_list) {\n                for (let p of [cue.interval.low, cue.interval.high]) {\n                    if (!this._pointMap.has(p)) {\n                        throw new Error(`cue found with low or high point not in pointMap ${p} -> ${cue.interval.toString()} `);\n                    }\n                }\n            }\n        }\n\n\n        /*\n            invariable - all cues in pointMap with same key are same object\n        */\n\n        // collect all cues from pointMap\n        let _cues = [];\n        for (let _cue_list of this._pointMap.values()) {\n            for (let cue of _cue_list) {\n                _cues.push(cue);\n            }\n        }\n\n        // remove and check duplicates\n        let cueMap = new Map();\n        for (let cue of _cues) {\n            let _cue = cueMap.get(cue.key);\n            if (_cue == undefined) {\n                cueMap.set(cue.key, cue);\n            } else {\n                // duplicate\n                if (cue !== _cue) {\n                    throw new Error(\"pointMap: different cue objects for same key\");\n                }\n            }\n        }\n        let cues = [...cueMap.values()];\n\n        /**\n         * invariable - all cues belong to this bucket\n         */\n\n        for (let cue of cues.values()) {\n            // check that cue belongs to this bucket\n            if (cue.interval.length > this._maxLength) {\n                throw new Error(`cue in wrong cue bucket  ${this._maxLength}, ${cue.interval.toString()}`);\n            }\n        }\n\n        return [{\n            maxLength: this._maxLength,\n            points: [...this._pointMap.keys()],\n            cues: cues\n        }];\n    };\n}\n\n// module definition\nexport default Dataset;\n","/*\n    Copyright 2020\n    Author : Ingar Arntzen\n\n    This file is part of the Timingsrc module.\n\n    Timingsrc is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Timingsrc is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\nimport endpoint from '../util/endpoint.js';\nimport Interval from '../util/interval.js';\nimport Timeout from '../util/timeout.js';\nimport * as motionutils from '../util/motionutils.js';\n\nconst pft = motionutils.posInterval_from_timeInterval;\n\nfunction queueCmp(a,b) {\n    return endpoint.cmp(a.tsEndpoint, b.tsEndpoint);\n};\n\nclass Schedule {\n\n    // Default lookahead in seconds\n    static LOOKAHEAD = 5\n\n    constructor(dataset, to, options) {\n        // timingobject\n        this.to = to;\n        // current timeout\n        this.timeout = new Timeout(to, this.run.bind(this));\n        // current vector\n        this.vector;\n        // current time interval\n        this.timeInterval;\n        // current position interval\n        this.posInterval;\n        // dataset\n        this.dataset = dataset;\n        // task queue\n        this.queue = [];\n        // callbacks\n        this.callbacks = [];\n        // options\n        options = options || {};\n        options.lookahead = options.lookahead || Schedule.LOOKAHEAD;\n        this.options = options;\n    }\n\n\n    /***************************************************************\n        CALLBACKS\n    ***************************************************************/\n\n    add_callback (handler) {\n        let handle = {\n            handler: handler\n        }\n        this.callbacks.push(handle);\n        return handle;\n    };\n\n    del_callback (handle) {\n        let index = this.callbacks.indexof(handle);\n        if (index > -1) {\n            this.callbacks.splice(index, 1);\n        }\n    };\n\n    _notify_callbacks (...args) {\n        this.callbacks.forEach(function(handle) {\n            handle.handler(...args);\n        });\n    };\n\n    /***************************************************************\n        MOTION CHANGE\n    ***************************************************************/\n\n    /*\n        update schedule with new motion vector\n    */\n    setVector(vector) {\n        let now = vector.timestamp;\n        // clean up current motion\n        let current_vector = this.vector;\n        if (this.vector != undefined) {\n            this.timeout.clear();\n            this.timeInterval = undefined;\n            this.posInterval = undefined;\n            this.queue = [];\n        }\n        // update vector\n        this.vector = vector;\n        // start scheduler if moving\n        if (motionutils.isMoving(this.vector)) {\n            this.run(now);\n        }\n    }\n\n\n    /***************************************************************\n        TASK QUEUE\n    ***************************************************************/\n\n    /*\n        push eventItem onto queue\n    */\n    push(eventItems) {\n        eventItems.forEach(function(item) {\n            if (this.timeInterval.covers_endpoint(item.tsEndpoint)) {\n                this.queue.push(item);\n            }\n        }, this);\n        // maintain ordering\n        this.queue.sort(queueCmp);\n    };\n\n    /*\n        pop due eventItems from queue\n    */\n    pop(now) {\n        let eventItem, res = [];\n        let len = this.queue.length;\n        while (this.queue.length > 0 && this.queue[0].tsEndpoint[0] <= now) {\n            res.push(this.queue.shift());\n        }\n        return res;\n    };\n\n    /*\n        return timestamp of next eventItem\n    */\n    next() {\n        return (this.queue.length > 0) ? this.queue[0].tsEndpoint[0]: undefined;\n    }\n\n\n    /***************************************************************\n        ADVANCE TIMEINTERVAL/POSINTERVAL\n    ***************************************************************/\n\n\n    /*\n        advance timeInterval and posInterval if needed\n    */\n    advance(now) {\n        let start, delta = this.options.lookahead;\n        let advance = false;\n        if (this.timeInterval == undefined) {\n            start = now;\n            advance = true;\n        } else if (endpoint.leftof(this.timeInterval.endpointHigh, now)) {\n            start = this.timeInterval.high;\n            advance = true\n        }\n        if (advance) {\n            // advance intervals\n            this.timeInterval = new Interval(start, start + delta, true, false);\n            this.posInterval = pft(this.timeInterval, this.vector);\n            // clear task queue\n            this.queue = [];\n        }\n        return advance;\n    }\n\n\n    /***************************************************************\n        LOAD\n    ***************************************************************/\n\n    /*\n        load events\n    */\n\n    load(endpoints, minimum_tsEndpoint) {\n        let endpointEvents = motionutils.endpointEvents(this.timeInterval,\n                                                        this.posInterval,\n                                                        this.vector,\n                                                        endpoints);\n\n        /*\n            ISSUE 1\n\n            Range violation might occur within timeInterval.\n            All endpointEvents with .tsEndpoint later or equal to range\n            violation will be cancelled.\n        */\n        let range_ts = motionutils.rangeIntersect(this.vector, this.to.range)[0];\n\n        /*\n            ISSUE 2\n\n            If load is used in response to dynamically added cues, the\n            invocation of load might occor at any time during the timeInterval,\n            as opposed to immediately after the start of timeInterval.\n            This again implies that some of the endPointEvents we have found\n            from the entire timeInterval might already be historic at time of\n            invocation.\n\n            Cancel endpointEvents with .tsEndpoint < minimum_ts.\n\n            For regular loads this will have no effect since we\n            do not specify a minimum_ts, but instead let it assume the\n            default value of timeInterval.low.\n        */\n        if (minimum_tsEndpoint == undefined) {\n            minimum_tsEndpoint = this.timeInterval.endpointLow;\n        }\n\n        /*\n            ISSUE 3\n\n            With acceleration the motion might change direction at\n            some point, which might also be a cue endpoint. In this\n            case, motion touches the cue endpoint but does not actually\n            cross over it.\n\n            For simplicity we say that this should not change the\n            active state of that cue. The cue is either not activated\n            or not inactivated by this occurrence. We might therefor\n            simply drop such endpointEvents.\n\n            To detect this, note that velocity will be exactly 0\n            evaluated at the cue endpoint, but acceleration will be nonzero.\n\n            Importantly, there is one exception. Dropping such events\n            should only happen when 0 velocity is reached during motion,\n            not at the start of a motion. For instance, in the case of\n            starting with acceleration but no velocity, from a cue\n            endpoint, this event should not be dropped.\n            This is avoided by requiring that the tsEndpoint is not\n            equal to timeInterval.endpointLow\n\n        */\n\n        return endpointEvents.filter(function(item) {\n            // ISSUE 1\n            if (range_ts <= item.tsEndpoint[0]) {\n                // console.log(\"issue1\");\n                return false;\n            }\n\n            // ISSUE 2\n            if (endpoint.leftof(item.tsEndpoint, minimum_tsEndpoint)) {\n                // console.log(\"issue2\");\n                return false;\n            }\n            // ISSUE 3\n            // checks every event. alternative approach would be\n            // to calculate the ts of this event once, and compare\n            // the result to the ts of all event\n            if (this.vector.acceleration != 0.0) {\n                let ts = item.tsEndpoint[0];\n                if (ts > this.timeInterval.endpointLow[0]) {\n                    let v = motionutils.calculateVector(this.vector, ts);\n                    if (v.position == item.endpoint[0] && v.velocity == 0) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }, this);\n    }\n\n\n    /***************************************************************\n        RUN\n    ***************************************************************/\n\n    /*\n        run schedule\n    */\n    run(now) {\n        // process - due events\n        let dueEvents = this.pop(now);\n        // advance schedule and load events if needed\n        if (this.advance(now)) {\n            // fetch cue endpoints for posInterval\n            let endpointItems = this.dataset.lookup_endpoints(this.posInterval);\n            // load events and push on queue\n            this.push(this.load(endpointItems));\n            // process - possibly new due events\n            dueEvents.push(...this.pop(now));\n        }\n        if (dueEvents.length > 0) {\n            this._notify_callbacks(now, dueEvents, this);\n        }\n        // timeout - until next due event\n        let ts = this.next() || this.timeInterval.high;\n        this.timeout.setTimeout(Math.min(ts, this.timeInterval.high));\n    }\n}\n\nexport default Schedule;\n\n","/*\n    Copyright 2020\n    Author : Ingar Arntzen\n\n    This file is part of the Timingsrc module.\n\n    Timingsrc is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Timingsrc is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {map_intersect, map_difference} from '../util/utils.js';\nimport Interval from '../util/interval.js';\nimport CueCollection from '../dataset/cuecollection.js';\nimport Dataset from '../dataset/dataset.js';\n\n\nfunction isNoop(delta) {\n    return (delta.interval == Dataset.Delta.NOOP && delta.data == Dataset.Delta.NOOP);\n}\n\n\n/*******************************************************************\n ACTIVE MAP\n*******************************************************************/\n/*\n\n    This table describes cue changes to/from active state\n    based on\n\n    - to_role - the role of the timing object\n\n      in the case of the double sequencer a timing object\n      may be *LEFT* (L), *RIGHT* (R) or, in the corner case that\n      the two timing objects are at the same position,\n      *SINGULAR* (S)\n\n      in the case of the single sequencer, the role is\n      always *SINGULAR* (S)\n\n\n    - to_direction - the direction of the movement of the\n      timing object, either *RIGHT* (R) or *LEFT* (L)\n\n      This map is only used when timing object is in a\n      moving state, so *PAUSED* (P) is not needed.\n\n    - endpoint_type - the type of endpoint which is\n      passed by the timing object during motion, either\n      *LEFT* (R) endpoint or *RIGHT* (R) endpoint, or\n      *SINGULAR* (S) endpoint.\n\n    - cue_change\n      *ENTER* : cue changes from not active to active\n      *EXIT*: cue changes from active to not active\n      *STAY*: cue stays active\n      *ENTER-EXIT*: cue changes from not active to active,\n                    and immediately back agoind to not active\n                    This only occurs when a *SINGULAR*\n                    timing object passed a *SINGULAR* cue.\n\n\n    Table columns are:\n\n    | to_role | to_direction | endpoint_type | cue change |\n\n    left, right, left -> stay\n    left, right, right -> exit\n    left, right, singular -> exit\n\n    left, left, left -> stay\n    left, left, right -> enter\n    left, left, singular -> enter\n\n    right, right, left -> enter\n    right, right, right -> stay\n    right, right, singular -> enter\n\n    right, left, left -> exit\n    right, left, right -> stay\n    right, left, singular -> exit\n\n    // cornercase - timing objects are the same\n\n    singular, right, left -> enter\n    singular, right, right -> exit\n    singular, right, singular -> enter, exit\n\n    singular, left, left -> exit\n    singular, left, right -> enter\n    singular, left, singular -> enter, exit\n\n*/\n\nconst Active = Object.freeze({\n    ENTER: 1,\n    STAY: 0,\n    EXIT: -1,\n    ENTER_EXIT: 2\n});\n\nconst ActiveMap = new Map([\n    [\"LRL\", Active.STAY],\n    [\"LRR\", Active.EXIT],\n    [\"LRS\", Active.EXIT],\n    [\"LLL\", Active.STAY],\n    [\"LLR\", Active.ENTER],\n    [\"LLS\", Active.ENTER],\n    [\"RRL\", Active.ENTER],\n    [\"RRR\", Active.STAY],\n    [\"RRS\", Active.ENTER],\n    [\"RLL\", Active.EXIT],\n    [\"RLR\", Active.STAY],\n    [\"RLS\", Active.EXIT],\n    [\"SRL\", Active.ENTER],\n    [\"SRR\", Active.EXIT],\n    [\"SRS\", Active.ENTER_EXIT],\n    [\"SLL\", Active.EXIT],\n    [\"SLR\", Active.ENTER],\n    [\"SLS\", Active.ENTER_EXIT]\n]);\n\n\n\n/*******************************************************************\n DEFAULT EVENT ITEM ORDERING\n*******************************************************************/\n\nfunction cue_cmp_forwards (cue_a, cue_b) {\n    return Interval.cmpLow(cue_a.interval, cue_b.interval);\n}\n\nfunction cue_cmp_backwards (cue_a, cue_b) {\n    return -1 * Interval.cmpHigh(cue_a.interval, cue_b.interval);\n}\n\nfunction item_cmp_forwards (item_a, item_b) {\n    let cue_a = (item_a.new) ? item_a.new : item_a.old;\n    let cue_b = (item_b.new) ? item_b.new : item_b.old;\n    return cue_cmp_forwards(cue_a, cue_b);\n}\n\nfunction item_cmp_backwards (item_a, item_b) {\n    let cue_a = (item_a.new) ? item_a.new : item_a.old;\n    let cue_b = (item_b.new) ? item_b.new : item_b.old;\n    return cue_cmp_backwards(cue_a, cue_b);\n}\n\n/*******************************************************************\n BASE SEQUENCER\n*******************************************************************/\n\n/*\n    This is an abstract base class for sequencers\n    It implements common logic related to Dataset, events and activeCues.\n*/\n\nclass BaseSequencer extends CueCollection {\n\n    static Active = Active;\n    static ActiveMap = ActiveMap;\n\n    constructor (dataset, options) {\n        super(options);\n\n        // Active cues\n        this._map = new Map();\n\n        // Dataset\n        this._ds = dataset;\n        let cb = this._onDatasetCallback.bind(this)\n        this._ds_cb = this._ds.add_callback(cb);\n    }\n\n    /**\n     * CueCollection (ObservableMap) needs access to map \n     */\n    get datasource () {\n        return this._map;\n    }\n\n    /**\n     * Access to dataset of sequencer\n     */\n\n    get dataset () { \n        return this._ds;\n    }\n\n    /***************************************************************\n     EVENTS\n    ***************************************************************/\n\n    /*\n        Get the direction of movement\n        To be implemented by subclass\n    */\n    _movementDirection() {\n        throw new Error(\"not implemented\");\n    }\n\n    // override ObservableMap.sortValues to add special support for\n    // direction sensitive ordering as default ordering\n    sortValues(iter, options={}) {\n        let order = this.sortOrder(options);\n        if (typeof order == \"function\") {\n            // use order specified by options\n            return super.sortValues(iter, options)\n        } else {\n            // if iterable not array - convert into array ahead of sorting\n            let cues = (Array.isArray(iter)) ? iter : [...iter];\n            // default order is direction sensitive\n            let direction = this._movementDirection();\n            if (direction >= 0) {\n                cues.sort(cue_cmp_forwards);\n            } else {\n                cues.sort(cue_cmp_backwards);\n            }\n            return cues\n        } \n    }\n\n\n    // override ObservableMap.sortItems to add special support for\n    // direction sensitive ordering as default ordering\n    sortItems(items, direction) {\n        let order = this.sortOrder(); \n        if (typeof order == \"function\") {\n            // use order speciied by options\n            return super.sortItems(items)            \n        } \n        if (order == undefined) {\n            // default order is direction sensitive\n            if (direction == undefined) {\n                direction = this._movementDirection();\n            }\n            if (direction >= 0) {\n                items.sort(item_cmp_forwards);\n            } else {\n                items.sort(item_cmp_backwards);\n            }\n        }\n    }\n\n    /***************************************************************\n     MAP METHODS\n    ***************************************************************/\n\n    set (key, value) {\n        throw new Error(\"not implemented\");\n    }\n\n    delete (key) {\n        throw new Error(\"not implemented\");\n    }\n\n    clear (key) {\n        throw new Error(\"not implemented\");\n    }\n\n    /***************************************************************\n     DATASET\n    ***************************************************************/\n\n\n\n    _onDatasetCallback(eventMap, relevanceInterval) {\n        throw new Error(\"not implemented\");\n    }\n\n    /*\n        make exit, change and enter events\n        - based on eventMap\n    */\n    _items_from_dataset_events(eventMap, interval) {\n        const enterEvents = [];\n        const changeEvents = [];\n        const exitEvents = [];\n        const first = this._map.size == 0;\n        let is_active, should_be_active, _item;\n        for (let item of eventMap.values()) {\n            if (isNoop(item.delta)) {\n                continue;\n            }\n            // exit, change, enter events\n            is_active = (first) ? false : this._map.has(item.key);\n            should_be_active = false;\n            if (item.new != undefined) {\n                if (item.new.interval.match(interval)) {\n                    should_be_active = true;\n                }\n            }\n            if (is_active && !should_be_active) {\n                // exit\n                _item = {key:item.key, new:undefined, old:item.old};\n                exitEvents.push(_item);\n            } else if (!is_active && should_be_active) {\n                // enter\n                _item = {key:item.key, new:item.new, old:undefined};\n                enterEvents.push(_item);\n            } else if (is_active && should_be_active) {\n                // change\n                _item = {key:item.key, new:item.new, old:item.old};\n                changeEvents.push(_item);\n            }\n        };\n        return [exitEvents, changeEvents, enterEvents];\n    }\n\n    /*\n        make exit, change and enter events\n        - based on dataset.lookup\n    */\n    _items_from_dataset_lookup(eventMap, interval) {\n\n        /*\n            Active cues\n\n            find new set of active cues by querying the dataset\n        */\n        const _activeCues = new Map(this._ds.lookup(interval).map(function(cue) {\n            return [cue.key, cue];\n        }));\n\n        let changeEvents = [];\n        let exitEvents = [];\n        let first = (this._map.size == 0);\n        if (!first){\n\n            /*\n                Change Events\n\n                change cues - cues which are modified, yet remain active cues\n            */\n            let remainCues = map_intersect(this._map, _activeCues);\n            if (remainCues.size > 0) {\n                /*\n                    Two approaches\n\n                    1) large eventMap\n                    eventMap larger than remainCues\n                    - iterate remainCues\n                    - keep those that are found in eventMap\n\n                    2) large remainCues\n                    remainCues larger than eventMap\n                    - iterate eventMap\n                    - keep those that are found in remainCues\n\n                    measurement shows that 2) is better\n                */\n                let cue, _item;\n                for (let item of eventMap.values()) {\n                    cue = remainCues.get(item.key);\n                    if (cue != undefined && !isNoop(item.delta)) {\n                        _item = {key:item.key, new:item.new, old:item.old};\n                        changeEvents.push(_item);\n                    }\n                }\n            }\n\n            /*\n                Exit Events\n                exit cues were in old active cues - but not in new\n            */\n            let exitCues = map_difference(this._map, _activeCues);\n            exitEvents = [...exitCues.values()]\n                .map(cue => {\n                    return {key:cue.key, new:undefined, old:cue};\n                });\n        }\n\n        /*\n            Enter Events\n            enter cues were not in old active cues - but are in new\n        */\n        let enterCues;\n        if (first) {\n            enterCues = _activeCues\n        } else {\n            enterCues = map_difference(_activeCues, this._map);\n        }\n        let enterEvents = [...enterCues.values()]\n            .map(cue => {\n                return {key:cue.key, new:cue, old:undefined};\n            });\n\n        return [exitEvents, changeEvents, enterEvents];\n    }\n\n    /***************************************************************\n     V2 COMPATIBILTY\n\n     Sequencers forward dataset operation to datase\n    ***************************************************************/\n\n    get builder() {\n        return this.dataset.builder;\n    }\n\n    addCue(key, interval, data) {\n        return this.dataset.addCue(key, interval, data);\n    }\n\n    removeCue(key) {\n        return this.dataset.removeCue(key);\n    }\n\n    _addCue(key, interval, data) {\n        return this.dataset._addCue(key, interval, data);\n    }\n\n    _removeCue(key) {\n        return this.dataset._removeCue(key);\n    }\n\n    update(cues, options) {\n        return this.dataset.update(cues, options);\n    }\n\n    clear() {\n        return this.dataset.clear();\n    }\n\n    hasCue(key) {\n        return this.dataset.has(key);\n    }\n\n    getCue(key) {\n        return this.dataset.get(key);\n    }\n\n    getCues() {\n        return this.dataset.cues();\n    }\n\n    getActiveKeys() {\n        return [...this.keys()];\n    }\n\n    getActiveCues() {\n        return this.cues();\n    }\n\n    isActive(key) {\n        return this.has(key);\n    }\n\n}\n\nexport default BaseSequencer;\n","/*\n    Copyright 2020\n    Author : Ingar Arntzen\n\n    This file is part of the Timingsrc module.\n\n    Timingsrc is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Timingsrc is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {array_concat, map_difference} from '../util/utils.js';\nimport Interval from '../util/interval.js';\nimport * as motionutils from '../util/motionutils.js';\nimport Schedule from './schedule.js';\nimport BaseSequencer from './basesequencer.js';\n\nconst PosDelta = motionutils.MotionDelta.PosDelta;\nconst MoveDelta = motionutils.MotionDelta.MoveDelta;\nconst Active = BaseSequencer.Active;\nconst ActiveMap = BaseSequencer.ActiveMap;\n\nconst EVENTMAP_THRESHOLD = 5000;\nconst ACTIVECUES_THRESHOLD = 5000;\n\n\nclass PointModeSequencer extends BaseSequencer {\n\n    constructor (dataset, to, options) {\n\n        super(dataset, options);\n\n        // Timing Object\n        this._to = to;\n        this._sub = this._to.on(\"timingsrc\", this._onTimingCallback.bind(this));\n\n        // Schedule\n        this._sched = new Schedule(this._ds, to);\n        let cb = this._onScheduleCallback.bind(this);\n        this._sched_cb = this._sched.add_callback(cb)\n    }\n\n\n    /*\n        Implement movement direction from single timing object\n    */\n    _movementDirection() {\n        const now = this._to.clock.now();\n        return motionutils.calculateDirection(this._to.vector, now);\n    }\n\n\n    /***************************************************************\n     DATASET CALLBACK\n    ***************************************************************/\n\n    /*\n        Handling Dataset Update Callbacks\n    */\n\n    _onDatasetCallback(eventMap, relevanceInterval) {\n        /*\n            process dataset events which are relevant to the set\n            of activeCues, or to the immediate future (schedule)\n\n            enterCues - inactive -> active\n            changeCues - active -> active, but changed\n            exitCues - active -> inactive\n\n            Two approaches\n            - 1) EVENTS: filter list of events - compare to current active cues\n            - 2) LOOKUP: regenerate new activeCues by looking up set of\n                 active cues from dataset, compare it to current active cues\n\n\n            EventMap.size < about 1K-10K (5K)\n            - EVENTS better or equal\n            EventMap.size > about 5K\n            - LOOKUP better\n            - exception\n                - If activeCues.size > 1K-10K (5K) - EVENTS BETTER\n\n            If new cues are predominantly active cues, EVENTS are\n            always better - and more so for larger sets of events.\n            However, there is no information about this\n            before making the choice, and also this is a somewhat\n            unlikely scenario.\n\n            So, the simple policy above works for typical workloads,\n            where the majority of added cues are inactive.\n        */\n\n        if (!this._to.isReady()) {\n            return;\n        }\n\n        if (relevanceInterval == undefined) {\n            return;\n        }\n\n        const now = this._to.clock.now();\n        const now_vector = motionutils.calculateVector(this._to.vector, now);\n\n        // activeInterval\n        const activeInterval = new Interval(now_vector.position);\n\n        if (!activeInterval.match(relevanceInterval, Interval.Match.OUTSIDE)) {\n            // relevanceInterval is NOT outside activeInterval\n            // some events relevant for activeIntervale\n\n            // choose approach to get events\n            let get_items = this._items_from_dataset_events.bind(this);\n            if (EVENTMAP_THRESHOLD < eventMap.size) {\n                if (this._map.size < ACTIVECUES_THRESHOLD) {\n                    get_items = this._items_from_dataset_lookup.bind(this);\n                }\n            }\n\n            // get items\n            const [exit, change, enter] = get_items(eventMap, activeInterval);\n\n            // update activeCues\n            exit.forEach(item => {\n                this._map.delete(item.key);\n            });\n            enter.forEach(item => {\n                this._map.set(item.key, item.new);\n            });\n\n            // notifications\n            const items = array_concat([exit, change, enter], {copy:true, order:true});\n\n            // sort event items according to general movement direction\n            let direction = motionutils.calculateDirection(now_vector);\n            this.sortItems(items, direction);\n\n            // event notification\n            this._notifyEvents(items);\n        }\n\n        /*\n            clear schedule\n\n            This is only necessary if a cue interval is changed,\n            and the change is relevant within the posInterval of\n            of the schedule. RelevanceInterval to figure this out.\n        */\n        if (this._sched.posInterval) {\n            if (!this._sched.posInterval.match(relevanceInterval, Interval.Match.OUTSIDE)) {\n                // relevanceInterval is NOT outside schedule posInterval\n                // refresh schedule\n                this._sched.setVector(now_vector);\n            }\n        }\n    }\n\n\n    /***************************************************************\n     TIMING OBJECT CALLBACK\n    ***************************************************************/\n\n    _onTimingCallback (eArg) {\n        /*\n            If update is the initial vector from the timing object,\n            we set current time as the official time for the update.\n            Else, the new vector is \"live\" and we use the timestamp\n            when it was created as the official time for the update.\n            This is represented by the new_vector.\n        */\n        let new_vector;\n\n        if (eArg.live) {\n            new_vector = this._to.vector;\n        } else {\n            // make a live vector from to vector\n            new_vector = motionutils.calculateVector(this._to.vector, this._to.clock.now());\n        }\n\n        /*\n            The nature of the vector change\n        */\n        let delta = new motionutils.MotionDelta(this._to.old_vector, new_vector);\n\n        /*\n            Reevaluate active state.\n            This is required after any discontinuity of the position (jump),\n            or if the motion stopped without jumping (pause or halt at range\n            restriction)\n        */\n        const items = [];\n        if (delta.posDelta == PosDelta.CHANGE || delta.moveDelta == MoveDelta.STOP) {\n            // make position interval\n            let low = new_vector.position;\n            let high = new_vector.position;\n            let itv = new Interval(low, high, true, true);\n            // new active cues\n            let activeCues = new Map(this._ds.lookup(itv).map(cue => {\n                return [cue.key, cue];\n            }));\n            // exit cues - in old activeCues but not in new activeCues\n            let exitCues = map_difference(this._map, activeCues);\n            // enter cues - not in old activeCues but in new activeCues\n            let enterCues = map_difference(activeCues, this._map);\n            // update active cues\n            this._map = activeCues;\n            // make event items\n            for (let cue of exitCues.values()) {\n                items.push({key:cue.key, new:undefined, old:cue});\n            }\n            for (let cue of enterCues.values()) {\n                items.push({key:cue.key, new:cue, old:undefined});\n            }\n\n            // sort event items according to general movement direction\n            let direction = motionutils.calculateDirection(new_vector);\n            this.sortItems(items, direction);\n\n            // event notification\n            this._notifyEvents(items);\n        }\n\n        /*\n            Handle Timing Object Moving\n        */\n        this._sched.setVector(new_vector);\n    };\n\n\n    /***************************************************************\n     SCHEDULE CALLBACK\n    ***************************************************************/\n\n    _onScheduleCallback = function(now, endpointItems, schedule) {\n        if (!this._to.isReady()) {\n            return;\n        }\n\n        const items = [];\n        endpointItems.forEach(function (item) {\n            let cue = item.cue;\n            let has_cue = this._map.has(cue.key);\n            let [value, right, closed, singular] = item.endpoint;\n\n            /*\n                Action Code - see sequenceutils\n            */\n            // to role\n            let to_role = \"S\";\n            // movement direction\n            let to_dir = (item.direction > 0) ? \"R\" : \"L\";\n            // endpoint type\n            let ep_type = (singular) ? \"S\": (right) ? \"R\" : \"L\";\n            // action code, enter, exit, stay, enter-exit\n            let action_code = ActiveMap.get(`${to_role}${to_dir}${ep_type}`);\n\n            if (action_code == Active.ENTER_EXIT) {\n                if (has_cue) {\n                    // exit\n                    items.push({key:cue.key, new:undefined, old:cue});\n                    this._map.delete(cue.key);\n                } else {\n                    // enter\n                    items.push({key:cue.key, new:cue, old:undefined});\n                    // exit\n                    items.push({key:cue.key, new:undefined, old:cue});\n                    // no need to both add and remove from activeCues\n                }\n            } else if (action_code == Active.ENTER) {\n                if (!has_cue) {\n                    // enter\n                    items.push({key:cue.key, new:cue, old:undefined});\n                    this._map.set(cue.key, cue);\n                }\n            } else if (action_code == Active.EXIT) {\n                if (has_cue) {\n                    // exit\n                    items.push({key:cue.key, new:undefined, old:cue});\n                    this._map.delete(cue.key);\n                }\n            }\n        }, this);\n\n        // Event items already sorted\n\n        // event notification\n        this._notifyEvents(items);\n    };\n}\n\nexport default PointModeSequencer;\n\n","/*\n    Copyright 2020\n    Author : Ingar Arntzen\n\n    This file is part of the Timingsrc module.\n\n    Timingsrc is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Timingsrc is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {array_concat, map_difference} from '../util/utils.js';\nimport Interval from '../util/interval.js';\nimport * as motionutils from '../util/motionutils.js';\nimport Schedule from './schedule.js';\nimport BaseSequencer from './basesequencer.js';\n\nconst PosDelta = motionutils.MotionDelta.PosDelta;\nconst MoveDelta = motionutils.MotionDelta.MoveDelta;\nconst Active = BaseSequencer.Active;\nconst ActiveMap = BaseSequencer.ActiveMap;\n\nconst EVENTMAP_THRESHOLD = 5000;\nconst ACTIVECUES_THRESHOLD = 5000;\n\n/*\n    calculate general movement direction for double sequencer\n    define movement direction as the aggregate movement direction\n    for both timing objects\n*/\nfunction movement_direction (now_vector_A, now_vector_B) {\n    let direction_A = motionutils.calculateDirection(now_vector_A);\n    let direction_B = motionutils.calculateDirection(now_vector_B);\n    let direction = direction_A + direction_B;\n    return (direction > 0) ? 1 : (direction < 0) ? -1 : 0;\n}\n\n\nclass IntervalModeSequencer extends BaseSequencer {\n\n    constructor (dataset, toA, toB, options) {\n\n        super(dataset, options);\n\n        // Timing objects\n        this._toA = toA;\n        this._toA_ready = false;\n        this._toB = toB;\n        this._toB_ready = false;\n        let to_cb = this._onTimingCallback.bind(this);\n        this._subA = this._toA.on(\"timingsrc\", to_cb);\n        this._subB = this._toB.on(\"timingsrc\", to_cb);\n\n        // Schedules\n        let sched_cb = this._onScheduleCallback.bind(this);\n        this._schedA = new Schedule(this._ds, toA);\n        this._schedA_cb = this._schedA.add_callback(sched_cb);\n        this._schedB = new Schedule(this._ds, toB);\n        this._schedB_cb = this._schedB.add_callback(sched_cb);\n    }\n\n\n    _isReady() {\n        return (this._toA_ready && this._toB_ready);\n    }\n\n\n    /*\n        Implement movement direction from two timing objects\n    */\n\n    _movementDirection() {\n        const now = this._toA.clock.now();\n        const now_vector_A = motionutils.calculateVector(this._toA.vector, now);\n        const now_vector_B = motionutils.calculateVector(this._toB.vector, now);\n        return movement_direction(now_vector_A, now_vector_B);\n    }\n\n    /***************************************************************\n     DATASET CALLBACK\n    ***************************************************************/\n\n    /*\n        Handling Dataset Update Callbacks\n    */\n    _onDatasetCallback(eventMap, relevanceInterval) {\n        if (!this._isReady()) {\n            return;\n        }\n\n        if (relevanceInterval == undefined) {\n            return;\n        }\n\n        // assuming both timing objects have the same clock\n        const now = this._toA.clock.now();\n        const now_vector_A = motionutils.calculateVector(this._toA.vector, now);\n        const now_vector_B = motionutils.calculateVector(this._toB.vector, now);\n\n        // active interval\n        let [pos_A, pos_B] = [now_vector_A.position, now_vector_B.position];\n        let [low, high] = (pos_A <= pos_B) ? [pos_A, pos_B] : [pos_B, pos_A];\n        const activeInterval = new Interval(low, high, true, true);\n\n        if (!activeInterval.match(relevanceInterval, Interval.Match.OUTSIDE)) {\n            // relevanceInterval is NOT outside activeInterval\n            // some events relevant for activeIntervale\n\n            // choose approach to get events\n            let get_items = this._items_from_dataset_events.bind(this);\n            if (EVENTMAP_THRESHOLD < eventMap.size) {\n                if (this._map.size < ACTIVECUES_THRESHOLD) {\n                    get_items = this._items_from_dataset_lookup.bind(this);\n                }\n            }\n\n            // get items\n            const [exit, change, enter] = get_items(eventMap, activeInterval);\n\n            // update activeCues\n            exit.forEach(item => {\n                this._map.delete(item.key);\n            });\n            enter.forEach(item => {\n                this._map.set(item.key, item.new);\n            });\n\n            // notifications\n            const items = array_concat([exit, change, enter], {copy:true, order:true});\n\n            // sort event items according to general movement direction\n            let direction = movement_direction(now_vector_A, now_vector_B);\n            this.sortItems(items, direction);\n\n            // event notification\n            this._notifyEvents(items, direction);\n        }\n\n\n        /*\n            clear schedules\n\n            This is only necessary if a cue interval is changed,\n            and the change is relevant within the posInterval of\n            one of the schedules. RelevanceInterval to figure this out.\n        */\n\n        if (this._schedA.posInterval) {\n            if (!this._schedA.posInterval.match(relevanceInterval, Interval.Match.OUTSIDE)) {\n                // relevanceInterval is NOT outside schedule posInterval\n                // refresh schedule\n                this._schedA.setVector(now_vector_A);\n            }\n        }\n\n        if (this._schedB.posInterval) {\n            if (!this._schedB.posInterval.match(relevanceInterval, Interval.Match.OUTSIDE)) {\n                // relevanceInterval is NOT outside schedule posInterval\n                // refresh schedule\n                this._schedB.setVector(now_vector_B);\n            }\n        }\n    }\n\n\n    /***************************************************************\n     TIMING OBJECT CALLBACK\n    ***************************************************************/\n\n    /*\n        Handling Change Events from Timing Objects\n    */\n    _onTimingCallback (eArg, eInfo) {\n\n        /*\n            make sure both timingobjects are ready\n        */\n        let init = false;\n        if (!this._isReady()) {\n            if (eInfo.src == this._toA) {\n                this._toA_ready = true;\n            } else {\n                this._toB_ready = true;\n            }\n            if (this._isReady()) {\n                init = true;\n            } else {\n                return;\n            }\n        }\n\n        /*\n            figure out which timing object was firing\n        */\n        const to = eInfo.src;\n        const other_to = (to == this._toA) ? this._toB : this._toA;\n\n        /*\n            If update is the initial vector from the timing object,\n            we set current time as the official time for the update.\n            Else, the new vector is \"live\" and we use the timestamp\n            when it was created as the official time for the update.\n            This is represented by the new_vector.\n        */\n        let new_vector;\n        if (eArg.live) {\n            new_vector = to.vector;\n        } else {\n            new_vector = motionutils.calculateVector(to.vector, to.clock.now());\n        }\n\n        /*\n            The nature of the vector change\n        */\n        const delta = new motionutils.MotionDelta(to.old_vector, new_vector);\n\n        /*\n            Sample the state of the other timing object at same time.\n        */\n        let ts = new_vector.timestamp;\n        let other_new_vector = motionutils.calculateVector(other_to.vector, ts);\n\n        /*\n            Reevaluate active state.\n            This is required after any discontinuity of the position (jump),\n            or if the motion stopped without jumping (pause or halt at range\n            restriction)\n        */\n        const items = [];\n        if (delta.posDelta == PosDelta.CHANGE || delta.MoveDelta == MoveDelta.STOP) {\n\n            // make position interval\n            let low = Math.min(new_vector.position, other_new_vector.position);\n            let high = Math.max(new_vector.position, other_new_vector.position);\n            let itv = new Interval(low, high, true, true);\n\n            // new active cues\n            let activeCues = new Map(this._ds.lookup(itv).map(cue => {\n                return [cue.key, cue];\n            }));\n            // exit cues - in old activeCues but not in new activeCues\n            let exitCues = map_difference(this._map, activeCues);\n            // enter cues - not in old activeCues but in new activeCues\n            let enterCues = map_difference(activeCues, this._map);\n            // update active cues\n            this._map = activeCues;\n            // make event items\n            for (let cue of exitCues.values()) {\n                items.push({key:cue.key, new:undefined, old:cue});\n            }\n            for (let cue of enterCues.values()) {\n                items.push({key:cue.key, new:cue, old:undefined});\n            }\n\n            // sort event items according to general movement direction\n            let direction = movement_direction(new_vector, other_new_vector);\n            this.sortItems(items, direction);\n\n            // event notification\n            this._notifyEvents(items);\n        }\n\n        /*\n            Handle Timing Object Moving\n            - on init both shedules must be updated\n        */\n        if (to == this._toA) {\n            this._schedA.setVector(new_vector);\n        } else if (to == this._toB) {\n            this._schedB.setVector(new_vector);\n        }\n        if (init) {\n            if (other_to == this._toA) {\n                this._schedA.setVector(other_new_vector);\n            } else if (other_to == this._toB) {\n                this._schedB.setVector(other_new_vector);\n            }\n        }\n    };\n\n\n    /***************************************************************\n     SCHEDULE CALLBACK\n    ***************************************************************/\n\n    /*\n        Handling due Events from Schedules\n    */\n    _onScheduleCallback = function(now, endpointItems, schedule) {\n        if (!this._isReady()) {\n            return;\n        }\n\n        /*\n            figure out which timing object was firing\n        */\n        const to = schedule.to;\n        const other_to = (to == this._toA) ? this._toB : this._toA;\n\n        const items = [];\n        endpointItems.forEach(function (item) {\n\n            /*\n                figure out if to (event source) is lower than the other to\n                at time of event\n            */\n            // endpoint\n            let [pos, right, closed, singular] = item.endpoint;\n            // position of other to at time of event\n            let ts = item.tsEndpoint[0];\n            let other_vector = motionutils.calculateVector(other_to.vector, ts);\n            let pos_other = other_vector.position;\n\n            /*\n                Action Code - see sequenceutils\n            */\n            // to role\n            let to_role = (pos < pos_other) ? \"L\" : (pos == pos_other) ? \"S\" : \"R\";\n            // movement direction\n            let to_dir = (item.direction > 0) ? \"R\" : \"L\";\n            // endpoint type\n            let ep_type = (singular) ? \"S\": (right) ? \"R\" : \"L\";\n            // action code, enter, exit, stay, enter-exit\n            let action_code = ActiveMap.get(`${to_role}${to_dir}${ep_type}`);\n\n            /*\n                state of cue\n            */\n            let cue = item.cue;\n            let has_cue = this._map.has(cue.key);\n\n            // filter action code\n            if (action_code == Active.ENTER_EXIT) {\n                /*\n                    both timing objects evaluated to same position\n                    either\n                    1) to is moving and other_to is paused at this point,\n                       implying that the cue STAYS active\n                    or,\n                    2) both are moving. if both are moving in the same\n                    direction - EXIT\n                    opposite direction - ENTER\n                */\n                let other_moving = motionutils.isMoving(other_vector);\n                if (!other_moving) {\n                    // other not moving\n                    action_code = Active.ENTER;\n                } else {\n                    // both moving\n                    let direction = motionutils.calculateDirection(other_vector);                        // movement direction\n                    action_code = (direction != item.direction) ? Active.ENTER : Active.EXIT;\n                }\n            }\n            if (action_code == Active.STAY) {\n                action_code = Active.ENTER;\n            }\n            if (action_code == Active.ENTER && has_cue) {\n                return;\n            }\n            if (action_code == Active.EXIT && !has_cue) {\n                return;\n            }\n\n            // enter or exit\n            if (action_code == Active.ENTER) {\n                // enter\n                items.push({key:cue.key, new:cue, old:undefined});\n                this._map.set(cue.key, cue);\n            } else if (action_code == Active.EXIT) {\n                // exit\n                items.push({key:cue.key, new:undefined, old:cue});\n                this._map.delete(cue.key);\n            }\n        }, this);\n\n        // Event items already sorted\n\n        // event notification\n        this._notifyEvents(items);\n    }\n}\n\nexport default IntervalModeSequencer;\n\n","/*\n\tCopyright 2020\n\tAuthor : Ingar Mæhlum Arntzen\n\n\tThis file is part of the Timingsrc module.\n\n\tTimingsrc is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tTimingsrc is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport TimingSampler from \"../timingobject/timingsampler.js\";\n\n/*\n    TODO\n\n    - treat progress change as a speculative\n        change, (with a timeout)\n        implementation - ideally as speculative converter\n        easy solution - just lock\n*/\n\nclass TimingProgress {\n\n    static position2percent(position, range) {\n        let [low, high] = range;\n\n        let offset = position - low;\n        let length = high - low;\n        return 100.0*offset/length;\n    };\n\n    static percent2position(percent, range) {\n        let [low, high] = range;\n        // make sure percent is [0,100]\n        percent = Math.max(0, percent);\n        percent = Math.min(100, percent);\n        let length = high - low;\n        let offset = length*percent/100.0;\n        return low + offset;\n    };\n\n    constructor (timingObject, progress_elem, options={}) {\n        this._to = timingObject;\n        this._sampler = options.sampler;\n        this._progress_elem = progress_elem;\n        this._lock = false;\n        this._options = options;\n        this._range = options.range || this._to.range;\n        let [low, high] = this._range;\n        if (low == -Infinity || high == Infinity) {\n            throw new Error(\"illegal range\", this._range);\n        }\n\n        // subscribe to input event from progress elem\n        this._progress_elem.addEventListener(\"input\", function() {\n            // set lock\n            // no updates on progress elem from timing object until lock is released\n            this._lock_value = true;\n        }.bind(this));\n\n        // subscribe to change event from progress elem\n        this._progress_elem.addEventListener(\"change\", function () { \n            // clear lock\n            this._lock_value = false;\n            // update the timing object\n            let percent = parseInt(this._progress_elem.value);               \n            let position = TimingProgress.percent2position(percent, this._range);\n            this._to.update({position: position});\n        }.bind(this));\n        \n        // sampler\n        if (this._sampler) {\n            this._sampler.on(\"change\", this.refresh.bind(this));\n        }\n    }\n\n    refresh() {\n        let position = this._to.pos;\n        // update progress elem if unlocked\n        if (!this._lock_value) {\n            let percent = TimingProgress.position2percent(position, this._range);\n            if (this._options.thumb) {\n                // check if percent is legal\n                if (percent < 0.0 || 100.0 < percent) {\n                    // hide\n                    this._options.thumb.hide();\n                    return;\n                }\n            } else {\n                percent = (percent < 0.0) ? 0.0 : percent;\n                percent = (100.0 < percent) ? 100.0: percent;\n            }\n            this._progress_elem.value = `${percent}`;\n            if (this._options.thumb) {\n                this._options.thumb.show();            \n            }\n        }\n    }\n}\n\nexport default TimingProgress;","\n/*\n    Copyright 2020\n    Author : Ingar Arntzen\n\n    This file is part of the Timingsrc module.\n\n    Timingsrc is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Timingsrc is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n// utils\nexport * as utils from './util/utils.js';\nexport * as motionutils from './util/motionutils.js';\nexport {default as BinarySearch} from './util/binarysearch.js';\nexport {default as endpoint} from './util/endpoint.js';\nexport {default as eventify} from './util/eventify.js';\nexport {default as Interval} from './util/interval.js';\nexport {default as CueCollection} from './dataset/cuecollection.js';\nexport {default as Timeout} from './util/timeout.js';\n\n// timing object\nimport {default as TimingObject} from './timingobject/timingobject.js';\nexport {TimingObject};\nexport {default as SkewConverter} from './timingobject/skewconverter.js';\nexport {default as DelayConverter} from './timingobject/delayconverter.js';\nexport {default as ScaleConverter} from './timingobject/scaleconverter.js';\nexport {default as LoopConverter} from './timingobject/loopconverter.js';\nexport {default as RangeConverter} from './timingobject/rangeconverter.js';\nexport {default as TimeshiftConverter} from './timingobject/timeshiftconverter.js';\nexport {default as TimingSampler} from './timingobject/timingsampler.js';\nexport {default as PositionCallback} from './timingobject/positioncallback.js';\n\n// timed data\nimport {default as Dataset} from './dataset/dataset.js';\nexport {Dataset};\nexport {default as Subset} from './dataset/subset.js';\nimport {default as PointModeSequencer} from './sequencing/pointsequencer.js';\nimport {default as IntervalModeSequencer} from './sequencing/intervalsequencer.js';\n\n// create single sequencer factory function\nexport function Sequencer() {\n    // find datasets in arguments\n    let ds_list = [...arguments].filter((e) => (e instanceof Dataset));\n    let ds = (ds_list.length > 0) ? ds_list[0] : new Dataset();\n    // find timing objects in arguments\n    let to_list = [...arguments].filter((e) => (e instanceof TimingObject));\n    // find options (plain objects) in arguments\n    let obj_list = [...arguments].filter((e) => (Object.getPrototypeOf(e) === Object.prototype));\n    let options = (obj_list.length > 0) ? obj_list[0] : {};\n    if (to_list.length == 0) {\n        throw new Error(\"no timingobject in arguments\");\n    } else if (to_list.length == 1) {\n        return new PointModeSequencer(ds, to_list[0], options);\n    } else {\n        return new IntervalModeSequencer(ds, to_list[0], to_list[1], options);\n    }\n};\n\n// Add clone functions for backwards compatibility\nPointModeSequencer.prototype.clone = function () {\n    let args = [this.dataset];\n    args.push.apply(args, [...arguments]);\n    return Sequencer(...args);\n};\n\n// Add clone functions for backwards compatibility\nIntervalModeSequencer.prototype.clone = function () {\n    let args = [this.dataset];\n    args.push.apply(args, [...arguments]);\n    return Sequencer(...args);\n};\n\n// ui\nexport {default as DatasetViewer} from './ui/datasetviewer.js';\nexport {default as TimingProgress} from './ui/timingprogress.js';\n\nexport const version = \"v3.0\";\n","/*\n    Copyright 2020\n    Author : Ingar Arntzen\n\n    This file is part of the Timingsrc module.\n\n    Timingsrc is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Timingsrc is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {random_string} from '../util/utils.js';\n\nclass DatasetViewer {\n\n    constructor(ds, elem) {\n        this.ds = ds;\n        this.elem = elem;\n        this.nonce = random_string(4);\n        this.ds.on(\"change\", this.onchange.bind(this));\n        this.ds.on(\"remove\", this.onremove.bind(this));\n    }\n\n    cue2string(cue) {\n        let itv = (cue.interval) ? cue.interval.toString() : \"undefined\";\n        let data = JSON.stringify(cue.data); \n        return `${cue.key}, ${itv}, ${data}`;\n    }\n\n    onchange(eItem) {\n        let _id = `${this.nonce}-${eItem.key}`;\n        let node = this.elem.querySelector(`#${_id}`);\n        if (node) {\n            // update existing node\n            node.innerHTML = this.cue2string(eItem.new);\n        } else {\n            // create new node\n            let node = document.createElement(\"div\");\n            node.innerHTML = this.cue2string(eItem.new);\n            node.setAttribute(\"id\", _id);\n            this.elem.appendChild(node);\n        }\n    }\n\n    onremove(eItem) {\n        // remove node\n        let _id = `${this.nonce}-${eItem.key}`;\n        let node = this.elem.querySelector(`#${_id}`);\n        if (node) {\n            node.parentNode.removeChild(node);\n        }\n    }\n}\n\nexport default DatasetViewer;","/*\n\tCopyright 2015 Norut Northern Research Institute\n\tAuthor : Ingar Mæhlum Arntzen\n\n\tThis file is part of the Timingsrc module.\n\n\tTimingsrc is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU Lesser General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tTimingsrc is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU Lesser General Public License for more details.\n\n\tYou should have received a copy of the GNU Lesser General Public License\n\talong with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n/*\n\tDELAY CONVERTER\n\n\tDelay Converter introduces a positive time delay on a source timing object.\n\n\tGenerally - if the source timing object has some value at time t,\n\tthen the delayConverter will provide the same value at time t + delay.\n\n\tSince the delay Converter is effectively replaying past events after the fact,\n\tit is not LIVE and not open to interactivity (i.e. update)\n\n*/\n\nimport TimingObject from './timingobject.js';\nimport Timeout from '../util/timeout.js';\n\n\nclass DelayConverter extends TimingObject {\n\tconstructor (timingObject, delay) {\n\t\tif (delay < 0) {throw new Error (\"negative delay not supported\");}\n\t\tif (delay === 0) {throw new Error (\"zero delay makes delayconverter pointless\");}\n\t\tsuper(timingObject);\n\t\t// fixed delay\n\t\tthis._delay = delay;\n\t\t// buffer\n\t\tthis._buffer = [];\n\t\t// timeoutid\n\t\tthis._timeout = new Timeout(this, this.__handleDelayed.bind(this));\n        this.eventifyDefine(\"delaychange\", {init:true});\n\t};\n\n    // extend\n    eventifyInitEventArgs(name) {\n        if (name == \"delaychange\") {\n            return [this._delay];\n        } else {\n            return super.eventifyInitEventArgs(name)\n        }\n    }\n\n\t// overrides\n\tonUpdateStart(arg) {\n\t\t/*\n\t\t\tVector's timestamp always time-shifted (back-dated) by delay\n\n\t\t\tNormal operation is to delay every incoming vector update.\n\t\t\tThis implies returning null to abort further processing at this time,\n\t\t\tand instead trigger a later continuation.\n\n\t\t\tHowever, delay is calculated based on the timestamp of the vector (age), not when the vector is\n\t\t\tprocessed in this method. So, for small small delays the age of the vector could already be\n\t\t\tgreater than delay, indicating that the vector is immediately valid and do not require delayed processing.\n\n\t\t\tThis is particularly true for the first vector, which may be old.\n\n\t\t\tSo we generally check the age to figure out whether to apply the vector immediately or to delay it.\n\t\t*/\n\n\t\tthis._buffer.push(arg);\n\t\t// if timeout for next already defined, nothing to do\n\t\tif (!this._timeout.isSet()) {\n\t\t\tthis.__handleDelayed();\n\t\t}\n\t\treturn;\n\t};\n\n\t__handleDelayed() {\n\t\t// run through buffer and apply vectors that are due\n\t\tlet now = this.clock.now();\n\t\tlet arg, due;\n\t\twhile (this._buffer.length > 0) {\n\t\t\tdue = this._buffer[0].timestamp + this._delay;\n\t\t\tif (now < due) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\targ = this._buffer.shift();\n\t\t\t\t// apply\n\t\t\t\targ.timestamp = due;\n\t\t\t\tthis.__process(arg);\n\t\t\t}\n\t\t}\n\t\t// set new timeout\n\t\tif (this._buffer.length > 0) {\n\t\t\tdue = this._buffer[0].timestamp + this._delay;\n\t\t\tthis._timeout.setTimeout(due);\n\t\t}\n\t};\n\n\tupdate(arg) {\n\t\t// Updates are prohibited on delayed timingobjects\n\t\tthrow new Error (\"update is not legal on delayed (non-live) timingobject\");\n\t};\n\n    get delay() {return this._delay;};\n\n\tset delay(delay) {\n        if (delay != this._delay) {\n            // set delay and emulate new event from timingsrc\n            this._delay = delay;\n            this._timeout.clear();\n            this.__handleDelayed();\n            this.eventifyTrigger(\"delaychange\", delay);\n        }\n    }\n}\n\nexport default DelayConverter;\n\n","/*\n\tCopyright 2015 Norut Northern Research Institute\n\tAuthor : Ingar Mæhlum Arntzen\n\n    This file is part of the Timingsrc module.\n\n    Timingsrc is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Timingsrc is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/*\n\tSCALE CONVERTER\n\n\tScaling by a factor 2 means that values of the timing object (position, velocity and acceleration) are multiplied by two.\n\tFor example, if the timing object represents a media offset in seconds, scaling it to milliseconds implies a scaling factor of 1000.\n\n*/\n\nimport TimingObject from './timingobject.js';\n\n\nclass ScaleConverter extends TimingObject {\n    constructor (timingsrc, factor) {\n\t\tsuper(timingsrc);\n\t\tthis._factor = factor;\n        this.eventifyDefine(\"scalechange\", {init:true});\n\t};\n\n    // extend\n    eventifyInitEventArgs(name) {\n        if (name == \"scalechange\") {\n            return [this._factor];\n        } else {\n            return super.eventifyInitEventArgs(name)\n        }\n    }\n\n\t// overrides\n    onUpdateStart(arg) {\n        if (arg.range != undefined) {\n            arg.range = [arg.range[0]*this._factor, arg.range[1]*this._factor];\n        }\n        if (arg.position != undefined) {\n            arg.position *= this._factor;\n        }\n        if (arg.velocity != undefined) {\n            arg.velocity *= this._factor;\n        }\n        if (arg.acceleration != undefined) {\n            arg.acceleration *= this._factor;\n        }\n        return arg;\n    }\n\n\tupdate(arg) {\n\t\tif (arg.position != undefined) {\n            arg.position /= this._factor;\n        }\n\t\tif (arg.velocity != undefined) {\n            arg.velocity /= this._factor;\n        }\n\t\tif (arg.acceleration != undefined) {\n            arg.acceleration /= this._factor;\n        }\n\t\treturn super.update(arg);\n\t};\n\n    get scale() {return this._factor;};\n\n    set scale(factor) {\n        if (factor != this._factor) {\n            // set scale and emulate new event from timingsrc\n            this._factor = factor;\n            this.__handleEvent({\n                ...this.__get_timingsrc().vector,\n                range: this.__get_timingsrc().range\n            });\n            this.eventifyTrigger(\"scalechange\", factor);\n        }\n    }\n}\nexport default ScaleConverter;\n\n","/*\n\tCopyright 2015 Norut Northern Research Institute\n\tAuthor : Ingar Mæhlum Arntzen\n\n    This file is part of the Timingsrc module.\n\n    Timingsrc is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Timingsrc is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n/*\n\tSKEW CONVERTER\n\n\tSkewing the timeline by 2 means that the timeline position 0 of the timingsrc becomes position 2 of Converter.\n\n*/\n\n\nimport TimingObject from './timingobject.js';\n\n\nclass SkewConverter extends TimingObject {\n\n\tconstructor (timingsrc, skew, options) {\n\t\tsuper(timingsrc, options);\n\t\tthis._skew = skew;\n        this.eventifyDefine(\"skewchange\", {init:true});\n\t}\n\n    // extend\n    eventifyInitEventArgs(name) {\n        if (name == \"skewchange\") {\n            return [this._skew];\n        } else {\n            return super.eventifyInitEventArgs(name)\n        }\n    }\n\n\t// overrides\n\tonUpdateStart(arg) {\n        if (arg.range != undefined) {\n            arg.range[0] += this._skew;\n            arg.range[1] += this._skew;\n        }\n        if (arg.position != undefined) {\n\t\t\targ.position += this._skew;\n        }\n        return arg;\n\t};\n\n\t// overrides\n\tupdate(arg) {\n        if (arg.position != undefined) {\n\t\t\targ.position -= this._skew;\n        }\n        if (arg.range != undefined) {\n            let [low, high] = arg.range;\n            arg.range = [low - this._skew, high - this._skew];\n        }\n\t\treturn super.update(arg);\n\t};\n\n\tget skew() {return this._skew;};\n\n\tset skew(skew) {\n        if (skew != this._skew) {\n            // set skew and emulate new event from timingsrc\n\t\t\tthis._skew = skew;\n\t\t\tthis.__handleEvent({\n                ...this.__get_timingsrc().vector,\n                range: this.__get_timingsrc().range\n            });\n            this.eventifyTrigger(\"skewchange\", skew);\n        }\n\t}\n};\n\nexport default SkewConverter;\n","/*\n    Copyright 2020\n    Author : Ingar Arntzen\n\n    This file is part of the Timingsrc module.\n\n    Timingsrc is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Timingsrc is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport CueCollection from './cuecollection.js';\nimport {array_concat, map_difference} from '../util/utils.js';\nimport Interval from '../util/interval.js';\n\n/*\n    Subset provides read-only access to subset of a source Dataset\n\n    - <options>\n        - <interva>: if defined only include cues that match the interval\n        - <key_filter> : filter by cue key\n            function keep(key) returns boolena\n        - <data_filter> : filter by cue data\n            function keep(data) returns boolean\n        - <data_convert> : change cue data\n            function convert(data) returns data\n            NOTE: filtering occurs BEFORE convert\n            and only impacts the presentation of cues\n            WARNING: it is possible to change the value\n            in such a way that filtering appears incorrect\n\n    This subset implementation is STATELESS\n    It does not manage its own state, only implements a\n    stateless frontend over its source dataset.\n\n*/\n\nclass Subset extends CueCollection {\n\n    constructor(dataset, options={}) {\n        super(options);\n        this._key_filter = options.key_filter;\n        this._data_filter = options.data_filter;\n        this._interval = options.interval;\n        this._data_convert = options.data_convert;\n        this._size = 0;\n\n        // Callbacks\n        this._callbacks = [];\n\n        // Source Dataset\n        this._src_ds = dataset;\n        let cb = this._onDatasetCallback.bind(this)\n        this._src_ds_cb = this._src_ds.add_callback(cb);\n    }\n\n\n    /***************************************************************\n        ACCESSORS\n    ***************************************************************/\n\n    get datasource () {\n        return this._src_ds;\n    }\n\n    get dataset () {\n        return this._src_ds;\n    }\n\n\n    get interval () {\n        return this._interval;\n    }\n\n    set interval (itv) {\n        this._setInterval(itv);\n    }\n\n\n    /***************************************************************\n        EVENT CALLBACKS - FOR SEQUENCERS\n    ***************************************************************/\n\n    add_callback (handler) {\n        let handle = {\n            handler: handler\n        }\n        this._callbacks.push(handle);\n        return handle;\n    };\n\n\n    del_callback (handle) {\n        let index = this._callbacks.indexof(handle);\n        if (index > -1) {\n            this._callbacks.splice(index, 1);\n        }\n    };\n\n\n    _notify_callbacks (batchMap, relevanceInterval) {\n        this._callbacks.forEach(function(handle) {\n            handle.handler(batchMap, relevanceInterval);\n        });\n    };\n\n\n   /***************************************************************\n        FILTER & CONVER\n    ***************************************************************/\n\n    /* \n        Keep cue \n    */\n\n    _cue_keep(cue) {\n        if (cue == undefined) {\n            return false;\n        }\n        // check if cue matches interval\n        if (this._interval) {\n            if (!this._interval.match(cue.interval)) {\n                return false;\n            }\n        }\n        // check key filter\n        if (this._key_filter) {\n            if (!this._key_filter(cue.key)) {\n                return false;\n            }\n        }\n        // check data filter\n        if (this._data_filter) {\n            if (!this._data_filter(cue.data)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     *  Convert cue\n     */\n    _cue_convert(cue) {\n        if (cue != undefined && this._data_convert) {\n            // copy\n            return {\n                key: cue.key,\n                interval: cue.interval,\n                data: this._data_convert(cue.data)\n            }\n        }\n        return cue;\n    }\n\n    /**\n     * Filter (and modify) event items based on key_filter and data_filter\n     */\n\n    _items_filter_convert(items) {\n        let _items = [];\n        for (let item of items) {\n            if (item.new == undefined && item.old == undefined) {\n                continue;\n            }\n            /* \n            use cue filter function to check relevance of both old and new\n            consider change of unrelevant cue into relevant cue.\n            old cue would be non-relevant, new cue would be relevant\n            Since old cue was not part of the subset before, it needs\n            to be removed from the item - effectively turning the change\n            operation into an add operation. \n            */\n            let _old = (this._cue_keep(item.old)) ? item.old : undefined;\n            let _new = (this._cue_keep(item.new)) ? item.new : undefined;\n            if (_old == undefined && _new == undefined) {\n                continue;\n            }\n            // convert\n            _old = this._cue_convert(_old);\n            _new = this._cue_convert(_new);\n            // push\n            _items.push({key:item.key, new: _new, old: _old});\n        }\n        return _items;\n    }\n\n\n    /***************************************************************\n     LOOKUP\n    ***************************************************************/\n\n    _check_interval(interval) {\n        if (this._interval) {\n           // subset interval\n           if (interval) {\n               // lookup interval - find intersection\n               let intersects = Interval.intersect(interval, this._interval);\n               if (intersects.length == 0) {\n                   console.log(`warning - lookup interval ${interval.toString()} outside the subset interval ${this._interval.toString()}`);\n                   return [];\n                } else {\n                    interval = intersects[0];\n                }\n            } else {\n                // no lookup interval - use subset interval   \n                interval = this._interval;\n            }\n        }\n        return interval;\n    }\n\n    /** \n     * lookup cues\n    */\n\n    lookup(interval, mask) {\n        let _interval = this._check_interval(interval);\n        let cues;\n        if (_interval) {\n            cues = this.datasource.lookup(_interval, mask);\n        } else {\n            cues = [...this.datasource.values()];\n        }\n        // filter & convert cues\n        return cues.filter(this._cue_keep, this)\n            .map(this._cue_convert, this);\n    }\n\n    /* \n        lookup endpoints\n        used by sequencers\n    */\n\n    lookup_endpoints(interval) {\n        let _interval = this._check_interval(interval);\n        let items = this.datasource.lookup_endpoints(_interval);\n        // filter and convert\n        return items.filter((item) => {\n            return this._cue_keep(item.cue);\n        }, this).map((item) => {\n            return {endpoint: item.endpoint, cue: this._cue_convert(item.cue)};\n        }, this);\n    }\n\n    /***************************************************************\n     INITIAL STATE\n    ***************************************************************/\n\n    eventifyInitEventArgs(name) {\n        if (name == \"batch\" || name == \"change\") {\n            // find cues\n            let cues = this.lookup();\n            // make event items\n            let items = cues.map((cue) => {\n                return {key:cue.key, new:cue, old:undefined};\n            });\n            // sort\n            this.sortItems(items);\n            return (name == \"batch\") ? [items] : items;\n        }\n    }\n\n    /***************************************************************\n     DATASET CALLBACK\n    ***************************************************************/\n\n    _onDatasetCallback(eventMap, relevanceInterval) {\n        let items = [...eventMap.values()];\n        items = this._items_filter_convert(items);\n        // update size\n        for (let item of items) {\n            if (item.new != undefined && item.old == undefined) {\n                // add\n                this._size += 1;\n            } else if (item.new == undefined && item.old != undefined) {\n                // remove\n                this._size -= 1;\n            }           \n        }        \n        // forward as events\n        super._notifyEvents(items);\n        // forward as callbacks\n        let batchMap = new Map(items.map((item) => {\n            return [item.key, item];\n        }));\n        if (this._interval) {\n            relevanceInterval = Interval.intersect(this._inverval, relevanceInterval);\n        }\n        this._notify_callbacks(batchMap, relevanceInterval);\n    }\n\n\n    /***************************************************************\n        SET INTERVAL\n    ***************************************************************/\n\n    _setInterval (itv) {\n        if (!itv instanceof Interval) {\n            throw new Error(\"must be interval\", itv.toString());\n        }\n        if (!this._interval || !this._interval.equals(itv)) {\n            // current cues (before interval update)\n            let current_cues = this.lookup();\n            // update interval\n            this._interval = itv;\n            // cues (after interval update)\n            let new_cues = this.datasource.lookup(itv);\n            // filter & convert cues\n            new_cues = new_cues\n                .filter(this._cue_keep, this)\n                .map(this._cue_convert, this);\n            // switch to map representation\n            let currentCueMap = new Map([...current_cues].map((cue) => {\n                return [cue.key, cue];\n            }));\n            let newCueMap = new Map([...new_cues].map((cue) => {\n                return [cue.key, cue];\n            }));\n            // exit and enter cues\n            let exitCueMap = map_difference(currentCueMap, newCueMap);\n            let enterCueMap = map_difference(newCueMap, currentCueMap);\n            // make list of event items\n            let exitItems = [...exitCueMap.values()].map((cue) => {\n                return {key: cue.key, new:undefined, old: cue}\n            });\n            let enterItems = [...enterCueMap.values()].map((cue) => {\n                return {key: cue.key, new:cue, old: undefined}\n            });\n            // update size\n            this._size -= exitItems.length;\n            this._size += enterItems.length;            \n            // event notification\n            const items = array_concat([exitItems, enterItems], {copy:false, order:true});\n            this._notifyEvents(items);\n        }\n    }\n\n    /***************************************************************\n     MAP ACCESSORS\n    ***************************************************************/\n\n    get size () {\n        return this._size;\n    }\n\n    has(key) {\n        return (this.get(key) != undefined);\n    };\n\n    get(key) {\n        let cue = super.get(key);\n        if (cue != undefined && this._cue_keep(cue)) {\n            return this._cue_convert(cue);\n        }\n    };\n\n    keys() {\n        return this.values().map((cue => {\n            return cue.key;\n        }));\n    };\n\n    values() {\n        return [...super.values()]\n            .filter((cue) => {\n                return this._cue_keep(cue);\n            }, this)\n            .map((cue) => {\n                return this._cue_convert(cue);\n            }, this);\n    };\n\n    entries() {\n        return this.values().map((cue) => {\n            return [cue.key, cue];\n        });\n    };\n\n\n    /***************************************************************\n     MAP MODIFICATION METHODS\n    ***************************************************************/\n\n    update(cues, options) {\n        throw new Error(\"not implemented\");\n    }\n\n    set (key, value) {\n        throw new Error(\"not implemented\");\n    }\n\n    delete (key) {\n        throw new Error(\"not implemented\");\n    }\n\n    clear (key) {\n        throw new Error(\"not implemented\");\n    }\n\n}\n\n// module definition\nexport default Subset;","/*\n\tCopyright 2015 Norut Northern Research Institute\n\tAuthor : Ingar Mæhlum Arntzen\n\n    This file is part of the Timingsrc module.\n\n    Timingsrc is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Timingsrc is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with Timingsrc.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/*\n\tTIMESHIFT CONVERTER\n\n\tTimeshift Converter timeshifts a timing object by timeoffset.\n\tPositive timeoffset means that the converter will run ahead of the source timing object.\n\tNegative timeoffset means that the converter will run behind the source timing object.\n\n\tUpdates affect the converter immediately.\n    This means that update vector must be re-calculated\n\tto the value it would have at time-shifted time.\n    Timestamps are not time-shifted, since the motion is still live.\n\tFor instance, (0, 1, ts) becomes (0+(1*timeshift), 1, ts)\n\n\tHowever, this transformation may cause range violation\n\t\t- this happens only when timing object is moving.\n\t\t- implementation requires range converter logic\n\n\t- range is infinite\n*/\n\nimport TimingObject from './timingobject.js';\nimport {calculateVector} from '../util/motionutils.js';\n\n\nclass TimeshiftConverter extends TimingObject {\n\n    constructor (timingsrc, offset) {\n\t\tsuper(timingsrc);\n\t\tthis._offset = offset;\n        this.eventifyDefine(\"offsetchange\", {init:true});\n\t};\n\n    // extend\n    eventifyInitEventArgs(name) {\n        if (name == \"offsetchange\") {\n            return [this._offset];\n        } else {\n            return super.eventifyInitEventArgs(name)\n        }\n    }\n\n    // overrides\n    onUpdateStart(arg) {\n        if (arg.range != undefined) {\n            arg.range = [-Infinity, Infinity];\n        }\n        if (arg.position != undefined) {\n            // calculate timeshifted vector\n            let ts = arg.timestamp;\n            let new_vector = calculateVector(arg, ts + this._offset);\n            arg.position = new_vector.position;\n            arg.velocity = new_vector.velocity;\n            arg.acceleration = new_vector.acceleration;\n            arg.timestamp = ts;\n        }\n        return arg;\n    };\n\n    get offset() {return this._offset;};\n\n    set offset(offset) {\n        if (offset != this._offset) {\n            // set offset and emulate new event from timingsrc\n            this._offset = offset;\n            this.__handleEvent({\n                ...this.__get_timingsrc().vector,\n                range: this.__get_timingsrc().range\n            });\n            this.eventifyTrigger(\"offsetchange\", offset);\n        }\n    }\n\n}\n\nexport default TimeshiftConverter;\n"],"names":["random_string","length","text","possible","i","charAt","Math","floor","random","eqSet","as","bs","size","all","isIn","pred","a","has","set_difference","Set","filter","e","map_difference","b","Map","key","value","map_intersect","isIterable","obj","Symbol","iterator","array_concat","arrays","options","copy","order","total_len","reduce","acc","cur","sort","end","len","first","shift","start","arr","object_equals","propName","aProps","Object","getOwnPropertyNames","bProps","docready","Promise","resolve","document","readyState","onReady","removeEventListener","window","addEventListener","array_of_maps","Array","isArray","Error","map","o","every","m","val","entries","set","n","d","r","isNumber","N","parseFloat","isNaN","create","right","closed","singular","Infinity","get_mode","undefined","get_order","e1","e2","cmp","order1","order2","diff","toString","mode","equals","rightof","leftof","min","max","IntervalError","[object Object]","message","super","this","name","Relation","freeze","OUTSIDE_LEFT","OVERLAP_LEFT","COVERED","EQUALS","COVERS","OVERLAP_RIGHT","OUTSIDE_RIGHT","MATCH_OUTSIDE","MATCH_INSIDE","MATCH_OVERLAP","MATCH_COVERS","MATCH_ALL","Match","OUTSIDE","INSIDE","OVERLAP","ALL","compare","Interval","endpoint","endpointLow","endpointHigh","includes","_make_interval_cmp","low","lowInclude","high","highInclude","fromEndpoints","low_right","low_closed","low_singular","high_right","high_closed","high_singular","intersect","rel","union","intersectAll","intervals","cmpLow","result","prev","pop","next","push","unionAll","_low","_high","_lowInclude","_highInclude","_length","_singular","_finite","isFinite","_endpointLow","_endpointHigh","finite","p","other","mask","relation","Boolean","equalVectors","vector_a","vector_b","pos","position","vel","velocity","acceleration","ts","timestamp","calculateVector","vector","deltaSec","calculateDirection","freshVector","direction","isMoving","RangeState","INIT","OUTSIDE_LOW","OUTSIDE_HIGH","correctRangeState","range","v","checkRange","state","rangeIntersect","t0","deltaLeft","calculateMinPositiveRealSolution","deltaRight","hasRealSolution","x","pow","calculateRealSolutions","sqrt","d1","d2","res","calculatePositiveRealSolutions","calculateDelta","deltaBeforeSec","deltaAfterSec","posInterval_from_timeInterval","timeInterval","t1","t0_closed","t1_closed","vector0","p0","v0","a0","p1","t_extrem","covers_endpoint","p_extrem","timeEndpoint_from_posEndpoint","posEndpoint","close","endpointEvents","posInterval","endpointItems","deltas","tsEndpoint","eventItems","forEach","item","delta","MotionDelta","NOOP","CHANGE","NOOP_MOVING","START","STOP","old_vector","new_vector","is_moving","init","PosDelta","MoveDelta","_mc","mct","was_moving","end_vector","start_vector","pct","vel_changed","acc_changed","posDelta","moveDelta","str","BinarySearchError","BinarySearch","array","searchElement","currentIndex","currentElement","minIndex","maxIndex","index","binaryIndexOf","isFound","elements","indexes","indexOf","to_remove","to_insert","indexOfElements","splice","abs","concat","A","approach","arrayLength","batchLength","_update_splice","_update_sort","idx","interval","start_index","end_index","geIndexOf","gtIndexOf","leIndexOf","ltIndexOf","lookupIndexes","slice","removeList","rd_ptr","wr_ptr","rm_ptr","rd_elem","rm_elem","values","Event","publisher","subscriptions","callback","sub","Subscription","init_pending","self","then","eArgs","eventifyInitEventArgs","eArg","trigger","subs","eInfo","ctx","terminated","src","call","err","console","log","terminate","event","unsubscribe","eventifyInstance","object","__eventify_eventMap","__eventify_buffer","eventifyPrototype","_prototype","eventifyGetEvent","get","eventifyDefine","eventifyTrigger","eventifyTriggerAll","eventifyTriggerAlike","triggerItems","ev","buf","buf_len","eventifySubscriptions","on","subscribe","off","EventVariable","_value","prototype","EventBoolean","makePromise","eventObject","conditionFunc","reject","ObservableMap","eventify","datasource","iter","sortOrder","items","item_a","item_b","cue_a","new","old","cue_b","sortItems","has_update_subs","has_remove_subs","has_change_subs","keys","_notifyEvents","delete","clear","CueCollection","cmpHigh","cues","sortValues","Timeout","timingObject","tid","to","target_ts","arg","now","clock","delay","setTimeout","onTimeout","bind","clearTimeout","performance","offset","Date","getTime","local_clock","tsSec","MasterClock","_vector","adjust","nowVector","query","skew","rate","InternalProvider","_clock","_range","_callback","_process_update","rest","_old_vector","ExternalProvider","provider","required","prop","checkTimingProvider","_provider","_ready","_provider_clock","_onVectorChange","_onSkewChange","local_ts","current_skew","skew_delta","isReady","live","update","motionutils.checkRange","motionutils.calculateVector","TimingObject","timingsrc","isTimingProvider","__options","timeout","__old_vector","__vector","__range","__timeout","__handleTimeout","__tid","__timingsrc","__sub","__update_events","__ready","__set_timingsrc","ready","motionutils.MotionDelta","version","isSet","__process","onRangeViolation","__update","ok","tunnel","promise","_arg","onUpdateStart","range_change","vector_change","motionutils.equalVectors","__dispatchEvents","__renewTimeout","onUpdateDone","moving","motionutils.isMoving","setInterval","timeout_vector","__calculateTimeoutVector","now_vector","motionutils.calculateDelta","__handleEvent","__get_timingsrc","__clear_timingsrc","transform","_state","new_state","new_range","absolute","special","old_state","is_special_state_change","TimingSampler","_to","_tid","period","frequency","_period","_sub","_onChange","_onSample","float2point","stride","mod","divmod","point2float","q","removeCueFromArray","cue","findIndex","_cue","CueBucketIds","getCueBucketId","Delta","INSERT","REPLACE","DELETE","cue_delta","interval_delta","data_delta","eq","a_interval_defined","b_interval_defined","a_data_defined","data","b_data_defined","utils.object_equals","cue_equals","CueArgBuilder","dataset","_ds","_options","assign","autosubmit","_cues","_done","updateDone","_reset","_submit","cue_args","was_empty","cue_arg","arguments","_push","Dataset","_map","_builder","_cueBuckets","cueBucketId","CueBucket","_update_callbacks","handler","handle","indexof","batchMap","relevanceInterval","builder","addCue","removeCue","current_cue","has_interval","has_data","debug","utils.isIterable","hasOwnProperty","_update_cue","_call_buckets","relevance","event_items","_notify_callbacks","integrity","old_cue","new_cue","_item","oldCueBucket","newCueBucket","low_changed","high_changed","remove_needed","add_needed","chaining","safe","bid","cueBucket","replace_endpoint","old_bid","new_bid","del_endpoint","add_endpoint","method","args","utils.array_concat","points","bucketInfo","no_interval_cues","count_buckets","count_no_interval","count_map","bucket_map","map_map","missing","utils.map_difference","maxLength","_maxLength","_pointMap","_pointIndex","_created","_dirty","point","add","replaceCueInArray","broader_interval","lookup","_endpoint","cueSet","match","_mask","_lookup_cues","left_interval","j","removeInSlice","index_point_set","map_point_set","utils.eqSet","utils.set_difference","_cue_list","cueMap","pft","motionutils.posInterval_from_timeInterval","queueCmp","Schedule","run","queue","callbacks","lookahead","LOOKAHEAD","advance","endpoints","minimum_tsEndpoint","motionutils.endpointEvents","range_ts","motionutils.rangeIntersect","dueEvents","lookup_endpoints","load","isNoop","Active","ENTER","STAY","EXIT","ENTER_EXIT","ActiveMap","cue_cmp_forwards","cue_cmp_backwards","item_cmp_forwards","item_cmp_backwards","BaseSequencer","cb","_onDatasetCallback","_ds_cb","add_callback","_movementDirection","eventMap","enterEvents","changeEvents","exitEvents","is_active","should_be_active","_activeCues","enterCues","remainCues","_addCue","_removeCue","PointModeSequencer","_onTimingCallback","_sched","_onScheduleCallback","_sched_cb","motionutils.calculateDirection","activeInterval","get_items","_items_from_dataset_events","_items_from_dataset_lookup","exit","change","enter","setVector","itv","activeCues","exitCues","schedule","has_cue","to_dir","ep_type","action_code","movement_direction","now_vector_A","now_vector_B","IntervalModeSequencer","toA","toB","_toA","_toA_ready","_toB","_toB_ready","to_cb","_subA","_subB","sched_cb","_schedA","_schedA_cb","_schedB","_schedB_cb","_isReady","pos_A","pos_B","other_to","other_new_vector","other_vector","pos_other","to_role","TimingProgress","percent","progress_elem","_sampler","sampler","_progress_elem","_lock","_lock_value","parseInt","percent2position","refresh","position2percent","thumb","hide","show","Sequencer","ds_list","ds","to_list","obj_list","getPrototypeOf","clone","apply","elem","nonce","onchange","onremove","JSON","stringify","eItem","_id","node","querySelector","innerHTML","cue2string","createElement","setAttribute","appendChild","parentNode","removeChild","_delay","_buffer","_timeout","__handleDelayed","due","now_vector_src","_offset","_stride","_handleTimeout","_renewTimeout","before","after","rLow","rHigh","stride_points","_calculateTimeout","__state","onVectorChange","state_changed","factor","_factor","scale","_skew","_key_filter","key_filter","_data_filter","data_filter","_interval","_data_convert","data_convert","_size","_callbacks","_src_ds","_src_ds_cb","_setInterval","_items","_old","_cue_keep","_new","_cue_convert","intersects","_check_interval","_items_filter_convert","_inverval","current_cues","new_cues","currentCueMap","newCueMap","exitCueMap","enterCueMap","exitItems","enterItems"],"mappings":"uCAqBO,SAASA,EAAcC,GAG1B,IAFA,IAAIC,EAAO,GACPC,EAAW,uDACPC,EAAI,EAAGA,EAAIH,EAAQG,IACvBF,GAAQC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASF,SAEhE,OAAOC,EAKJ,SAASO,EAAMC,EAAIC,GACtB,OAAOD,EAAGE,OAASD,EAAGC,MAAQC,EAAIC,EAAKH,GAAKD,GAGzC,SAASG,EAAIE,EAAML,GACtB,IAAK,IAAIM,KAAKN,EAAI,IAAKK,EAAKC,GAAI,OAAO,EACvC,OAAO,EAGJ,SAASF,EAAKJ,GACjB,OAAO,SAAUM,GACb,OAAON,EAAGO,IAAID,IAIf,SAASE,EAAeR,EAAIC,GAC/B,OAAO,IAAIQ,IAAI,IAAIT,GAAIU,OAAQC,IAAOV,EAAGM,IAAII,KAW1C,MAAMC,EAAiB,SAAUN,EAAGO,GACvC,OAAc,GAAVP,EAAEJ,KACK,IAAIY,IACM,GAAVD,EAAEX,KACFI,EAEA,IAAIQ,IAAI,IAAIR,GAAGI,QAAO,UAAWK,EAAKC,IACzC,OAAQH,EAAEN,IAAIQ,QASbE,EAAgB,SAAUX,EAAGO,GAEtC,OADCP,EAAGO,GAAMP,EAAEJ,MAAQW,EAAEX,KAAQ,CAACI,EAAEO,GAAK,CAACA,EAAEP,GAC3B,GAAVA,EAAEJ,KAEK,IAAIY,IAER,IAAIA,IAAI,IAAIR,GAAGI,QAAO,UAAWK,EAAKC,IACzC,OAAOH,EAAEN,IAAIQ,QA6Dd,SAASG,EAAWC,GAEvB,OAAW,MAAPA,GAGmC,mBAAzBA,EAAIC,OAAOC,UActB,SAASC,EAAaC,EAAQC,EAAU,IAC3C,IAAIC,KAACA,GAAK,EAAKC,MAAEA,GAAM,GAASF,EAChC,GAAqB,GAAjBD,EAAOhC,OACP,MAAO,GAEX,GAAqB,GAAjBgC,EAAOhC,OACP,OAAOgC,EAAO,GAElB,IAAII,EAAYJ,EAAOK,OAAO,CAACC,EAAKC,IAAQD,EAAMC,EAAIvC,OAAQ,GAEzDmC,GAEDH,EAAOQ,KAAK,CAACzB,EAAGO,IAAMA,EAAEtB,OAASe,EAAEf,QAGvC,IAKIyC,EAAKC,EALLC,EAAQ,EAAS,GAAKX,EAAOY,QAC7BC,EAAQF,EAAM3C,OAElB2C,EAAM3C,OAASoC,EAGf,IAAK,IAAIU,KAAOd,EAAQ,CACpBU,EAAMI,EAAI9C,OACVyC,EAAMI,EAAQH,EACd,IAAK,IAAIvC,EAAE,EAAGA,EAAEuC,EAAKvC,IACjBwC,EAAME,EAAQ1C,GAAK2C,EAAI3C,GAE3B0C,EAAQJ,EAEZ,OAAOE,EAQJ,SAASI,EAAchC,EAAGO,GAE7B,IAGI0B,EAHAC,EAASC,OAAOC,oBAAoBpC,GACpCqC,EAASF,OAAOC,oBAAoB7B,GACpCoB,EAAMO,EAAOjD,OAGjB,GAAIiD,EAAOjD,QAAUoD,EAAOpD,OACxB,OAAO,EAEX,IAAK,IAAIG,EAAE,EAAGA,EAAEuC,EAAKvC,IAGjB,GAFA6C,EAAWC,EAAO9C,GAEdY,EAAEiC,KAAc1B,EAAE0B,GAClB,OAAO,EAIf,OAAO,EAKJ,MAAMK,EAAW,IAAIC,SAAQ,SAASC,GACzC,GAA4B,aAAxBC,SAASC,WACTF,QACG,CACH,IAAIG,EAAU,WACVH,IACAC,SAASG,oBAAoB,mBAAoBD,GAAS,GAC1DE,OAAOD,oBAAoB,OAAQD,GAAS,IAEhDF,SAASK,iBAAiB,mBAAoBH,GAAS,GACvDE,OAAOC,iBAAiB,OAAQH,GAAS,4IAnI1C,SAAmBI,EAAe7B,EAAQ,IAC7C,IAAIC,KAACA,GAAK,EAAKC,MAAEA,GAAM,GAASF,EAEhC,GAAI6B,aAAyBvC,IACzB,OAAOuC,EAEX,IAAKC,MAAMC,QAAQF,GACf,MAAM,IAAIG,MAAM,8BAA+BH,GAEnD,GAA4B,GAAxBA,EAAc9D,OACd,MAAM,IAAIiE,MAAM,uBAKpB,IAHcH,EAAcI,IAAKC,GACrBA,aAAa5C,KAEZ6C,MAAOhD,GAAW,GAALA,GACtB,MAAM,IAAI6C,MAAM,4CAA6CH,GAG5D3B,GAED2B,EAActB,KAAK,CAACzB,EAAGO,IAAMA,EAAEX,KAAOI,EAAEJ,MAG5C,IAAIgC,EAAQ,EAAS,IAAIpB,IAAQuC,EAAclB,QAE/C,IAAK,IAAIyB,KAAKP,EACV,IAAK,IAAKtC,EAAK8C,KAAQD,EAAEE,UACrB5B,EAAM6B,IAAIhD,EAAK8C,GAGvB,OAAO3B,UAIJ,SAAiB8B,EAAGC,GACvB,IAAIC,EAAIF,EAAIC,EAEZ,MAAO,EADED,EAAEE,GAAGD,EACHC,6DCtHf,MAAMC,EAAW,SAASH,GACzB,IAAII,EAAIC,WAAWL,GAChB,OAAQA,IAAII,IAAME,MAAMF,IAwB5B,SAASG,EAAOV,EAAKW,EAAOC,EAAQC,GAEnC,GAAIb,GAAOc,EAAAA,IACG,GAATH,GAA4B,GAAVC,GACrB,MAAM,IAAIjB,MAAM,sDAGlB,GAAIK,IAAQc,EAAAA,IACE,GAATH,GAA2B,GAAVC,GACpB,MAAM,IAAIjB,MAAM,sDAGlB,MAAO,CAACK,EAAKW,EAAOC,EAAQC,GAO7B,SAASE,EAASjE,GAGjB,IAAKkD,EAAKW,EAAOC,EAAQC,GAAY/D,EACrC,OAAakE,MAATL,EA5BiB,EA8BVA,EACNC,EA9BoB,EAHF,EAuClBA,EAtCmB,EAGF,EAmEvB,SAASK,EAAUC,EAAIC,GAEtB,QAAkBH,IAAdE,EAAGxF,OAAsB,CAC5B,IAAK4E,EAASY,GACb,MAAM,IAAIvB,MAAM,kBAAmBuB,GAEpCA,EAAKR,EAAOQ,OAAIF,OAAWA,GAAW,GAEvC,QAAkBA,IAAdG,EAAGzF,OAAsB,CAC5B,IAAK4E,EAASa,GACb,MAAM,IAAIxB,MAAM,kBAAmBwB,GAEpCA,EAAKT,EAAOS,OAAIH,OAAWA,GAAW,GAEvC,OAAIE,EAAG,IAAMC,EAAG,GAER,CAACD,EAAG,GAAIC,EAAG,IAGX,CAACJ,EAASG,GAAKH,EAASI,IAuCjC,SAASC,EAAIF,EAAIC,GAChB,IAAKE,EAAQC,GAAUL,EAAUC,EAAIC,GACjCI,EAAOF,EAASC,EACpB,OAAY,GAARC,EAAkB,EACdA,EAAO,EAAK,GAAK,QAyCX,CACdH,IAAAA,EACAI,SA1BD,SAAkB1E,GACjB,QAAiBkE,IAAblE,EAAEpB,OACL,OAAOoB,EAAE0E,WACH,CACN,IAAIC,EAAOV,EAASjE,GAChBkD,EAAMlD,EAAE,GAIZ,GAHIkD,GAAOc,EAAAA,GAAYd,IAAQc,EAAAA,IAC9Bd,EAAM,MA7Je,GA+JlByB,EACH,OAAUzB,EAAH,IACD,GAhKgB,GAgKZyB,EACV,MAAO,IAAIzB,EACL,GAjKa,GAiKTyB,EACV,MAAO,IAAIzB,KACL,GAlKiB,GAkKbyB,EACV,OAAUzB,EAAH,IACD,GAnKc,GAmKVyB,EACV,MAAO,IAAIzB,IASb0B,OA3DD,SAAgBR,EAAIC,GACnB,IAAKE,EAAQC,GAAUL,EAAUC,EAAIC,GACrC,OAAQE,GAAUC,GA0DlBK,QArED,SAAiBT,EAAIC,GACpB,IAAKE,EAAQC,GAAUL,EAAUC,EAAIC,GACrC,OAAQE,EAASC,GAoEjBM,OAhFD,SAAgBV,EAAIC,GACnB,IAAKE,EAAQC,GAAUL,EAAUC,EAAIC,GACrC,OAAQE,EAASC,GA+EjBZ,OAAAA,EACAmB,IA5CD,SAAaX,EAAIC,GACb,OAAQC,EAAIF,EAAIC,IAAO,EAAKD,EAAKC,GA4CpCW,IAxCD,SAAaZ,EAAIC,GACb,OAAQC,EAAIF,EAAIC,IAAO,EAAKA,EAAKD,IC/JrC,MAAMZ,EAAW,SAASH,GACzB,IAAII,EAAIC,WAAWL,GAChB,OAAQA,IAAII,IAAME,MAAMF,IAO5B,MAAMwB,UAAsBpC,MAC3BqC,YAAYC,GACXC,MAAMD,GACNE,KAAKC,MAUP,MAAMC,EAAWzD,OAAO0D,OAAO,CAC9BC,aAAc,GACdC,aAAc,GACdC,QAAS,GACTC,OAAQ,EACRC,OAAQ,EACRC,cAAe,EACfC,cAAe,IAMVC,EAAgBT,EAASE,aAAeF,EAASQ,cACjDE,EAAeV,EAASK,OAASL,EAASI,QAC1CO,EAAgBD,EACrBV,EAASG,aAAeH,EAASO,cAC5BK,EAAeD,EAAgBX,EAASM,OACxCO,EAAYD,EAAeH,EAE3BK,EAAQvE,OAAO0D,OAAO,CAC3Bc,QAASN,EACTO,OAAQN,EACRO,QAASN,EACTL,OAAQM,EACRM,IAAKL,IAoCN,SAASM,EAAQ/G,EAAGO,GACnB,IAAMP,aAAagH,EAAU,CAE5B,IAAInD,EAAS7D,GAGZ,MAAM,IAAIsF,EAAc,iBAAkBtF,GAF1CA,EAAI,IAAIgH,EAAShH,GAKnB,IAAMO,aAAayG,EAAU,CAE5B,IAAInD,EAAStD,GAGZ,MAAM,IAAI+E,EAAc,iBAAkB/E,GAF1CA,EAAI,IAAIyG,EAASzG,GAMnB,IAEIE,EAAY,GAFJwG,EAAStC,IAAI3E,EAAEkH,YAAa3G,EAAE2G,aAC9BD,EAAStC,IAAI3E,EAAEmH,aAAc5G,EAAE4G,cAG3C,OAAW,IAAP1G,EAECwG,EAAS9B,OAAO5E,EAAE4G,aAAcnH,EAAEkH,aAC9BtB,EAASQ,cAETR,EAASO,cAEP,EAAE,EAAG,EAAG,IAAIiB,SAAS3G,GACxBmF,EAASI,QACN,CAAC,GAAI,GAAI,IAAIoB,SAAS3G,GACzBmF,EAASM,OACC,GAAPzF,EACHmF,EAASK,OAIZgB,EAAS/B,QAAQ3E,EAAE2G,YAAalH,EAAEmH,cAC9BvB,EAASE,aAETF,EAASG,aAgBnB,SAASsB,EAAmBC,GAC3B,OAAO,SAActH,EAAGO,GACvB,IAAIkE,EAAIC,EAQR,OAPI4C,GACH7C,EAAK,CAACzE,EAAEsH,KAAK,EAAOtH,EAAEuH,WAAYvH,EAAEoE,UACpCM,EAAK,CAACnE,EAAE+G,KAAK,EAAO/G,EAAEgH,WAAYvH,EAAEoE,YAEpCK,EAAK,CAACzE,EAAEwH,MAAM,EAAMxH,EAAEyH,YAAazH,EAAEoE,UACrCM,EAAK,CAACnE,EAAEiH,MAAM,EAAMjH,EAAEkH,YAAazH,EAAEoE,WAE/B6C,EAAStC,IAAIF,EAAIC,IAU1B,SAASgD,EAAcR,EAAaC,GACnC,IAAKG,EAAKK,EAAWC,EAAYC,GAAgBX,GAC5CM,EAAMM,EAAYC,EAAaC,GAAiBb,EACrD,GAAIQ,EACH,MAAM,IAAIrC,EAAc,8CAEzB,IAAKwC,EACJ,MAAM,IAAIxC,EAAc,gDAEzB,OAAO,IAAI0B,EAASM,EAAKE,EAAMI,EAAYG,GAK5C,SAASE,EAAUjI,EAAGO,GACrB,IAAI2H,EAAMnB,EAAQ/G,EAAGO,GACrB,OAAI2H,GAAOtC,EAASE,aACZ,GACGoC,GAAOtC,EAASG,aACnB,CAACiB,EAASU,cAAcnH,EAAE2G,YAAalH,EAAEmH,eACtCe,GAAOtC,EAASM,OACnB,CAAC3F,GACE2H,GAAOtC,EAASK,QAEhBiC,GAAOtC,EAASI,QADnB,CAAChG,GAGEkI,GAAOtC,EAASO,cACnB,CAACa,EAASU,cAAc1H,EAAEkH,YAAa3G,EAAE4G,eACtCe,GAAOtC,EAASQ,cACnB,QADD,EAMR,SAAS+B,EAAMnI,EAAGO,GACjB,IAAI2H,EAAMnB,EAAQ/G,EAAGO,GACrB,OAAI2H,GAAOtC,EAASE,aAGf9F,EAAEwH,MAAQjH,EAAE+G,IACR,CAACN,EAASU,cAAc1H,EAAEkH,YAAa3G,EAAE4G,eAEzC,CAACnH,EAAGO,GAEF2H,GAAOtC,EAASG,aACnB,CAACiB,EAASU,cAAc1H,EAAEkH,YAAa3G,EAAE4G,eACtCe,GAAOtC,EAASM,QAEhBgC,GAAOtC,EAASK,OADnB,CAACjG,GAGEkI,GAAOtC,EAASI,QACnB,CAACzF,GACE2H,GAAOtC,EAASO,cACnB,CAACa,EAASU,cAAcnH,EAAE2G,YAAalH,EAAEmH,eACtCe,GAAOtC,EAASQ,cAGtBpG,EAAEwH,MAAQjH,EAAE+G,IACR,CAACN,EAASU,cAAcnH,EAAE2G,YAAalH,EAAEmH,eAEzC,CAAC5G,EAAGP,QANN,EAYR,SAASoI,EAAaC,GAErB,GADAA,EAAU5G,KAAKuF,EAASsB,QACpBD,EAAUpJ,QAAU,EACvB,OAAOoJ,EAER,MAAME,EAAS,CAACF,EAAUxG,SAC1B,KAAOwG,EAAUpJ,OAAS,GAAG,CAC5B,IAAIuJ,EAAOD,EAAOE,MACdC,EAAOL,EAAUxG,QACrB0G,EAAOI,QAAQ3B,EAASiB,UAAUO,EAAME,IAEzC,OAAOH,EAIR,SAASK,EAASP,GAEjB,GADAA,EAAU5G,KAAKuF,EAASsB,QACpBD,EAAUpJ,QAAU,EACvB,OAAOoJ,EAER,MAAME,EAAS,CAACF,EAAUxG,SAC1B,KAAOwG,EAAUpJ,OAAS,GAAG,CAC5B,IAAIuJ,EAAOD,EAAOE,MACdC,EAAOL,EAAUxG,QACrB0G,EAAOI,QAAQ3B,EAASmB,MAAMK,EAAME,IAErC,OAAOH,EAQR,MAAMvB,EAKLzB,gBAAkBK,EAClBL,aAAemB,EACfnB,cAAgB8B,GAAmB,GACnC9B,eAAiB8B,GAAmB,GACpC9B,qBAAuBmC,EACvBnC,iBAAmB0C,EACnB1C,aAAe4C,EACf5C,oBAAsB6C,EACtB7C,gBAAkBqD,EAOlBrD,YAAa+B,EAAKE,EAAMD,EAAYE,GAInC,GAHkB5D,EAASyD,SAEC/C,IAATiD,IAAoBA,EAAOF,IACzCzD,EAASyD,GAAM,MAAM,IAAIhC,EAAc,oBAC5C,IAAKzB,EAAS2D,GAAO,MAAM,IAAIlC,EAAc,qBAC7C,GAAIgC,EAAME,EAAM,MAAM,IAAIlC,EAAc,cASxC,GARIgC,IAAQE,IACXD,GAAa,EACbE,GAAc,GAEXH,KAASjD,EAAAA,IAAUkD,GAAa,GAChCC,IAASnD,EAAAA,IAAUoD,GAAc,QAClBlD,IAAfgD,IAA0BA,GAAa,QACvBhD,IAAhBkD,IAA2BA,GAAc,GACnB,kBAAfF,EAA0B,MAAM,IAAIjC,EAAc,0BAC7D,GAA2B,kBAAhBmC,EAA2B,MAAM,IAAInC,EAAc,2BAC9DI,KAAKmD,KAAOvB,EACZ5B,KAAKoD,MAAQtB,EACb9B,KAAKqD,YAAcxB,EACnB7B,KAAKsD,aAAevB,EACpB/B,KAAKuD,QAAUvD,KAAKoD,MAAQpD,KAAKmD,KACjCnD,KAAKwD,UAAaxD,KAAKmD,OAASnD,KAAKoD,MACrCpD,KAAKyD,QAAWC,SAAS1D,KAAKmD,OAASO,SAAS1D,KAAKoD,OAQrDpD,KAAK2D,aAAepC,EAAShD,OAAOyB,KAAKmD,MAAM,EAAOnD,KAAKqD,YAAarD,KAAKwD,WAC7ExD,KAAK4D,cAAgBrC,EAAShD,OAAOyB,KAAKoD,OAAO,EAAMpD,KAAKsD,aAActD,KAAKwD,WAIhF5B,UAAY,OAAO5B,KAAKmD,KACxBrB,WAAa,OAAO9B,KAAKoD,MACzBvB,iBAAmB,OAAO7B,KAAKqD,YAC/BtB,kBAAoB,OAAO/B,KAAKsD,aAChC/J,aAAe,OAAOyG,KAAKuD,QAC3B7E,eAAiB,OAAOsB,KAAKwD,UAC7BK,aAAe,OAAO7D,KAAKyD,QAC3BjC,kBAAoB,OAAOxB,KAAK2D,aAChClC,mBAAqB,OAAOzB,KAAK4D,cAMjC/D,WAEC,GAAIG,KAAKwD,UAAW,CAEnB,MAAO,IADCxD,KAAK2D,aAAa,MAK1B,MAAO,GAFGpC,EAASlC,SAASW,KAAK2D,iBACtBpC,EAASlC,SAASW,KAAK4D,iBAKpC/D,gBAAiBiE,GAChB,IAAIrE,EAAS8B,EAAS9B,OAAOqE,EAAG9D,KAAK2D,cACjCnE,EAAU+B,EAAS/B,QAAQsE,EAAG9D,KAAK4D,eACvC,OAAQnE,IAAWD,EAGpBK,QAASkE,GACR,OAAO1C,EAAQrB,KAAM+D,GAGtBlE,OAAQkE,GACP,OAAO1C,EAAQrB,KAAM+D,IAAU7D,EAASK,OAOzCV,MAAOkE,EAAOC,EAAKlD,GAClB,IAAImD,EAAW5C,EAAQrB,KAAM+D,GAC7B,OAAOG,QAAQF,EAAOC,ICzWxB,MAAMhF,EAAM,SAAU3E,EAAGO,GAAI,OAAOP,EAAIO,GAMjC,SAASsJ,EAAaC,EAAUC,GACnC,IAAIC,EAAMF,EAASG,UAAYF,EAASE,SACpCC,EAAMJ,EAASK,UAAYJ,EAASI,SACpC5I,EAAMuI,EAASM,cAAgBL,EAASK,aACxCC,EAAKP,EAASQ,WAAaP,EAASO,UACxC,OAAON,GAAOE,GAAO3I,GAAO8I,EAoBzB,SAASE,EAAgBC,EAAQH,GACvC,QAAW9F,IAAP8F,EACA,MAAM,IAAInH,MAAO,sCAErB,MAAMuH,EAAWJ,EAAKG,EAAOF,UAC7B,MAAO,CACNL,SAAWO,EAAOP,SAAWO,EAAOL,SAASM,EAAW,GAAID,EAAOJ,aAAaK,EAASA,EACzFN,SAAWK,EAAOL,SAAWK,EAAOJ,aAAaK,EACjDL,aAAeI,EAAOJ,aACtBE,UAAYD,GASP,SAASK,EAAmBF,EAAQH,GAOvC,IAAIM,EAEAA,EADMpG,MAAN8F,EACcG,EAEAD,EAAgBC,EAAQH,GAG1C,IAAIO,EAAYjG,EAAIgG,EAAYR,SAAU,GAK1C,OAJkB,IAAdS,IAEAA,EAAYjG,EAAI6F,EAAOJ,aAAc,IAElCQ,EASJ,SAASC,EAASL,GACrB,OAA4B,IAApBA,EAAOL,UAA4C,IAAxBK,EAAOJ,aASvC,MAAMU,EAAa3I,OAAO0D,OAAO,CACpCkF,KAAO,OACPnE,OAAQ,SACRoE,YAAa,aACbC,aAAc,gBAOX,SAASC,EAAkBV,EAAQW,GACtC,MAAOlB,SAAUT,EAAGW,SAAUiB,EAAGhB,aAAcpK,GAAKwK,EACvD,GAAIhB,EAAI2B,EAAM,GAAI,OAAOL,EAAWG,aACpC,GAAIzB,EAAI2B,EAAM,GAAI,OAAOL,EAAWE,YAEpC,GAAIxB,IAAM2B,EAAM,GAAI,CACnB,GAAIC,EAAI,EAAK,OAAON,EAAWG,aAC/B,GAAU,IAANG,GAAapL,EAAI,EAAK,OAAO8K,EAAWG,kBACtC,GAAIzB,IAAM2B,EAAM,GAAI,CACvB,GAAIC,EAAI,EAAK,OAAON,EAAWE,YAC/B,GAAS,GAALI,GAAYpL,EAAI,EAAK,OAAO8K,EAAWG,aAE/C,OAAOH,EAAWlE,OAQZ,SAASyE,EAAWb,EAAQW,GAClC,MAAMG,EAAQJ,EAAkBV,EAAQW,GASxC,OARIG,IAAUR,EAAWlE,SAExB4D,EAAOL,SAAW,EAClBK,EAAOJ,aAAe,EAClBkB,IAAUR,EAAWG,aACxBT,EAAOP,SAAWkB,EAAM,GAClBX,EAAOP,SAAWkB,EAAM,IAEzBX,EAOD,SAASe,EAAef,EAAQW,GACnC,IAAIK,EAAKhB,EAAOF,UAEZmB,EAAYC,EAAiClB,EAAQW,EAAM,IAE3DQ,EAAaD,EAAiClB,EAAQW,EAAM,IAEhE,YAAkB5G,IAAdkH,QAA0ClH,IAAfoH,EACvBF,EAAYE,EACL,CAACH,EAAKC,EAAWN,EAAM,IAGvB,CAACK,EAAKG,EAAYR,EAAM,SAEhB5G,IAAdkH,EACE,CAACD,EAAKC,EAAWN,EAAM,SACV5G,IAAfoH,EACE,CAACH,EAAKG,EAAYR,EAAM,IACvB,MAAC5G,OAAWA,GAgB5B,SAASqH,EAAiBpC,EAAE4B,EAAEpL,EAAE6L,GAC/B,OAAKvM,KAAKwM,IAAIV,EAAE,GAAK,EAAEpL,GAAGwJ,EAAEqC,IAAO,EAcpC,SAASE,EAAuBvC,EAAE4B,EAAEpL,EAAE6L,GAErC,GAAU,IAAN7L,GAAmB,IAANoL,EACb,OAAI5B,GAAKqC,EAAU,GACP,CAAC,GAGjB,GAAU,IAAN7L,EAAW,MAAO,EAAE6L,EAAErC,GAAG4B,GAE7B,IAAiC,IAA7BQ,EAAgBpC,EAAE4B,EAAEpL,EAAE6L,GAAc,MAAO,GAG/C,GAAqB,IADAT,EAAEA,EAAI,EAAEpL,GAAGwJ,EAAEqC,GAE9B,MAAO,EAAET,EAAEpL,GAEf,MAAMgM,EAAO1M,KAAK0M,KAAK1M,KAAKwM,IAAIV,EAAE,GAAK,EAAEpL,GAAGwJ,EAAEqC,IACxCI,IAAOb,EAAIY,GAAMhM,EACjBkM,IAAOd,EAAIY,GAAMhM,EACvB,MAAO,CAACV,KAAK8F,IAAI6G,EAAGC,GAAI5M,KAAK+F,IAAI4G,EAAGC,IAwCrC,SAASR,EAAiClB,EAAQqB,GAC9C,MAAO5B,SAAUT,EAAGW,SAAUiB,EAAGhB,aAAcpK,GAAKwK,EACjD2B,EA7BP,SAAwC3C,EAAE4B,EAAEpL,EAAE6L,GAC7C,MAAMM,EAAMJ,EAAuBvC,EAAE4B,EAAEpL,EAAE6L,GACzC,OAAmB,IAAfM,EAAIlN,OAAqB,GACN,GAAdkN,EAAIlN,OACLkN,EAAI,GAAK,EACR,CAACA,EAAI,IAEE,GAEO,GAAdA,EAAIlN,OACLkN,EAAI,GAAK,EAAY,GACrBA,EAAI,GAAK,EAAY,CAACA,EAAI,GAAIA,EAAI,IAClCA,EAAI,GAAK,EAAY,CAACA,EAAI,IACvB,GAEC,GAcAC,CAA+B5C,EAAE4B,EAAEpL,EAAE6L,GACjD,OAAmB,IAAfM,EAAIlN,YACD,EAEKkN,EAAI,GAmBV,SAASE,EAAe7B,EAAQW,GAEtC,IAAImB,EAAiBZ,EAAiClB,EAAQW,EAAM,IAEhEoB,EAAgBb,EAAiClB,EAAQW,EAAM,IASnE,OAPOmB,GAAkBjI,EAAAA,IAClBiI,OAAiB/H,GAEjBgI,GAAiBlI,EAAAA,IACjBkI,OAAgBhI,QAGAA,IAAnB+H,QAAkD/H,IAAlBgI,EAC5BD,EAAiBC,EAChB,CAACD,EAAgBnB,EAAM,IAEvB,CAACoB,EAAepB,EAAM,SAEH5G,IAAnB+H,EACE,CAACA,EAAgBnB,EAAM,SACP5G,IAAlBgI,EACE,CAACA,EAAepB,EAAM,IACrB,MAAC5G,OAAWA,GAkBlB,SAASiI,EAA+BC,EAAcjC,GAKzD,IAAKK,EAASL,IAAWiC,EAAarI,SAClC,OAAO,IAAI4C,EAASwD,EAAOP,UAG/B,IAAIuB,EAAKiB,EAAanF,IAClBoF,EAAKD,EAAajF,KAClBmF,EAAYF,EAAalF,WACzBqF,EAAYH,EAAahF,YAEzBoF,EAAUtC,EAAgBC,EAAQgB,GAClCsB,EAAKD,EAAQ5C,SACb8C,EAAKF,EAAQ1C,SACb6C,EAAKH,EAAQzC,aACb6C,EAAK1C,EAAgBC,EAAQkC,GAAIzC,SAErC,GAAU,GAAN+C,EAAS,CA4BT,IAAIE,GAAYH,EAAGC,EAAKxB,EACxB,GAAIiB,EAAaU,gBAAgBD,GAAW,CACxC,IAAIE,GAAYL,EAAGA,GAAI,EAAIC,GAAMF,EAEjC,OAAIE,EAAK,EAGDF,EAAKG,EACE,IAAIjG,EAASoG,EAAUH,GAAI,EAAML,GAEjC,IAAI5F,EAASoG,EAAUN,GAAI,EAAMH,GAKxCG,EAAKG,EACE,IAAIjG,EAAS8F,EAAIM,EAAUT,GAAW,GAEtC,IAAI3F,EAASiG,EAAIG,EAAUR,GAAW,IAgB7D,OAAIE,EAAKG,EAEE,IAAIjG,EAAS8F,EAAIG,EAAIN,EAAWC,GAGhC,IAAI5F,EAASiG,EAAIH,EAAIF,EAAWD,GAkBxC,SAASU,EAA8BC,EAAajD,EAAIO,GAC3D,IAAKZ,EAAK9F,EAAOqJ,EAAOnJ,GAAYkJ,EAKpC,OAHI1C,EAAY,QAAerG,IAAVL,IACjBA,GAASA,GAEN,CAACmG,EAAInG,EAAOqJ,EAAOnJ,GAsDvB,SAASoJ,EAAgBf,EAAcgB,EAAajD,EAAQkD,GAK/D,GAAIjB,EAAarI,SACb,MAAM,IAAIlB,MAAM,2CAEpB,IAAK2H,EAASL,GACV,MAAM,IAAItH,MAAM,4BAGpB,IAKIxC,EAAO2J,EAAIsD,EACXC,EAAYhD,EANZkC,EAAKtC,EAAOP,SACZ8C,EAAKvC,EAAOL,SACZ6C,EAAKxC,EAAOJ,aACZoB,EAAKhB,EAAOF,UAIZuD,EAAa,GAEjBH,EAAcI,SAAQ,SAASC,GAEtBN,EAAYN,gBAAgBY,EAAK9G,YAGtCvG,EAAQqN,EAAK9G,SAAS,GAEjB2E,EAAgBkB,EAAIC,EAAIC,EAAItM,KAMjCiN,EAAS5B,EAAuBe,EAAGC,EAAGC,EAAItM,GAE1CiN,EAAOG,SAAQ,SAASE,GACpB3D,EAAKmB,EAAKwC,EACVpD,EAAYF,EAAmBF,EAAQH,GACvCuD,EAAaP,EAA8BU,EAAK9G,SAAUoD,EAAIO,GAC1D6B,EAAaU,gBAAgBS,KAC7BG,EAAKH,WAAaA,EAClBG,EAAKnD,UAAYA,EACjBiD,EAAWlF,KAAKoF,YAU5B,OADAF,EAAWpM,MAHC,SAAUzB,EAAEO,GACpB,OAAO0G,EAAStC,IAAI3E,EAAE4N,WAAYrN,EAAEqN,eAGjCC,EAgCJ,MAAMI,EAGT1I,gBAAkBpD,OAAO0D,OAAO,CAC5BqI,KAAM,EACNC,OAAQ,IAIZ5I,iBAAmBpD,OAAO0D,OAAO,CAC7BqI,KAAM,EACNE,YAAa,EACbC,MAAO,EACPF,OAAQ,EACRG,KAAM,IAGV/I,YAAagJ,EAAYC,GACrB,IAAInE,EAAKmE,EAAWlE,UAChBmE,EAAY5D,EAAS2D,GACrBE,EAAsBnK,MAAdgK,GAAkDhK,MAAvBgK,EAAWtE,SAClD,MAAM0E,EAAWV,EAAYU,SACvBC,EAAYX,EAAYW,UAE9B,GAAIF,EAOIhJ,KAAKmJ,IADLJ,EACW,CAACE,EAASR,OAAQS,EAAUP,OAE5B,CAACM,EAASR,OAAQS,EAAUV,UAExC,CACH,IASIY,EATAC,EAAalE,EAAS0D,GACtBS,EAAazE,EAAgBgE,EAAYlE,GACzC4E,EAAe1E,EAAgBiE,EAAYnE,GAI3C6E,EADeF,EAAW/E,UAAYgF,EAAahF,SAC7B0E,EAASR,OAASQ,EAAST,KAIrD,GAAIa,GAAcN,EAAW,CACzB,IAAIU,EAAeH,EAAW7E,UAAY8E,EAAa9E,SACnDiF,EAAeJ,EAAW5E,cAAgB6E,EAAa7E,aAGvD0E,EAFgBK,GAAeC,EAEzBR,EAAUT,OAEVS,EAAUR,iBAEZW,GAAcN,EACtBK,EAAMF,EAAUP,MACTU,IAAeN,EACtBK,EAAMF,EAAUN,KACRS,GAAeN,IACvBK,EAAMF,EAAUV,MAEpBxI,KAAKmJ,IAAM,CAACK,EAAKJ,IAIzBO,eACI,OAAO3J,KAAKmJ,IAAI,GAGpBS,gBACI,OAAO5J,KAAKmJ,IAAI,GAGpBtJ,WACI,MAAMoJ,EAAWV,EAAYU,SACvBC,EAAYX,EAAYW,UAC9B,IAAIW,EAAO7J,KAAK2J,UAAYV,EAASR,OAAU,SAAW,GAY1D,OAXIzI,KAAK4J,WAAaV,EAAUP,MAC5BkB,GAAO,mBACA7J,KAAK4J,WAAaV,EAAUT,OACnCoB,GAAO,mBACA7J,KAAK4J,WAAaV,EAAUN,KACnCiB,GAAO,mBACA7J,KAAK4J,WAAaV,EAAUR,YACnCmB,GAAO,yBACA7J,KAAK4J,WAAaV,EAAUV,OACnCqB,GAAO,8BAEJA,iEAxnBR,SAAoB/E,GACvB,MAAO,CACHP,SAAUO,EAAOP,SACjBE,SAAUK,EAAOL,SACjBC,aAAcI,EAAOJ,aACrBE,UAAWE,EAAOF,+OCS1B,MAAMkF,WAA0BtM,MAE5BqC,YAAYC,GACRC,MAAMD,GACNE,KAAKC,KAAO,qBA4BpB,SAAShB,GAAI3E,EAAGO,GAAI,OAAOP,EAAEO,EAG7B,MAAMkP,GAEFlK,YAAYrE,GACRwE,KAAKgK,MAAQ,GACbhK,KAAKxE,QAAUA,GAAW,GAS9BqE,cAAcoK,GACV,IAEIC,EACAC,EAHAC,EAAW,EACXC,EAAWrK,KAAKgK,MAAMzQ,OAAS,EAGnC,KAAO6Q,GAAYC,GAGf,GAFNH,GAAgBE,EAAWC,GAAY,EAAI,EAC3CF,EAAiBnK,KAAKgK,MAAME,GAClBC,EAAiBF,EACjBG,EAAWF,EAAe,MACvB,CAAA,KAAIC,EAAiBF,GAI9B,OAAOC,EAHDG,EAAWH,EAAe,EAOrC,OAAQG,EAqBTxK,QAAQyK,EAAOnE,GACX,OAAImE,EAAQ,GAGC,GAATA,GAActK,KAAKgK,MAAMzQ,OAAS,GAAKyG,KAAKgK,MAAM,IAAM7D,EAShEtG,QAAQsG,GACJ,IAAImE,EAAQtK,KAAKuK,cAAcpE,GAC/B,OAAQnG,KAAKwK,QAAQF,EAAOnE,GAAMmE,GAAS,EAG/CzK,gBAAgB4K,GACZ,IAAItE,EAAGmE,EACHI,EAAU,GACd,IAAK,IAAIhR,EAAE,EAAGA,EAAE+Q,EAASlR,OAAQG,IAC7ByM,EAAIsE,EAAS/Q,GACb4Q,EAAQtK,KAAK2K,QAAQxE,GACjBmE,GAAS,GACTI,EAAQzH,KAAKqH,GAGrB,OAAOI,EAMX7K,IAAIsG,GACA,OAAQnG,KAAK2K,QAAQxE,IAAM,EAG/BtG,IAAIyK,GACA,OAAOtK,KAAKgK,MAAMM,GAkBtBzK,eAAe+K,EAAWC,EAAWrP,GAGjC,GAAIwE,KAAKgK,MAAMzQ,OAAS,EAAG,CACvB,IAAImR,EAAU1K,KAAK8K,gBAAgBF,GAOnCF,EAAQ3O,MAAK,SAASzB,EAAEO,GAAG,OAAOP,EAAEO,KACpC,IAAK,IAAInB,EAAEgR,EAAQnR,OAAO,EAAGG,GAAK,EAAGA,IACjCsG,KAAKgK,MAAMe,OAAOL,EAAQhR,GAAI,GAKtC,IAAIyM,EAAGmE,EACHrO,EAAM4O,EAAUtR,OACpB,IAAK,IAAIG,EAAE,EAAGA,EAAEuC,EAAKvC,IACjByM,EAAI0E,EAAUnR,GACd4Q,EAAQtK,KAAKuK,cAAcpE,GACtBnG,KAAKwK,QAAQF,EAAOnE,IAErBnG,KAAKgK,MAAMe,OAAOnR,KAAKoR,IAAIV,GAAQ,EAAGnE,GAmBlDtG,aAAa+K,EAAWC,EAAWrP,GAE/B,GAAIwE,KAAKgK,MAAMzQ,OAAS,GAAKqR,EAAUrR,OAAS,EAAG,CAG/C,IAAImR,EAAU1K,KAAK8K,gBAAgBF,GACnC,IAAK,IAAIlR,EAAE,EAAGA,EAAEgR,EAAQnR,OAAOG,IAC3BsG,KAAKgK,MAAMU,EAAQhR,SAAMmF,EASjC,GAJAmB,KAAKgK,MAAQhK,KAAKgK,MAAMiB,OAAOJ,GAE/B7K,KAAKgK,MAAMjO,KAAKkD,IAEZ2L,EAAUrR,OAAS,EAAG,CACtB,IAAI+Q,EAAQtK,KAAKgK,MAAMW,aAAQ9L,GAC3ByL,GAAS,GACTtK,KAAKgK,MAAMe,OAAOT,EAAOtK,KAAKgK,MAAMzQ,OAAO+Q,GArO3D,IAAgBY,EAyORlL,KAAKgK,OAzOGkB,EAyOYlL,KAAKgK,MAxOtB,IAAI,IAAIvP,IAAIyQ,KAuPnBrL,OAAO+K,EAAWC,EAAWrP,GACzB,IAAItB,EAAO0Q,EAAUrR,OAASsR,EAAUtR,OACxC,GAAY,GAARW,EACA,OAIJ,IAAIiR,GAjPcC,EAiPcpL,KAAKgK,MAAMzQ,OAjPZ8R,EAiPoBnR,EAhPpC,GAAfkR,EACO,OAEHC,GAAe,IAAO,SAAW,QAJ7C,IAA0BD,EAAaC,EAkPf,UAAZF,EACAnL,KAAKsL,eAAeV,EAAWC,EAAWrP,GACvB,QAAZ2P,GACPnL,KAAKuL,aAAaX,EAAWC,EAAWrP,GAShDqE,aACI,OAAQG,KAAKgK,MAAMzQ,OAAS,EAAKyG,KAAKgK,MAAM,QAAKnL,EAGrDgB,WAAa,WACT,OAAQG,KAAKgK,MAAMzQ,OAAS,EAAKyG,KAAKgK,MAAMhK,KAAKgK,MAAMzQ,OAAS,QAAKsF,GAYzEgB,UAAUsG,GACN,IAAIzM,EAAIsG,KAAKuK,cAAcpE,GAC3B,OAAInG,KAAKwK,QAAQ9Q,EAAGyM,GAOZzM,EAAI,EACGA,EAAE,GAED,EAOLE,KAAKoR,IAAItR,GAAG,EAQ3BmG,UAAUsG,GACN,IAAIzM,EAAIsG,KAAKuK,cAAcpE,GAC3B,OAAInG,KAAKwK,QAAQ9Q,EAAGyM,KAOhBzM,EAAIE,KAAKoR,IAAItR,GAAK,IACL,EAJNA,GAIgB,EAS/BmG,UAAUsG,GACN,IAAIzM,EAAIsG,KAAKuK,cAAcpE,GAC3B,GAAInG,KAAKwK,QAAQ9Q,EAAGyM,GAKhB,OAAIzM,EAAIsG,KAAKgK,MAAMzQ,OAAQ,EAChBG,EAAE,GAED,EAET,CAOH,IAAI8R,EAAM5R,KAAKoR,IAAItR,GACnB,OAAQ8R,EAAMxL,KAAKgK,MAAMzQ,OAAUiS,GAAO,GAUlD3L,UAAUsG,GACN,IAAIzM,EAAIsG,KAAKuK,cAAcpE,GAC3B,OAAInG,KAAKwK,QAAQ9Q,EAAGyM,KAOhBzM,EAAIE,KAAKoR,IAAItR,IACHsG,KAAKgK,MAAMzQ,OAJdG,GAI6B,EAS5CmG,cAAc4L,GAGV,QAFiB5M,IAAb4M,IACAA,EAAW,IAAInK,GAAU3C,EAAAA,EAAUA,EAAAA,GAAU,GAAM,IACnD8M,aAAoBnK,IAAa,EACjC,MAAM,IAAIwI,GAAkB,qCAGhC,GAAI2B,EAAS/M,SAAU,CACnB,IAAI4L,EAAQtK,KAAK2K,QAAQc,EAAS7J,KAClC,OAAI0I,GAAS,EACF,CAACA,EAAOA,EAAQ,GAEhB,MAACzL,OAAWA,GAK3B,IAAI6M,GAAe,EAAGC,GAAa,EAMnC,OAAqB,KAJjBD,EADAD,EAAS5J,WACK7B,KAAK4L,UAAUH,EAAS7J,KAExB5B,KAAK6L,UAAUJ,EAAS7J,QAUvB,KAJf+J,EADAF,EAAS1J,YACG/B,KAAK8L,UAAUL,EAAS3J,MAExB9B,KAAK+L,UAAUN,EAAS3J,OAL7B,MAACjD,OAAWA,GAUhB,CAAC6M,EAAaC,EAAY,GAOrC9L,OAAO4L,GACH,IAAKrP,EAAOJ,GAAOgE,KAAKgM,cAAcP,GACtC,OAAiB5M,MAATzC,EAAsB4D,KAAKgK,MAAMiC,MAAM7P,EAAOJ,GAAO,GAMjE6D,OAAO4L,GACH,IAAKrP,EAAOJ,GAAOgE,KAAKgM,cAAcP,GACtC,OAAiB5M,MAATzC,EAAsB4D,KAAKgK,MAAMe,OAAO3O,EAAOJ,EAAII,GAAS,GAIxEyD,MAAMzD,EAAOJ,GACT,OAAOgE,KAAKgK,MAAMiC,MAAM7P,EAAOJ,GAGnC6D,OAAOzD,EAAO7C,GACV,OAAOyG,KAAKgK,MAAMe,OAAO3O,EAAO7C,GAapCsG,cAAcqM,GACV,GAAyB,GAArBA,EAAW3S,OACX,OAEJ,MAAMqI,EAAMsK,EAAW,GACjBpK,EAAOoK,EAAWA,EAAW3S,OAAO,GAC1C,IAAK6C,EAAOJ,GAAOgE,KAAKgM,cAAc,IAAI1K,EAASM,EAAKE,GAAM,GAAM,IAEhEqK,EAAS/P,EACTgQ,EAAShQ,EACTiQ,EAAS,EAEb,KAAOF,EAASnQ,GAAK,CACjB,IAAIsQ,EAAUtM,KAAKgK,MAAMmC,GACrBI,EAAUL,EAAWG,GAYzB,GAXIC,EAAUC,GACVvM,KAAKgK,MAAMoC,GAAUpM,KAAKgK,MAAMmC,GAChCC,IACAD,KACOG,GAAWC,GAClBJ,IACAE,KAGAA,IAEAA,GAAUH,EAAW3S,OACrB,MAGRyG,KAAKgK,MAAMe,OAAOqB,EAAQD,EAAOC,GAIrCvM,SACI,OAAOG,KAAKgK,MAAMwC,SAGtB3M,QACIG,KAAKgK,MAAQ,GAGjBzQ,aACI,OAAOyG,KAAKgK,MAAMzQ,QCjf1B,MAAMkT,GAEL5M,YAAa6M,EAAWzM,EAAMzE,GAC7BA,EAAUA,GAAW,GACrBwE,KAAK0M,UAAYA,EACjB1M,KAAKC,KAAOA,EACZD,KAAKgJ,UAAyBnK,IAAjBrD,EAAQwN,MAA8BxN,EAAQwN,KAC3DhJ,KAAK2M,cAAgB,GAUtB9M,UAAW+M,EAAUpR,GACpB,IAAKoR,GAAgC,mBAAbA,EACvB,MAAM,IAAIpP,MAAM,0BAA2BoP,GAE5C,MAAMC,EAAM,IAAIC,GAAa9M,KAAM4M,EAAUpR,GAG1C,GAFHwE,KAAK2M,cAAc1J,KAAK4J,GAEjB7M,KAAKgJ,MAAQ6D,EAAI7D,KAAM,CAC1B6D,EAAIE,cAAe,EACnB,IAAIC,EAAOhN,KACXnD,QAAQC,UAAUmQ,MAAK,WACtB,MAAMC,EAAQF,EAAKN,UAAUS,sBAAsBH,EAAK/M,OAAS,GACjE,IAAK,IAAImN,KAAQF,EAChBF,EAAKK,QAAQD,EAAM,CAACP,IAAM,GAE3BA,EAAIE,cAAe,KAGxB,OAAOF,EASRhN,QAASuN,EAAME,EAAMtE,GACpB,IAAIuE,EAAOC,EACX,IAAK,MAAMX,KAAOS,EAEjB,IAAIT,EAAIY,WAAR,CAGAF,EAAQ,CACPG,IAAK1N,KAAK0M,UACVzM,KAAMD,KAAKC,KACX4M,IAAKA,EACL7D,KAAMA,GAEPwE,EAAMX,EAAIW,KAAOxN,KAAK0M,UACtB,IACCG,EAAID,SAASe,KAAKH,EAAKJ,EAAMG,GAC5B,MAAOK,GACRC,QAAQC,IAAI,YAAY9N,KAAKC,SAAS4M,EAAID,YAAYgB,OASzD/N,YAAYgN,GACX,IAAIrB,EAAMxL,KAAK2M,cAAchC,QAAQkC,GACjCrB,GAAO,IACVxL,KAAK2M,cAAc5B,OAAOS,EAAK,GAC/BqB,EAAIkB,cAUP,MAAMjB,GAELjN,YAAYmO,EAAOpB,EAAUpR,GAC5BA,EAAUA,GAAW,GACrBwE,KAAKgO,MAAQA,EACbhO,KAAKC,KAAO+N,EAAM/N,KAClBD,KAAK4M,SAAWA,EAChB5M,KAAKgJ,UAAyBnK,IAAjBrD,EAAQwN,KAAsBhJ,KAAKgO,MAAMhF,KAAOxN,EAAQwN,KACrEhJ,KAAK+M,cAAe,EACpB/M,KAAKyN,YAAa,EAClBzN,KAAKwN,IAAMhS,EAAQgS,IAGpB3N,YACCG,KAAKyN,YAAa,EAClBzN,KAAK4M,cAAW/N,EAChBmB,KAAKgO,MAAMC,YAAYjO,OAsBlB,SAASkO,GAAkBC,GAGjC,OAFAA,EAAOC,oBAAsB,IAAItT,IACjCqT,EAAOE,kBAAoB,GACpBF,EAUD,SAASG,GAAkBC,GAEjC,SAASC,EAAiBL,EAAQlO,GACjC,MAAM+N,EAAQG,EAAOC,oBAAoBK,IAAIxO,GAC7C,GAAapB,MAATmP,EACH,MAAM,IAAIxQ,MAAM,kBAAmByC,GAEpC,OAAO+N,EA2GRO,EAAWG,eAlGX,SAAwBzO,EAAMzE,GAE7B,GAAIwE,KAAKoO,oBAAoB7T,IAAI0F,GAChC,MAAM,IAAIzC,MAAM,wBAAyByC,GAE1CD,KAAKoO,oBAAoBrQ,IAAIkC,EAAM,IAAIwM,GAAMzM,KAAMC,EAAMzE,KA8F1D+S,EAAWI,gBALX,SAAyB1O,EAAMmN,GAC9B,OAAOpN,KAAK4O,mBAAmB,CAAC,CAAC3O,KAAAA,EAAMmN,KAAAA,MAKxCmB,EAAWM,qBAfX,SAA8B5O,EAAMiN,GACnC,OAAOlN,KAAK4O,mBAAmB1B,EAAMzP,IAAI2P,IACjC,CAACnN,KAAAA,EAAMmN,KAAAA,OAchBmB,EAAWK,mBA3DX,SAA4BzG,GAC3B,GAAyB,GAArBA,EAAW5O,OACd,OAQD,IAAIuV,EAAe3G,EAAW1K,IAAK4K,IAClC,IAAIpI,KAACA,EAAImN,KAAEA,GAAQ/E,EACf0G,EAAKP,EAAiBxO,KAAMC,GAC5BqN,EAAOyB,EAAGpC,cAAcjS,OAAOmS,GAA2B,GAApBA,EAAIE,cAC9C,MAAO,CAACgC,EAAI3B,EAAME,IAChBtN,MAGH,MAAM/D,EAAM6S,EAAavV,OACnByV,EAAMhP,KAAKqO,kBACXY,EAAUjP,KAAKqO,kBAAkB9U,OAEvCyG,KAAKqO,kBAAkB9U,OAAS0V,EAAUhT,EAE1C,IAAK,IAAIvC,EAAE,EAAGA,EAAEuC,EAAKvC,IACpBsV,EAAIC,EAAQvV,GAAKoV,EAAapV,GAG/B,GAAe,GAAXuV,EAAc,CACjB,IAAIjC,EAAOhN,KACXnD,QAAQC,UAAUmQ,MAAK,WACtB,IAAK,IAAK8B,EAAI3B,EAAME,KAASN,EAAKqB,kBAEjCU,EAAG1B,QAAQD,EAAME,GAAM,GAExBN,EAAKqB,kBAAoB,QAyB5BE,EAAWW,sBA3EX,SAA+BjP,GAC9B,OAAOuO,EAAiBxO,KAAMC,GAAM0M,eA2ErC4B,EAAWY,GA1FX,SAAYlP,EAAM2M,EAAUpR,GAC3B,OAAOgT,EAAiBxO,KAAMC,GAAMmP,UAAUxC,EAAUpR,IA0FzD+S,EAAWc,IAlFX,SAAaxC,GACZ,OAAO2B,EAAiBxO,KAAM6M,EAAI5M,MAAMgO,YAAYpB,IA2F/C,MAAMyC,GAEZzP,YAAa7E,GACZkT,GAAiBlO,MACjBA,KAAKuP,OAASvU,EACdgF,KAAK0O,eAAe,SAAU,CAAC1F,MAAK,IAGrCnJ,sBAAsBI,GACrB,GAAY,UAARA,EACH,MAAO,CAACD,KAAKuP,QAIfvU,YAAc,OAAOgF,KAAKuP,OAC1BvU,UAAWA,GACNA,GAASgF,KAAKuP,SACjBvP,KAAKuP,OAASvU,EACdgF,KAAK2O,gBAAgB,SAAU3T,KAIlCsT,GAAkBgB,GAAcE,kBAwCjB,CACdlB,kBAAAA,GACAJ,iBAAAA,GACAoB,cAAAA,GACAG,aAjCM,cAA2BH,GACjCzP,YAAY7E,GACX+E,MAAMmE,QAAQlJ,IAGfA,UAAWA,GACV+E,MAAM/E,MAAQkJ,QAAQlJ,GAEvBA,YAAc,OAAO+E,MAAM/E,QA0B3B0U,YAlBM,SAAqBC,EAAaC,GAExC,OADAA,EAAgBA,GAAiB,SAAS/R,GAAM,OAAc,GAAPA,GAChD,IAAIhB,SAAS,SAAUC,EAAS+S,GACtC,IAAIhD,EAAM8C,EAAYR,GAAG,UAAU,SAAUnU,GACxC4U,EAAc5U,KACjB8B,EAAQ9B,GACR2U,EAAYN,IAAIxC,YCjUpB,MAAMiD,GAEFjQ,YAAarE,EAAQ,IAEjBwE,KAAKxE,QAAUA,EAGfuU,GAAS7B,iBAAiBlO,MAC1BA,KAAK0O,eAAe,QAAS,CAAC1F,MAAK,IACnChJ,KAAK0O,eAAe,SAAU,CAAC1F,MAAK,IACpChJ,KAAK0O,eAAe,SAAU,CAAC1F,MAAK,IAUxCgH,iBACI,MAAM,IAAIxS,MAAM,mBAOpBqC,UAAUrE,EAAQ,IAEd,IAAIE,MAACA,EAAMsE,KAAKxE,QAAQE,OAASF,EACjC,GAAoB,mBAATE,EACP,OAAOA,EAUfmE,WAAWoQ,EAAMzU,EAAQ,IACrB,IAAIE,EAAQsE,KAAKkQ,UAAU1U,GAC3B,GAAoB,mBAATE,EAAqB,CAI5B,OADW4B,MAAMC,QAAQ0S,GAASA,EAAO,IAAIA,IAClClU,KAAKL,GAGhB,OAAOuU,EAQfpQ,UAAUsQ,GACN,IAAIzU,EAAQsE,KAAKkQ,YACG,mBAATxU,GACPyU,EAAMpU,MAAK,SAASqU,EAAQC,GACxB,IAAIC,EAASF,EAAU,IAAIA,EAAOG,IAAMH,EAAOI,IAC3CC,EAASJ,EAAU,IAAIA,EAAOE,IAAMF,EAAOG,IAC/C,OAAO9U,EAAM4U,EAAOG,MAYhC5Q,sBAAsBI,GAClB,GAAY,SAARA,GAA2B,UAARA,EAAkB,CACrC,IAAIkQ,EAAQ,IAAInQ,KAAKgQ,WAAWlS,WAAWL,IAAI,EAAE1C,EAAK8C,MAC3C,CAAC9C,IAAIA,EAAKwV,IAAI1S,EAAK2S,SAAI3R,KAIlC,OADAmB,KAAK0Q,UAAUP,GACC,SAARlQ,EAAmB,CAACkQ,GAASA,GAO7CtQ,cAAcsQ,GAEV,GAAoB,GAAhBA,EAAM5W,OACN,OAEJ,MAAMoX,EAAkB3Q,KAAKkP,sBAAsB,SAAS3V,OAAS,EAC/DqX,EAAkB5Q,KAAKkP,sBAAsB,UAAU3V,OAAS,EAChEsX,EAAkB7Q,KAAKkP,sBAAsB,UAAU3V,OAAS,EAMtE,GAJIoX,GACA3Q,KAAK2O,gBAAgB,QAASwB,GAG9BS,GAAmBC,EACnB,IAAK,IAAIxI,KAAQ8H,EACGtR,MAAZwJ,EAAKkI,KAAgC1R,MAAZwJ,EAAKmI,IAC1BI,GACA5Q,KAAK2O,gBAAgB,SAAUtG,GAG/BwI,GACA7Q,KAAK2O,gBAAgB,SAAUtG,GAYnDnO,WACI,OAAO8F,KAAKgQ,WAAW9V,KAG3B2F,IAAI9E,GACA,OAAOiF,KAAKgQ,WAAWzV,IAAIQ,GAG/B8E,IAAI9E,GACA,OAAOiF,KAAKgQ,WAAWvB,IAAI1T,GAG/B8E,OACI,OAAOG,KAAKgQ,WAAWc,OAG3BjR,SACI,OAAOG,KAAKgQ,WAAWxD,SAG3B3M,UACI,OAAOG,KAAKgQ,WAAWlS,UAQ3B+B,IAAI9E,EAAKC,GACL,IAAIwV,OAAM3R,EAMV,OALImB,KAAKgQ,WAAWzV,IAAIQ,KACpByV,EAAMxQ,KAAKgQ,WAAWvB,IAAI1T,IAE9BiF,KAAKgQ,WAAWjS,IAAIhD,EAAKC,GACzBgF,KAAK+Q,cAAc,CAAC,CAAChW,IAAKA,EAAKwV,IAAIvV,EAAOwV,IAAKA,KACxCxQ,KAGXH,OAAO9E,GACH,IAAI8H,GAAS,EACT2N,OAAM3R,EAOV,OANImB,KAAKgQ,WAAWzV,IAAIQ,KACpByV,EAAMxQ,KAAKgQ,WAAWvB,IAAI1T,GAC1BiF,KAAKgQ,WAAWgB,OAAOjW,GACvB8H,GAAS,GAEb7C,KAAK+Q,cAAc,CAAC,CAAChW,IAAKA,EAAKwV,SAAI1R,EAAW2R,IAAKA,KAC5C3N,EAGXhD,QAEI,MAAMsQ,EAAQ,IAAInQ,KAAKgQ,WAAWlS,WAAWL,IAAI,EAAE1C,EAAK8C,MAC7C,CAAC9C,IAAKA,EAAKwV,SAAK1R,EAAW2R,IAAK3S,KAG3CmC,KAAKgQ,WAAWiB,QAEhBjR,KAAK+Q,cAAcZ,IAK3BJ,GAASzB,kBAAkBwB,GAAcN,WC7LzC,MAAM0B,WAAsBpB,GAExBjQ,cAAcyQ,EAAOG,GACjB,OAAOnP,EAASsB,OAAO0N,EAAM7E,SAAUgF,EAAMhF,UAGjD5L,eAAeyQ,EAAOG,GAClB,OAAOnP,EAAS6P,QAAQb,EAAM7E,SAAUgF,EAAMhF,UAIlD5L,UAAUrE,EAAQ,IACd,IAAIE,EAAQF,EAAQE,OAASqE,MAAMmQ,UAAU1U,GAC7C,MAAa,OAATE,EACOwV,GAActO,OACL,QAATlH,EACAwV,GAAcC,QAED,mBAATzV,EAIRA,OAJH,EAQRmE,KAAMrE,EAAU,IACZ,IAAI4V,EAAOpR,KAAKqR,WAAWrR,KAAKwM,SAAUhR,GAE1C,OAAQ8B,MAAMC,QAAQ6T,GAASA,EAAO,IAAIA,ICzBlD,MAAME,GAEFzR,YAAa0R,EAAc3E,GACvB5M,KAAKwR,SAAM3S,EACXmB,KAAKyR,GAAKF,EACVvR,KAAK4M,SAAWA,EAGpB/M,QACI,OAAmBhB,MAAZmB,KAAKwR,IAMhB3R,WAAW6R,EAAWC,GAClB,GAAgB9S,MAAZmB,KAAKwR,IACL,MAAM,IAAIhU,MAAM,sBAEpB,IAAIoU,EAAM5R,KAAKyR,GAAGI,MAAMD,MACpBE,EAAuC,IAA/BlY,KAAK+F,IAAI+R,EAAYE,EAAK,GACtC5R,KAAKwR,IAAMO,WAAW/R,KAAKgS,UAAUC,KAAKjS,MAAO8R,EAAOJ,EAAWC,GAMvE9R,UAAU6R,EAAWC,GACjB,GAAgB9S,MAAZmB,KAAKwR,IAAkB,CACvBxR,KAAKwR,SAAM3S,EAEX,IAAI+S,EAAM5R,KAAKyR,GAAGI,MAAMD,MACpBA,EAAMF,EAEN1R,KAAK+R,WAAWL,EAAWC,GAG3B3R,KAAK4M,SAASgF,EAAKD,IAQ/B9R,QACoBhB,MAAZmB,KAAKwR,MACLU,aAAalS,KAAKwR,KAClBxR,KAAKwR,SAAM3S,ICvBf,gBAAiB1B,QAAW,IAC5BA,OAAOgV,YAAc,GACrBhV,OAAOgV,YAAYC,QAAS,IAAIC,MAAOC,WAEvC,QAASnV,OAAOgV,aAAgB,IAClChV,OAAOgV,YAAYP,IAAM,WACvB,OAAO,IAAIS,MAAOC,UAAYnV,OAAOgV,YAAYC,SAMzD,MAAMG,GACC,WAAa,OAAOJ,YAAYP,MAAM,KAG7C,SAAS/M,GAAgBC,EAAQ0N,QAClB3T,IAAV2T,IAAqBA,EAAQD,MACjC,IAAIxN,EAAWyN,EAAQ1N,EAAOF,UAC9B,MAAO,CACNL,SAAWO,EAAOP,SAAWO,EAAOL,SAASM,EAC7CN,SAAWK,EAAOL,SAClBG,UAAY4N,GAId,MAAMC,GAEL5S,YAAarE,GACZ,IAAIoW,EAAMW,KACV/W,EAAUA,GAAW,GACrBwE,KAAK0S,QAAW,CAACnO,SAAUqN,EAAKnN,SAAU,EAAKG,UAAWgN,GAE1D7B,GAAS7B,iBAAiBlO,MAC1BA,KAAK0O,eAAe,SAAU,CAAC1F,MAAK,IAEpChJ,KAAK2S,OAAOnX,GASbqE,OAAOrE,GACNA,EAAUA,GAAW,GACrB,IAAIoW,EAAMW,KACNK,EAAY5S,KAAK6S,MAAMjB,QACN/S,IAAjBrD,EAAQsX,WAAuCjU,IAAjBrD,EAAQuX,OAG1C/S,KAAK0S,QAAU,CACdnO,cAA6B1F,IAAjBrD,EAAQsX,KAAsBlB,EAAMpW,EAAQsX,KAAOF,EAAUrO,SACzEE,cAA6B5F,IAAjBrD,EAAQuX,KAAsBvX,EAAQuX,KAAOH,EAAUnO,SACnEG,UAAYgO,EAAUhO,WAEvB5E,KAAK2O,gBAAgB,WAQtB9O,MACC,OAAOgF,GAAgB7E,KAAK0S,QAASH,MAAmBhO,SAQzD1E,MAAM+R,GACL,OAAO/M,GAAgB7E,KAAK0S,QAASd,IAIvC7B,GAASzB,kBAAkBmE,GAAYjD,WCxGvC,MAAMwD,GAELnT,YAAa+M,EAAUpR,GACtBA,EAAUA,GAAW,GAErBwE,KAAKiT,OAAS,IAAIR,GAAY,CAACK,KAAK,IACpC9S,KAAKkT,OAAS,EAAEvU,EAAAA,EAAUA,EAAAA,GAC1BqB,KAAK0S,QACL1S,KAAKmT,UAAYvG,EAEjBpR,EAAQoJ,UAAYpJ,EAAQoJ,WAAa5E,KAAKiT,OAAOrB,MACrD5R,KAAKoT,gBAAgB5X,GAItBqW,YAAa,OAAO7R,KAAKiT,OACzBxN,YAAa,OAAOzF,KAAKkT,OACzBpO,aAAc,OAAO9E,KAAK0S,QAE1B7S,UAAW,OAAO,EAGlBA,gBAAgB8R,GAEf,IACCpN,SAAUD,EACVG,SAAUD,EACVE,aAAc7I,EACd+I,UAAWD,EACXc,MAAOA,KACJ4N,GACA1B,EAGA7N,EAAI,EAAG4B,EAAI,EAAGpL,EAAI,EACtB,GAAoBuE,MAAhBmB,KAAK0S,QAAsB,CAC9B,IAAIE,EAAY/N,EAAgB7E,KAAK0S,QAAS/N,GAC9CiO,EAAYjN,EAAWiN,EAAW5S,KAAKkT,QACvCpP,EAAI8O,EAAUrO,SACdmB,EAAIkN,EAAUnO,SACdnK,EAAIsY,EAAUlO,aAIf,IAAII,EAAS,CACZP,SAAmB1F,MAAPyF,EAAoBA,EAAMR,EACtCW,SAAmB5F,MAAP2F,EAAoBA,EAAMkB,EACtChB,aAAuB7F,MAAPhD,EAAoBA,EAAMvB,EAC1CsK,UAAYD,GAIb,GAAa9F,MAAT4G,EAAoB,CACvB,IAAK7D,EAAKE,GAAQ2D,EACd7D,EAAME,IACLF,GAAO5B,KAAKkT,OAAO,IAAMpR,GAAQ9B,KAAKkT,OAAO,KAChDlT,KAAKkT,OAAS,CAACtR,EAAKE,KAWvB,OALAgD,EAASa,EAAWb,EAAQ9E,KAAKkT,QAEjClT,KAAKsT,YAActT,KAAK0S,QAExB1S,KAAK0S,QAAU5N,EACR,CAACW,MAAAA,KAAUX,KAAWuO,GAI9BxT,OAAO8R,GAEN,OADAA,EAAM3R,KAAKoT,gBAAgBzB,GACpB3R,KAAKmT,UAAUxB,GAGvB9R,QACCG,KAAKmT,eAAYtU,GC7DnB,MAAM0U,GAEL1T,YAAY2T,EAAU5G,EAAUpR,IAzBjC,SAA6BL,GAC5B,IAAIsY,EAAW,CAAC,KAAM,OAAQ,SAAU,QAAS,UACjD,IAAK,IAAIC,KAAQD,EAChB,KAAMC,KAAQvY,GACb,MAAM,IAAIqC,MAAM,kBAAkBrC,sBAAwBuY,KAsB3DC,CAAoBH,GAGpBxT,KAAK4T,UAAYJ,EACjBxT,KAAKmT,UAAYvG,EACjB5M,KAAKkT,OACLlT,KAAK0S,QACL1S,KAAK6T,QAAS,EAKd7T,KAAK8T,gBAML9T,KAAKiT,OAILjT,KAAK4T,UAAUzE,GAAG,eAAgBnP,KAAK+T,gBAAgB9B,KAAKjS,OAC5DA,KAAK4T,UAAUzE,GAAG,aAAcnP,KAAKgU,cAAc/B,KAAKjS,OAIpDA,KAAK4T,UAAUd,KAQpBjT,UAAW,OAAOG,KAAK6T,OAGvBhC,YAAa,OAAO7R,KAAKiT,OACzBxN,YAAa,OAAOzF,KAAKkT,OAczBpO,aAEC,IAAImP,EAAWjU,KAAK0S,QAAQ9N,UAAY5E,KAAK4T,UAAUd,KACvD,MAAO,CACNvO,SAAWvE,KAAK0S,QAAQnO,SACxBE,SAAWzE,KAAK0S,QAAQjO,SACxBC,aAAe1E,KAAK0S,QAAQhO,aAC5BE,UAAYqP,GAMdT,eAAgB,OAAOxT,KAAK4T,UAG5B/T,gBACC,GAAKG,KAAKiT,OAGH,CACNjT,KAAK8T,gBAAgBnB,OAAO,CAACG,KAAM9S,KAAK4T,UAAUd,OAGlD,IAAIoB,EAAelU,KAAK8T,gBAAgBlC,MAAQ5R,KAAKiT,OAAOrB,MAExDuC,EAAanU,KAAK4T,UAAUd,KAAOoB,EACvClU,KAAKiT,OAAON,OAAO,CAACG,KAAMqB,SAT1BnU,KAAK8T,gBAAkB,IAAIrB,GAAY,CAACK,KAAM9S,KAAK4T,UAAUd,OAC7D9S,KAAKiT,OAAS,IAAIR,GAAY,CAACK,KAAK,IAUrC,IAAK9S,KAAKoU,WAAsCvV,MAAzBmB,KAAK4T,UAAU9O,OAAqB,CAE1D9E,KAAK6T,QAAS,EACd7T,KAAKkT,OAASlT,KAAK4T,UAAUnO,MAC7BzF,KAAK0S,QAAU1S,KAAK4T,UAAU9O,OAC9B,IAAIsI,EAAO,CACV3H,MAAOzF,KAAKyF,SACTzF,KAAK8E,OACRuP,MAAM,GAEPrU,KAAKmT,UAAU/F,IAIjBvN,kBACC,GAAIG,KAAKiT,OAAQ,CAEXjT,KAAK6T,SACT7T,KAAK6T,QAAS,GAEV7T,KAAKkT,SACTlT,KAAKkT,OAASlT,KAAK4T,UAAUnO,OAE9BzF,KAAK0S,QAAU1S,KAAK4T,UAAU9O,OAC9B,IAAIsI,EAAO,CACV3H,MAAOzF,KAAKyF,SACTzF,KAAK8E,QAET9E,KAAKmT,UAAU/F,IAWjBvN,OAAO8R,GACN,IAAI7M,EAAS,CACZP,SAAUoN,EAAIpN,SACdE,SAAUkN,EAAIlN,SACdC,aAAciN,EAAIjN,aAClBE,UAAW+M,EAAI/M,WAIhBE,EAAOF,UAAYE,EAAOF,UAAY5E,KAAK4T,UAAUd,KAC3C9S,KAAK4T,UAAUU,OAAOxP,GAEhC,OAAO,GC9IT,SAASa,GAAW0O,EAAMzC,EAAK9M,EAAQW,GACtC,GAAI4O,EACH,OAAOE,EAAuBzP,EAAQW,GAGtC,OAAO8O,EADUC,EAA4B1P,EAAQ8M,GACXnM,GAwC5C,MAAMgP,GAEL5U,YAAa6U,EAAWlZ,GAKNqD,MAAb6V,GAAqC7V,MAAXrD,IACvBkZ,aAAqBD,IA/D9B,SAA0BtZ,GACzB,IAAIsY,EAAW,CAAC,KAAM,OAAQ,SAAU,QAAS,UACjD,IAAK,IAAIC,KAAQD,EAChB,KAAMC,KAAQvY,GACb,OAAO,EAGT,OAAO,EAwDwCwZ,CAAiBD,KAG7DlZ,EAAUkZ,EACVA,OAAY7V,EACRrD,EAAQgY,SACXkB,EAAYlZ,EAAQgY,SACVhY,EAAQkZ,YAClBA,EAAYlZ,EAAQkZ,aAMvBlZ,EAAUA,GAAW,GACrBwE,KAAK4U,UAAYpZ,EAIMqD,MAAnBrD,EAAQqZ,UACXrZ,EAAQqZ,SAAU,GAInB7U,KAAK8U,aACL9U,KAAK+U,SACL/U,KAAKgV,QAAU,EAAErW,EAAAA,EAAUA,EAAAA,GAG3BqB,KAAKiV,UAAY,IAAI3D,GAAQtR,KAAMA,KAAKkV,gBAAgBjD,KAAKjS,OAG7DA,KAAKmV,WAAQtW,EAGbmB,KAAKoV,YACLpV,KAAKqV,MAGLrV,KAAKsV,gBAAkB,IAAIxa,IAG3BkF,KAAKuV,QAAU,IAAIxF,GAASN,aAG5BM,GAAS7B,iBAAiBlO,MAC1BA,KAAK0O,eAAe,YAAa,CAAC1F,MAAK,IACvChJ,KAAK0O,eAAe,SAAU,CAAC1F,MAAK,IACpChJ,KAAK0O,eAAe,cAAe,CAAC1F,MAAK,IACzChJ,KAAK0O,eAAe,aAAc,CAAC1F,MAAK,IAGxChJ,KAAKwV,gBAAgBd,EAAWlZ,GAejCqE,sBAAsBI,GACrB,GAAID,KAAKuV,QAAQva,MAAO,CACvB,GAAY,aAARiF,EAAqB,CAMxB,MAAO,CALI,IACPD,KAAK+U,SACRtP,MAAOzF,KAAKgV,QACZX,MAAK,IAGA,GAAY,cAARpU,EACV,MAAO,MAACpB,GACF,GAAY,UAARoB,EACV,MAAO,CAACD,KAAK+U,UACP,GAAY,eAAR9U,EACV,MAAO,CAACD,KAAKgV,UAahBnV,UAAW,OAAOG,KAAKuV,QAAQva,MAG5Bya,YAAa,OAAO1F,GAASL,YAAY1P,KAAKuV,SAG9C9P,YAEC,MAAO,CAACzF,KAAKgV,QAAQ,GAAIhV,KAAKgV,QAAQ,IAIvClQ,aAEF,MAAO,CACNP,SAAWvE,KAAK+U,SAASxQ,SACzBE,SAAWzE,KAAK+U,SAAStQ,SACzBC,aAAe1E,KAAK+U,SAASrQ,aAC7BE,UAAY5E,KAAK+U,SAASnQ,WAKzBiE,iBAAkB,OAAO7I,KAAK8U,aAG9BxM,YACC,OAAO,IAAIoN,EAAwB1V,KAAK8U,aAAc9U,KAAK+U,UAI/DlD,YAAa,OAAO7R,KAAKoV,YAAYvD,MAErC8D,cAAe,OAAO,EAUtB9V,QACC,GAA0B,GAAtBG,KAAKuV,QAAQva,MAChB,MAAM,IAAIwC,MAAM,uCAGjB,IAAIsH,EAAS0P,EAA4BxU,KAAK+U,SAAU/U,KAAK6R,MAAMD,OAEnE,OAAI5R,KAAKiV,UAAUW,UACd9Q,EAAOP,SAAWvE,KAAKgV,QAAQ,IAAMhV,KAAKgV,QAAQ,GAAKlQ,EAAOP,WAEjEvE,KAAK6V,UAAU,IAAI7V,KAAK8V,iBAAiBhR,KAGnC0P,EAA4BxU,KAAK+U,SAAU/U,KAAK6R,MAAMD,QAEvD9M,EAIRR,UAAW,OAAOtE,KAAK6S,QAAQtO,SAC/BC,UAAW,OAAOxE,KAAK6S,QAAQpO,SAC/B5I,UAAW,OAAOmE,KAAK6S,QAAQnO,aAU/B7E,SAAS8R,GACR,OAAI3R,KAAKoV,uBAAuBX,GACxBzU,KAAKoV,YAAYW,SAASpE,GAG1B3R,KAAKoV,YAAYd,OAAO3C,GAKjC9R,OAAO8R,GAEN,IAAIqE,EAAmBnX,MAAb8S,EAAIlM,MAId,GAHAuQ,EAAKA,GAAuBnX,MAAhB8S,EAAIpN,SAChByR,EAAKA,GAAuBnX,MAAhB8S,EAAIlN,SAChBuR,EAAKA,GAA2BnX,MAApB8S,EAAIjN,cACXsR,EACJ,OAAOnZ,QAAQC,QAAQ6U,GAExBA,EAAIsE,OA7PGrc,KAAKC,MAHI,IAGED,KAAKE,UA8PF+E,MAAjB8S,EAAI/M,YACP+M,EAAI/M,UAAY5E,KAAK6R,MAAMD,OAE5B,IAAI5D,EAAQ,IAAI+B,GAAST,cACzBtP,KAAKsV,gBAAgBvX,IAAI4T,EAAIsE,OAAQjI,GACrC,IAAIkI,EAAUnG,GAASL,YAAY1B,EAAOnQ,GAAegB,MAAPhB,GAElD,OADAmC,KAAK+V,SAASpE,GACPuE,EAmBRrW,cAAc8R,GACb,IAAIlM,MACHA,EAAK4O,KACLA,GAAO,KACJhB,GACA1B,EAES9S,MAAT4G,IACHA,EAAQ,CAACA,EAAM,GAAIA,EAAM,KAG1B,IAAI0Q,EAAO,CACV1Q,MAAAA,EACA4O,KAAAA,KACGhB,GAGJ,GADA8C,EAAOnW,KAAKoW,cAAcD,GACdtX,MAARsX,EACH,OAAOnW,KAAK6V,UAAUM,GAQxBtW,gBAAgB+R,EAAK9M,GACpB9E,KAAK6V,UAAU,IAAI7V,KAAK8V,iBAAiBhR,KAO1CjF,UAAU8R,GACT,IAyBI7M,GAzBAW,MACHA,EAAKlB,SACLA,EAAQE,SACRA,EAAQC,aACRA,EAAYE,UACZA,EAASyP,KACTA,GAAK,KACFhB,GACA1B,EAIA0E,GAAe,EACnB,GAAaxX,MAAT4G,EAAoB,CACvB,IAAK7D,EAAKE,GAAQ2D,EACd7D,EAAME,IACLF,GAAO5B,KAAKgV,QAAQ,IAAMlT,GAAQ9B,KAAKgV,QAAQ,KAClDhV,KAAKgV,QAAU,CAACpT,EAAKE,GACrB2D,EAAQ,CAAC7D,EAAKE,GACduU,GAAe,IAOlB,IAgCIF,EAhCAG,GAAgB,EAChB1E,EAAM5R,KAAK6R,MAAMD,MAkDrB,GA/CgB/S,MAAZ0F,GAEHO,EAAS,CAACP,SAAAA,EAAUE,SAAAA,EAAUC,aAAAA,EAAcE,UAAAA,GAE5CE,EAASa,GAAW0O,EAAMzC,EAAK9M,EAAQ9E,KAAKgV,UAIxCqB,IACHvR,EAASa,IAAW,EAAOiM,EAAK5R,KAAK+U,SAAU/U,KAAKgV,UAIxCnW,MAAViG,IAGFwR,EADoBzX,MAAjBmB,KAAK+U,WACSwB,EAAyBzR,EAAQ9E,KAAK+U,UAIpDuB,IAEHtW,KAAK8U,aAAe9U,KAAK+U,SAEzB/U,KAAK+U,SAAWjQ,IAMjBqR,EADGE,GAAgBC,EACZ,CAAC7Q,MAAAA,KAAUX,EAAQuP,KAAAA,KAAShB,GACzBgD,EACH,CAAC5Q,MAAAA,EAAO4O,KAAAA,KAAShB,GACdiD,EACH,IAAIxR,EAAQuP,KAAAA,KAAShB,GAErB,CAACgB,KAAAA,KAAShB,GAIlBrT,KAAKuV,QAAQva,OAAQ,EACrBgF,KAAKwW,iBAAiBL,EAAME,EAAcC,GAEtCtW,KAAK4U,UAAUC,SAClB7U,KAAKyW,iBAGa5X,MAAfsX,EAAKF,OAAqB,CAC7B,IAAIjI,EAAQhO,KAAKsV,gBAAgB7G,IAAI0H,EAAKF,QACtCjI,IACHhO,KAAKsV,gBAAgBtE,OAAOmF,EAAKF,eAC1BE,EAAKF,OACZjI,EAAMhT,MAAQmb,GAMhB,IAAK,IAAInI,KAAShO,KAAKsV,gBAAgB9I,SACtCwB,EAAMhT,MAAQ,GAGf,OADAgF,KAAK0W,aAAaP,GACXA,EAQRtW,iBAAiB8R,EAAK0E,EAAcC,GACnC,IAAI7Q,MACHA,EAAKlB,SACLA,EAAQE,SACRA,EAAQC,aACRA,EAAYE,UACZA,GACG+M,EAIJ,GAFA3R,KAAK2O,gBAAgB,YAAagD,GAE9B2E,EAAe,CAClB,IAAIxR,EAAS,CAACP,SAAAA,EAAUE,SAAAA,EAAUC,aAAAA,EAAcE,UAAAA,GAChD5E,KAAK2O,gBAAgB,SAAU7J,GAE5BuR,GACHrW,KAAK2O,gBAAgB,cAAelJ,GAGrCzF,KAAK2O,gBAAgB,cACrB,IAAIgI,EAASC,EAAqB5W,KAAK+U,UACvC,GAAI4B,QAAyB9X,IAAfmB,KAAKmV,MAAqB,CACvC,IAAInI,EAAOhN,KACXA,KAAKmV,MAAQ0B,aAAY,WACxB7J,EAAK2B,gBAAgB,gBACnB,UACQgI,QAAyB9X,IAAfmB,KAAKmV,QAC1BjD,aAAalS,KAAKmV,OAClBnV,KAAKmV,WAAQtW,GAcfgB,iBAAiBiF,GAAS,OAAOA,EAKjCjF,cAAc8R,GAAM,OAAOA,EAK3B9R,aAAa8R,IAgBb9R,eAAeiF,EAAQW,GACtBzF,KAAKiV,UAAUhE,QACf,IAAI6F,EAAiB9W,KAAK+W,yBAAyBjS,EAAQW,GACrC5G,MAAlBiY,GAGJ9W,KAAKiV,UAAUlD,WAAW+E,EAAelS,UAAWkS,GAWrDjX,yBAAyBiF,EAAQW,GAChCX,EAASA,GAAU9E,KAAK+U,SACxBtP,EAAQA,GAASzF,KAAKgV,QACtB,IAAIpD,EAAM5R,KAAK6R,MAAMD,MACjBoF,EAAaxC,EAA4B1P,EAAQ8M,IAChDtJ,EAAOhE,GAAO2S,EAA2BD,EAAYvR,GAC1D,GAAa5G,MAATyJ,EACH,OAGD,IAAIwO,EAAiBtC,EAA4B1P,EAAQ8M,EAAMtJ,GAG/D,OADAwO,EAAevS,SAAWD,EACnBwS,EAeRjX,oBAEyBhB,MAApBmB,KAAKoV,cACJpV,KAAKoV,uBAAuBX,IAC/BzU,KAAKoV,YAAY/F,IAAIrP,KAAKqV,OAC1BrV,KAAKqV,WAAQxW,EACbmB,KAAKoV,iBAAcvW,IAGnBmB,KAAKoV,YAAYvN,QACjB7H,KAAKoV,iBAAcvW,IAKtBgB,gBAAgB6U,EAAWlZ,GAE1B,IAAIoR,EAAW5M,KAAKkX,cAAcjF,KAAKjS,MACvC,GAAI0U,aAAqBD,GAExBzU,KAAKoV,YAAcV,EACnB1U,KAAKqV,MAAQrV,KAAKoV,YAAYjG,GAAG,YAAavC,QAY9C,GAPC5M,KAAKoV,YAFWvW,MAAb6V,EAEgB,IAAI1B,GAAiBpG,EAAUpR,GAG/B,IAAI+X,GAAiBmB,EAAW9H,EAAUpR,GAI1DwE,KAAKoV,YAAYhB,UAAW,CAO/BxH,EANU,CACTnH,MAAOzF,KAAKoV,YAAY3P,SACrBzF,KAAKoV,YAAYtQ,OACpBuP,MAAM,KAQVxU,kBAEC,OAAOG,KAAKoV,YAGbV,gBAEC,IAAIA,EAAY1U,KAAKmX,kBACrB,GAAIzC,aAAqBD,GACxB,OAAOC,EACD,KAAIA,aAAqB1B,IAAzB,CAEA,GAAI0B,aAAqBnB,GAC/B,OAAOmB,EAAUd,UAEjB,MAAM,IAAIpW,MAAM,sBAIlBkX,cAAcA,GACb1U,KAAKoX,oBACLpX,KAAKwV,gBAAgBd,IAKvB3E,GAASzB,kBAAkBmG,GAAajF,WC9kBxC,SAAS6H,GAAUlR,EAAGV,GACrB,IAAIqN,EAAOrN,EAAM,GACblM,EAASkM,EAAM,GAAKA,EAAM,GAC9B,OAAOqN,IAAW3M,EAAE2M,IAPLlV,EAOWrE,GANRqE,GAAKA,EADxB,IAAgBA,ECChB,SAASgI,KACR,IAAI0R,EAASlS,EAAWC,KACpB6N,EAAS,KAiCb,MAAO,CAACzE,IAzBE,WAAa,OAAO6I,GAyBZvZ,IAxBR,SAAUwZ,EAAWC,GAE9B,IAAIC,GAAW,EACXC,GAAU,EAkBd,OAfIH,IAAcD,GAAUE,IAActE,IACzCuE,GAAW,GAGRF,IAAcD,IACjBI,EAnB4B,SAAUC,EAAWJ,GAElD,OAAII,IAAcvS,EAAWG,cAAgBgS,IAAcnS,EAAWE,gBAClEqS,IAAcvS,EAAWE,aAAeiS,IAAcnS,EAAWG,eACjEoS,IAAcvS,EAAWC,MAelBuS,CAAwBN,EAAQC,IAGvCC,IAActE,IACjBA,EAASsE,GAGND,IAAcD,IACjBA,EAASC,GAEH,CAACG,QAAQA,EAASD,SAASA,KCrBpC,MAAMI,GAEFhY,YAAa0R,EAAc/V,EAAU,IACjCwE,KAAK8X,IAAMvG,EAEXvR,KAAK+X,KAEL,IAAIC,OAACA,EAAMC,UAAEA,GAAazc,EAC1BwE,KAAKkY,QAVU,IAWDrZ,MAAVmZ,EACAhY,KAAKkY,QAAUF,EACKnZ,MAAboZ,IACPjY,KAAKkY,QAAU,EAAID,GAGvBlI,GAAS7B,iBAAiBlO,MAE1BA,KAAK0O,eAAe,SAAU,CAAC1F,MAAK,IAEpChJ,KAAKmY,KAAOnY,KAAK8X,IAAI3I,GAAG,SAAUnP,KAAKoY,UAAUnG,KAAKjS,OAM1DH,sBAAsBI,GAClB,GAAY,UAARA,GAAoBD,KAAK8X,IAAI1D,UAC7B,MAAO,CAACpU,KAAK8X,IAAIxT,KAOzBzE,YACI,IAAI6F,EAAI1F,KAAK8X,IAAIjF,QACb8D,EAAwB,GAAdjR,EAAEjB,UAAqC,GAAlBiB,EAAEhB,aAEjCiS,GAAuB9X,MAAbmB,KAAK+X,OACf/X,KAAK+X,KAAOlB,YAAY,WACpB7W,KAAKqY,aACPpG,KAAKjS,MAAOA,KAAKkY,UAElBvB,GAAuB9X,MAAbmB,KAAK+X,OAChB7F,aAAalS,KAAK+X,MAClB/X,KAAK+X,UAAOlZ,GAEhBmB,KAAKqY,UAAU3S,EAAEnB,UAMrB1E,UAAU0E,GACNA,EAAwB1F,MAAZ0F,EAAyBA,EAAWvE,KAAK8X,IAAIxT,IACzDtE,KAAK2O,gBAAgB,SAAUpK,GAMnC1E,QAEQG,KAAK+X,OACL7F,aAAalS,KAAK+X,MAClB/X,KAAK+X,UAAOlZ,GAGhBmB,KAAK8X,IAAIzI,IAAIrP,KAAKmY,OCrF1B,SAASG,GAAYta,EAAGua,EAAQnG,GAC5B,OAbJ,SAAgBpU,EAAGJ,GAGf,MAAO,CAFChE,KAAKC,MAAMmE,EAAEJ,GAVzB,SAAaI,EAAEJ,GACX,OAASI,EAAIJ,EAAKA,GAAKA,EAUf4a,CAAIxa,EAAGJ,IAWR6a,CAAOza,EAAEoU,EAAQmG,GAG5B,SAASG,GAAY5U,EAAGyU,EAAQnG,GAC5B,IAAKuG,EAAGza,GAAK4F,EACb,OAAOsO,EAASuG,EAAEJ,EAASra,EDmF/B6R,GAASzB,kBAAkBuJ,GAAcrI,WE5FzC,MAAMtP,GAAWoB,EAASpB,SAuC1B,SAAS0Y,GAAmBvc,EAAKwc,GAE7B,GAAkB,GAAdxc,EAAI9C,OAIJ,OAHI8C,EAAI,GAAGtB,KAAO8d,EAAI9d,KAClBsB,EAAIF,QAEa,GAAdE,EAAI9C,OAEV,GAAkB,GAAd8C,EAAI9C,OACT,OAAO,EACJ,CACH,IAAIiS,EAAMnP,EAAIyc,WAAU,SAAUC,GAC9B,OAAOA,EAAKhe,KAAO8d,EAAI9d,OAK3B,OAHIyQ,GAAO,GACPnP,EAAI0O,OAAOS,EAAK,GAEC,GAAdnP,EAAI9C,QAkCnB,MAAMyf,GAAe,CAAC,EAAG,GAAI,IAAK,IAAM,IAAO,IAAQra,EAAAA,GACvD,IAAIsa,GAAiB,SAAU1f,GAC3B,IAAK,IAAIG,EAAE,EAAGA,EAAEsf,GAAazf,OAAQG,IACjC,GAAIH,GAAUyf,GAAatf,GACvB,OAAOsf,GAAatf,IAYhC,MAAMwf,GAAQzc,OAAO0D,OAAO,CACxBqI,KAAM,EACN2Q,OAAQ,EACRC,QAAS,EACTC,OAAQ,IA8BZ,SAASC,GAAUhJ,EAAOG,EAAOlR,GAC7B,IAAIga,EAAgBC,EAAYC,EAE5BC,EAA8B7a,MAATyR,GAAwCzR,MAAlByR,EAAM7E,SACjDkO,EAA8B9a,MAAT4R,GAAwC5R,MAAlB4R,EAAMhF,SAChDiO,GAAuBC,EAEhBD,EAEAC,GAIRF,EAAKnJ,EAAM7E,SAASlM,OAAOkR,EAAMhF,UACjC8N,EAAiB,EAAOL,GAAM1Q,KAAO0Q,GAAME,SAJ3CG,EAAiBL,GAAMG,OAFvBE,EAAiBL,GAAMC,OAFvBI,EAAiBL,GAAM1Q,KAW3B,IAAIoR,EAA0B/a,MAATyR,GAAoCzR,MAAdyR,EAAMuJ,KAC7CC,EAA0Bjb,MAAT4R,GAAoC5R,MAAd4R,EAAMoJ,KAgBjD,OAfKD,GAAmBE,EAEZF,EAEAE,GAKJL,EADAla,EACKA,EAAO+Q,EAAMuJ,KAAMpJ,EAAMoJ,MAEzBE,EAAoBzJ,EAAMuJ,KAAMpJ,EAAMoJ,MAE/CL,EAAa,EAAON,GAAM1Q,KAAO0Q,GAAME,SARvCI,EAAaN,GAAMG,OAFnBG,EAAaN,GAAMC,OAFnBK,EAAaN,GAAM1Q,KAchB,CAACiD,SAAU8N,EAAgBM,KAAML,GAI5C,SAASQ,GAAW1J,EAAOG,GACvB,IAAInI,EAAQgR,GAAUhJ,EAAOG,GAC7B,OAAOnI,EAAMmD,UAAYyN,GAAM1Q,MAAQF,EAAMuR,MAAQX,GAAM1Q,KAgB/D,MAAMyR,GAEFpa,YAAaqa,EAAS1e,EAAQ,IAI1BwE,KAAKma,IAAMD,EAGXla,KAAKoa,SAAW3d,OAAO4d,OAAO,GADf,CAACC,YAAW,GACiB9e,GAE5CwE,KAAKua,MAELva,KAAKwa,MAELxa,KAAKya,WAELza,KAAK0a,SAGT7a,SACIG,KAAKua,MAAQ,GAEbva,KAAKwa,MAAQ,IAAIzK,GAASN,aAC1BzP,KAAKya,WAAa1K,GAASL,YAAY1P,KAAKwa,OAAOvN,KAAK,IAC7CjN,KAAK2a,QAAQ1I,KAAKjS,KAAlBA,IAIfH,MAAM+a,GAEF,IAAIhd,EAAIoC,KAAKua,MAAMhhB,OACfshB,EAAiB,GAALjd,EACZI,EAAI4c,EAASrhB,OACjByG,KAAKua,MAAMhhB,QAAUyE,EACrB,IAAK,IAAItE,EAAE,EAAGA,EAAEsE,EAAGtE,IACfsG,KAAKua,MAAM3c,KAAOgd,EAASlhB,GAE3BsG,KAAKoa,SAASE,YAAcO,GAAa7c,EAAI,IAG7CgC,KAAKwa,MAAMxf,OAAQ,GAI3B6E,UACI,IAAIgD,EAAS,GAQb,OANI7C,KAAKua,MAAMhhB,OAAS,IACpBsJ,EAAS7C,KAAKma,IAAI7F,OAAOtU,KAAKua,MAAOva,KAAKoa,WAG9Cpa,KAAK0a,SAEE7X,EAWXhD,OAAO9E,EAAK0Q,EAAUoO,GAClB,IAAIiB,EAAU,CAAC/f,IAAIA,GAMnB,OALA+f,EAAQrP,SAAWA,EACfsP,UAAUxhB,OAAS,IACnBuhB,EAAQjB,KAAOA,GAEnB7Z,KAAKgb,MAAM,CAACF,IACL9a,KAIXH,UAAU9E,GAEN,OADAiF,KAAKgb,MAAM,CAAC,CAACjgB,IAAIA,KACViF,KAIXH,OAAO+a,GACH5a,KAAKgb,MAAMJ,GAIf/a,QAEI,OADAG,KAAKua,MAAQ,GACNva,KAIXH,SACI,GAAIG,KAAKoa,SAASE,WACd,MAAM,IAAI9c,MAAM,kDAIpBwC,KAAKwa,MAAMxf,OAAQ,GAgB3B,MAAMigB,WAAgB/J,GAElBrR,aAAeqZ,GACfrZ,iBAAmByZ,GACnBzZ,kBAAoBma,GAEpBna,YAAYrE,GACRuE,MAAMvE,GAENwE,KAAKkb,KAAO,IAAIpgB,IAChBkF,KAAKmb,SAAW,IAAIlB,GAAcja,MAMlCA,KAAKob,YAAc,IAAItgB,IACvB,IAAK,IAAIpB,EAAE,EAAGA,EAAEsf,GAAazf,OAAQG,IAAK,CACtC,IAAI2hB,EAAcrC,GAAatf,GAC/BsG,KAAKob,YAAYrd,IAAIsd,EAAa,IAAIC,GAAUD,IAIpDrb,KAAKub,kBAAoB,GAM7BvL,iBACI,OAAOhQ,KAAKkb,KAOhBrb,aAAc2b,GACV,IAAIC,EAAS,CACTD,QAASA,GAGb,OADAxb,KAAKub,kBAAkBtY,KAAKwY,GACrBA,EAIX5b,aAAc4b,GACV,IAAInR,EAAQtK,KAAKub,kBAAkBG,QAAQD,GACvCnR,GAAS,GACTtK,KAAKub,kBAAkBxQ,OAAOT,EAAO,GAK7CzK,kBAAmB8b,EAAUC,GACzB5b,KAAKub,kBAAkBnT,SAAQ,SAASqT,GACpCA,EAAOD,QAAQG,EAAUC,MAQjC/b,IAAK9E,EAAKC,GACN,MAAM,IAAIwC,MAAM,mBAGpBqC,OAAQ9E,GACJ,MAAM,IAAIyC,MAAM,mBAQpBqC,YAAYrE,GACR,OAAO,IAAIye,GAAcja,KAAMxE,GAInCqgB,cAAgB,OAAO7b,KAAKmb,SAU5Btb,OAAO9E,EAAK0Q,EAAUoO,GAMlB,OALIkB,UAAUxhB,OAAS,EACnByG,KAAKmb,SAASW,OAAO/gB,EAAK0Q,EAAUoO,GAEpC7Z,KAAKmb,SAASW,OAAO/gB,EAAK0Q,GAEvBzL,KAGXH,UAAU9E,GAEN,OADAiF,KAAKmb,SAASY,UAAUhhB,GACjBiF,KAGXya,iBAAkB,OAAOza,KAAKmb,SAASV,WAUvC5a,QAAQ9E,EAAK0Q,EAAUoO,GACnB,OAAO7Z,KAAKsU,OAAO,CAACvZ,IAAIA,EAAK0Q,SAASA,EAAUoO,KAAKA,IAGzDha,WAAW9E,GACP,OAAOiF,KAAKsU,OAAO,CAACvZ,IAAIA,IAuF5B8E,OAAOuR,EAAM5V,EAAU,IACnB,MAAMmgB,EAAW,IAAI7gB,IACrB,IAAIkhB,EACAC,EAAcC,GAGdC,MAACA,GAAM,EAAK5c,OAAEA,GAAU/D,EAGvB4gB,EAAiBhL,KAClBA,EAAO,CAACA,IAMZ,IAAK,IAAIyH,KAAOzH,EAAM,CAMlB,QAAeyH,EAAIwD,eAAe,QAAqBxd,MAAXga,EAAI9d,IAC5C,MAAM,IAAIyC,MAAM,cAAeqb,GAKnC,GAFAoD,EAAepD,EAAIwD,eAAe,YAClCH,EAAWrD,EAAIwD,eAAe,QAC1BJ,EAAc,CACd,GAAI3e,MAAMC,QAAQsb,EAAIpN,UAAY,CAE9B,IAAK7J,EAAKE,EAAMD,EAAYE,GAAe8W,EAAIpN,SAC/CoN,EAAIpN,SAAW,IAAInK,EAASM,EAAKE,EAAMD,EAAYE,GAEvD,IAAK8W,EAAIpN,oBAAoBnK,EACzB,MAAM,IAAI9D,MAAM,6BAUxBwe,EAAchc,KAAKkb,KAAKzM,IAAIoK,EAAI9d,KACb8D,MAAfmd,GAEKC,IACDpD,EAAIpN,cAAW5M,GAEdqd,IACDrD,EAAIgB,UAAOhb,IAEOA,MAAfmd,IACFC,GAAiBC,EAIVA,EAGAD,IAERpD,EAAIpN,SAAWuQ,EAAYvQ,UAH3BoN,EAAIgB,KAAOmC,EAAYnC,MAJvBhB,EAAIpN,cAAW5M,EACfga,EAAIgB,UAAOhb,IAkBnBmB,KAAKsc,YAAYX,EAAUK,EAAanD,EAAKrd,GAMjD,GAFAwE,KAAKuc,cAAc,SAEfZ,EAASzhB,KAAO,EAAG,CAMnB,IAAIsiB,EAAY,CAAC5a,IAAKjD,EAAAA,EAAUmD,MAAOnD,EAAAA,GAGnCwR,EAAQ,IAAIwL,EAASnP,UAAU/O,IAAI4K,IAC/BA,EAAKkI,KAAOlI,EAAKkI,IAAI9E,WACrB+Q,EAAU5a,IAAML,EAAS7B,IAAI8c,EAAU5a,IAAKyG,EAAKkI,IAAI9E,SAASjK,aAC9Dgb,EAAU1a,KAAOP,EAAS5B,IAAI6c,EAAU1a,KAAMuG,EAAKkI,IAAI9E,SAAShK,eAEhE4G,EAAKmI,KAAOnI,EAAKmI,IAAI/E,WACrB+Q,EAAU5a,IAAML,EAAS7B,IAAI8c,EAAU5a,IAAKyG,EAAKmI,IAAI/E,SAASjK,aAC9Dgb,EAAU1a,KAAOP,EAAS5B,IAAI6c,EAAU1a,KAAMuG,EAAKmI,IAAI/E,SAAShK,eAE7D,CAAC1G,IAAIsN,EAAKtN,IAAKwV,IAAIlI,EAAKkI,IAAKC,IAAInI,EAAKmI,OAI7CiM,EAActM,EAAMzV,OAAQ2N,IAC5B,IAAIC,EAAQgR,GAAUjR,EAAKkI,IAAKlI,EAAKmI,IAAKjR,GAC1C,OAAQ+I,EAAMmD,UAAYyN,GAAM1Q,MAAQF,EAAMuR,MAAQX,GAAM1Q,OAIhExI,KAAK+Q,cAAc0L,GAGnB,IAAIb,OAAoB/c,EAcxB,OAbI2d,EAAU5a,KAAOjD,EAAAA,IACjBid,EAAoBta,EAASU,cAAcwa,EAAU5a,IAAK4a,EAAU1a,OAQxE9B,KAAK0c,kBAAkBf,EAAUC,GAG7BO,GAAQnc,KAAK2c,YACVxM,EAIX,OADIgM,GAAQnc,KAAK2c,YACV,GAeX9c,YAAY8b,EAAUK,EAAanD,EAAKrd,GAEpC,IAAIohB,EAASC,EACTxU,EAAMyU,EACNC,EAAcC,EACdC,EAAaC,EACbC,EAAeC,GAGfC,SAACA,GAAS,EAAIC,KAAEA,GAAK,EAAK/d,OAAEA,GAAU/D,EAE1C,GAAIwgB,IAAgBnD,EAChB,MAAMrb,MAAM,+CAIhB,IAAI8K,EAAQgR,GAAU0C,EAAanD,EAAKtZ,GAIxC,GAAI+I,EAAMmD,UAAYyN,GAAM1Q,MAAQF,EAAMuR,MAAQX,GAAM1Q,KAMpD,OALAH,EAAO,CACHtN,IAAI8d,EAAI9d,IAAKwV,IAAIyL,EACjBxL,IAAIwL,EAAa1T,MAAOA,QAE5BqT,EAAS5d,IAAI8a,EAAI9d,IAAKsN,GAQ1B,GAAmBxJ,MAAfmd,EAEAY,OAAU/d,EACVge,EAAU,EAAQpgB,OAAO0D,OAAO0Y,GAAOA,EACvC7Y,KAAKkb,KAAKnd,IAAI8a,EAAI9d,IAAK8hB,QACpB,GAAoBhe,MAAhBga,EAAIpN,UAAqC5M,MAAZga,EAAIgB,KAExC+C,EAAUZ,EACVa,OAAUhe,EACVmB,KAAKkb,KAAKlK,OAAO6H,EAAI9d,UAoCrB,GAhBA6hB,EAAUZ,EACVa,EAAU,CACN9hB,IAAK8d,EAAI9d,IACT0Q,SAAUoN,EAAIpN,SACdoO,KAAMhB,EAAIgB,MAEVyD,IACAT,EAAUpgB,OAAO0D,OAAO0c,IAI5B7c,KAAKkb,KAAKnd,IAAI8a,EAAI9d,IAAK8hB,GAKnBD,EAAQnR,SAAU,CAClB,IAAI8R,EAAMtE,GAAe2D,EAAQnR,SAASlS,QACtCikB,EAAYxd,KAAKob,YAAY3M,IAAI8O,GAErCC,EAAUC,iBAAiBb,EAAQnR,SAAS7J,IAAKib,GAE5CD,EAAQle,UACT8e,EAAUC,iBAAiBb,EAAQnR,SAAS3J,KAAM+a,GAkD9D,GA9CAxU,EAAO,CAACtN,IAAI8d,EAAI9d,IAAKwV,IAAIsM,EAASrM,IAAIoM,EAAStU,MAAMA,GAYjD+U,IACAP,EAAQnB,EAASlN,IAAIoK,EAAI9d,KACZ8D,MAATie,IACAzU,EAAKmI,IAAMsM,EAAMtM,IACjBnI,EAAKC,MAAQgR,GAAUuD,EAASxU,EAAKmI,IAAKjR,KAIlDoc,EAAS5d,IAAI8a,EAAI9d,IAAKsN,GA0BlBC,EAAMmD,UAAYyN,GAAM1Q,KAA5B,CAuBA,GApBWF,EAAMmD,UAAYyN,GAAMC,QAC/BgE,GAAgB,EAChBC,GAAa,EACbH,GAAc,EACdC,GAAe,GACR5U,EAAMmD,UAAYyN,GAAMG,QAC/B8D,GAAgB,EAChBC,GAAa,EACbH,GAAc,EACdC,GAAe,GACR5U,EAAMmD,UAAYyN,GAAME,UAC/B+D,GAAgB,EAChBC,GAAa,EACbH,EAAcJ,EAAQpR,SAAS7J,KAAOgb,EAAQnR,SAAS7J,IACvDsb,EAAeL,EAAQpR,SAAS3J,MAAQ8a,EAAQnR,SAAS3J,MAMzDqb,EAAc,CACd,IAAIO,EAAUzE,GAAe2D,EAAQnR,SAASlS,QAC9CwjB,EAAe/c,KAAKob,YAAY3M,IAAIiP,GAExC,GAAIN,EAAY,CACZ,IAAIO,EAAU1E,GAAe4D,EAAQpR,SAASlS,QAC9CyjB,EAAehd,KAAKob,YAAY3M,IAAIkP,GAQpCZ,GAAgBC,GACZD,GAAgBC,IAChBG,GAAgB,EAChBC,GAAa,EACbH,GAAc,EACdC,GAAe,GAgBnBD,IACIE,GACAJ,EAAaa,aAAahB,EAAQnR,SAAS7J,IAAKgb,GAEhDQ,GACAJ,EAAaa,aAAahB,EAAQpR,SAAS7J,IAAKib,IAIpDK,IACIC,IAAkBP,EAAQnR,SAAS/M,UACnCqe,EAAaa,aAAahB,EAAQnR,SAAS3J,KAAM8a,GAEjDQ,IAAeP,EAAQpR,SAAS/M,UAChCse,EAAaa,aAAahB,EAAQpR,SAAS3J,KAAM+a,KAW7Dhd,cAAcie,KAAWC,GACrB,MAAMxiB,EAAS,GACf,IAAK,IAAIiiB,KAAaxd,KAAKob,YAAY5O,SAAU,CAC7C,IAAI4E,EAAOoM,EAAUM,MAAWC,GACpBlf,MAARuS,GAAqBA,EAAK7X,OAAS,GACnCgC,EAAO0H,KAAKmO,GAGpB,OAAO4M,EAAmBziB,GAY9BsE,iBAAiB4L,GACb,OAAOzL,KAAKuc,cAAc,mBAAoB9Q,GAQlD5L,OAAO4L,EAAUzH,GACb,OAAOhE,KAAKuc,cAAc,SAAU9Q,EAAUzH,GAOlDnE,cAAc4L,EAAUzH,GACpB,MAAMoN,EAAOpR,KAAKuc,cAAc,gBAAiB9Q,EAAUzH,GAErDmM,EAAQ,GACd,IAAI0I,EACJ,IAAK,IAAInf,EAAE,EAAGA,EAAE0X,EAAK7X,OAAQG,IACzBmf,EAAMzH,EAAK1X,GACXsG,KAAKkb,KAAKlK,OAAO6H,EAAI9d,KAErBoV,EAAMlN,KAAK,CAAClI,IAAI8d,EAAI9d,IAAKwV,SAAK1R,EAAW2R,IAAKqI,IAIlD,OADA7Y,KAAK+Q,cAAcZ,GACZA,EAMXtQ,QAEIG,KAAKuc,cAAc,SAEnB,IAAIrB,EAAOlb,KAAKkb,KAChBlb,KAAKkb,KAAO,IAAIpgB,IAEhB,MAAMqV,EAAQ,GACd,IAAK,IAAI0I,KAAOqC,EAAK1O,SACjB2D,EAAMlN,KAAK,CAAClI,IAAK8d,EAAI9d,IAAKwV,SAAK1R,EAAW2R,IAAKqI,IAInD,OADA7Y,KAAK+Q,cAAcZ,GACZA,EAOXtQ,YAEI,MAAM4G,EAAMzG,KAAKuc,cAAc,aAG/B,IAAInL,EAAO,GACP6M,EAAS,GACb,IAAK,IAAIC,KAAczX,EAAI+F,SACvB4E,EAAKnO,KAAKib,EAAW9M,MACrB6M,EAAOhb,KAAKib,EAAWD,QAE3B7M,EAAO,GAAGnG,UAAUmG,GACpB6M,EAAS,GAAGhT,UAAUgT,GAEtBA,EAAS,IAAI,IAAIxjB,IAAIwjB,IAIrB,IAAIE,EAAmB,IAAIne,KAAKkb,KAAK1O,UAAU9R,OAAOme,GAAuBha,MAAhBga,EAAIpN,UAE7D2S,EAAgBhN,EAAK7X,OACrB8kB,EAAoBF,EAAiB5kB,OACrC+kB,EAAYte,KAAKkb,KAAKhhB,KACtBkF,EAAOkf,EAAYF,EAAgBC,EACvC,GAAY,GAARjf,EAKA,MAJAyO,QAAQC,IAAI,gBAAiBsQ,GAC7BvQ,QAAQC,IAAI,qBAAsBuQ,GAClCxQ,QAAQC,IAAI,YAAawQ,GACzBzQ,QAAQC,IAAI,aAAc1O,GACpB,IAAI5B,MAAM,0BAIpB,IAAI+gB,EAAa,IAAIzjB,IAAIsW,EAAK3T,IAAIob,GAAO,CAACA,EAAI9d,IAAK8d,KAC/C2F,EAAU,IAAI1jB,IAAI,IAAIkF,KAAKkb,KAAKpd,WAAWpD,OAAO,EAAEK,EAAK8d,KACjCha,MAAhBga,EAAIpN,WAGZgT,EAAUC,EAAqBH,EAAYC,GAC/C,GAAIC,EAAQvkB,KAAO,EAGf,MAFA2T,QAAQC,IAAI,yBACZD,QAAQC,IAAI,IAAI2Q,EAAQ3N,SAClB,IAAItT,MAAM,yBAAyB,IAAIihB,EAAQ3N,SAIzD,GADA2N,EAAUC,EAAqBF,EAASD,GACpCE,EAAQvkB,KAAO,EACf,MAAM,IAAIsD,MAAM,0BAA0B,IAAIihB,EAAQ3N,SAG1D,MAAO,CACHM,KAAMA,EAAK7X,OACX0kB,OAAQA,EAAO1kB,SAY3B,MAAM+hB,GAGFzb,YAAY8e,GAGR3e,KAAK4e,WAAaD,EASlB3e,KAAK6e,UAAY,IAAI/jB,IAerBkF,KAAK8e,YAAc,IAAI/U,GAGvB/J,KAAK+e,SAAW,IAAItkB,IACpBuF,KAAKgf,OAAS,IAAIvkB,IA4CtBoF,aAAaof,EAAOpG,GAChB,IACIzH,EAD+B,GAAvBpR,KAAK6e,UAAU3kB,UACP2E,EAAYmB,KAAK6e,UAAUpQ,IAAIwQ,GACvCpgB,MAARuS,GACApR,KAAK6e,UAAU9gB,IAAIkhB,EAAO,CAACpG,IAC3B7Y,KAAK+e,SAASG,IAAID,IAElB7N,EAAKnO,KAAK4V,GAKlBhZ,aAAaof,EAAOpG,GAChB,IACIzH,EAD+B,GAAvBpR,KAAK6e,UAAU3kB,UACP2E,EAAYmB,KAAK6e,UAAUpQ,IAAIwQ,GACnD,GAAYpgB,MAARuS,EAAmB,CACPwH,GAAmBxH,EAAMyH,IAEjC7Y,KAAKgf,OAAOE,IAAID,IAS5Bpf,iBAAiBof,EAAOpG,GACpB,IACIzH,EAD+B,GAAvBpR,KAAK6e,UAAU3kB,UACP2E,EAAYmB,KAAK6e,UAAUpQ,IAAIwQ,GACnD,GAAYpgB,MAARuS,EAAmB,EAziC/B,SAA4B/U,EAAKwc,GAC7B,GAAkB,GAAdxc,EAAI9C,OACJ,OAAO,EACJ,GAAkB,GAAd8C,EAAI9C,QACX,GAAI8C,EAAI,GAAGtB,KAAO8d,EAAI9d,IAElB,OADAsB,EAAI,GAAKwc,GACF,MAER,CACH,IAAIrN,EAAMnP,EAAIyc,WAAU,SAAUC,GAC9B,OAAOA,EAAKhe,KAAO8d,EAAI9d,OAE3B,GAAIyQ,GAAO,EAEP,OADAnP,EAAImP,GAAOqN,GACJ,EAGf,OAAO,GAyhCUsG,CAAmB/N,EAAMyH,IAE9BhL,QAAQC,IAAI,6DAoBxBjO,QACI,GAA0B,GAAtBG,KAAK+e,SAAS7kB,MAAiC,GAApB8F,KAAKgf,OAAO9kB,KACvC,OAIJ,IAAI0Q,EAAY,GACZC,EAAY,GAChB,IAAK,IAAIoU,KAASjf,KAAK+e,SAASvS,SAAU,CAC3BxM,KAAK6e,UAAUpQ,IAAIwQ,GACrB1lB,OAAS,EACdsR,EAAU5H,KAAKgc,GAEfjf,KAAK6e,UAAU7N,OAAOiO,GAG9B,IAAK,IAAIA,KAASjf,KAAKgf,OAAOxS,SAAU,CACpC,IAAI4E,EAAOpR,KAAK6e,UAAUpQ,IAAIwQ,GAClBpgB,MAARuS,IAIe,GAAfA,EAAK7X,SACLqR,EAAU3H,KAAKgc,GACfjf,KAAK6e,UAAU7N,OAAOiO,KAG9Bjf,KAAK8e,YAAYxK,OAAO1J,EAAWC,GAEnC7K,KAAK+e,SAAS9N,QACdjR,KAAKgf,OAAO/N,QA4BhBpR,iBAAiB4L,GACb,GAA2B,GAAvBzL,KAAK6e,UAAU3kB,KACf,MAAO,GAEX,MAAMklB,EAAmB,IAAI9d,EAASmK,EAAS7J,IAAK6J,EAAS3J,MAAM,GAAM,GACnEmc,EAASje,KAAK8e,YAAYO,OAAOD,GACjCvc,EAAS,GACT5G,EAAMgiB,EAAO1kB,OACnB,IAAI0lB,EAAOK,EACX,IAAK,IAAI5lB,EAAE,EAAGA,EAAEuC,EAAKvC,IACjBulB,EAAQhB,EAAOvkB,GACfsG,KAAK6e,UAAUpQ,IAAIwQ,GACd7W,SAAQ,SAAUyQ,GAKf,GAAIoG,GAASpG,EAAIpN,SAAS7J,IACtB0d,EAAYzG,EAAIpN,SAASjK,gBACtB,CAAA,GAAIyd,GAASpG,EAAIpN,SAAS3J,KAS7B,MANA+L,QAAQC,IAAI,kBACZD,QAAQC,IAAI,aAAc9N,KAAK4e,YAC/B/Q,QAAQC,IAAI,+BAAgCsR,EAAiB/f,YAC7DwO,QAAQC,IAAI,SAAUmR,GACtBpR,QAAQC,IAAI,OAAQ+K,EAAIpN,SAASpM,YACjCW,KAAK2c,YACC,IAAInf,MAAM,6BARhB8hB,EAAYzG,EAAIpN,SAAShK,aAUzBgK,EAAShE,gBAAgB6X,IACzBzc,EAAOI,KAAK,CAAC1B,SAAS+d,EAAWzG,IAAIA,MAE1C7Y,MAEX,OAAO6C,EAsBXhD,aAAa4L,GACT,GAA2B,GAAvBzL,KAAK6e,UAAU3kB,KACf,MAAO,GAEX,MAAMklB,EAAmB,IAAI9d,EAASmK,EAAS7J,IAAK6J,EAAS3J,MAAM,GAAM,GACnEmc,EAASje,KAAK8e,YAAYO,OAAOD,GACjCnjB,EAAMgiB,EAAO1kB,OACbgmB,EAAS,IAAI9kB,IACboI,EAAS,GAEf,IAAK,IAAInJ,EAAE,EAAGA,EAAEuC,EAAKvC,IACjBsG,KAAK6e,UAAUpQ,IAAIwP,EAAOvkB,IACrB0O,SAAQ,SAASyQ,GAEV0G,EAAOhlB,IAAIse,EAAI9d,OAGfwkB,EAAOL,IAAIrG,EAAI9d,KAEnB8H,EAAOI,KAAK4V,OAGxB,OAAOhW,EAsBXhD,OAAO4L,EAAUzH,EAAK1C,EAASN,MAAMR,QAEjC,GAA2B,GAAvBR,KAAK6e,UAAU3kB,KACf,MAAO,GAGX,IAAIkX,EAAO,GAMX,IAHApN,GAAQ1C,EAASN,MAAMR,SAGXN,GAASK,OACjB,OAAOP,KAAK6e,UAAUpQ,IAAIhD,EAAS7J,KAAKlH,QAAO,SAASme,GACpD,OAAOA,EAAIpN,SAAS+T,MAAM/T,EAAUvL,GAASK,WAMrD,IAAIkf,EAAQzb,EAAO1C,EAASN,MAAMG,QAclC,GAbIse,IAEArO,EAAOpR,KAAK0f,aAAajU,GACpB/Q,QAAO,SAASme,GACb,OAAOA,EAAIpN,SAAS+T,MAAM/T,EAAUgU,OAS5ChU,EAASlS,OAASyG,KAAK4e,WACvB,OAAOxN,EAcX,GAAIpN,EAAO9D,GAASM,OAAQ,CAGxB,IAAIoB,EAAM6J,EAAS3J,KAAO9B,KAAK4e,WAC3B9c,EAAO2J,EAAS7J,KAGnBA,EAAKE,GAAQ,CAAClI,KAAK8F,IAAIkC,EAAKE,GAAOlI,KAAK+F,IAAIiC,EAAKE,IAClD,IAAI6d,EAAgB,IAAIre,EAASM,EAAKE,GAAM,GAAM,GAClD9B,KAAK0f,aAAaC,GACbvX,SAAQ,SAASyQ,GACVA,EAAIpN,SAAS+T,MAAM/T,EAAUvL,GAASM,SACtC4Q,EAAKnO,KAAK4V,MAK1B,OAAOzH,EAOXvR,cAAc4L,EAAUzH,GAQpB,MAAMoN,EAAOpR,KAAKqf,OAAO5T,EAAUzH,GAC7B4G,EAAY,GAClB,IAAIiO,EAAKoG,EAAOhB,EAChB,IAAK,IAAIvkB,EAAE,EAAGA,EAAE0X,EAAK7X,OAAQG,IAAK,CAC9Bmf,EAAMzH,EAAK1X,GAGPukB,EADApF,EAAIpN,SAAS/M,SACJ,CAACma,EAAIpN,SAAS7J,KAEd,CAACiX,EAAIpN,SAAS7J,IAAKiX,EAAIpN,SAAS3J,MAE7C,IAAK,IAAI8d,EAAE,EAAGA,EAAE3B,EAAO1kB,OAAQqmB,IAAK,CAChCX,EAAQhB,EAAO2B,GAGHhH,GAAmB5Y,KAAK6e,UAAUpQ,IAAIwQ,GAAQpG,KAEtD7Y,KAAK6e,UAAU7N,OAAOiO,GACtBrU,EAAU3H,KAAKgc,KA4B3B,OARArU,EAAU7O,MAAK,SAASzB,EAAEO,GAAG,OAAOP,EAAEO,KACtCmF,KAAK8e,YAAYe,cAAcjV,GAOxBwG,EAaXvR,QACIG,KAAK6e,UAAU5N,QACfjR,KAAK8e,YAAc,IAAI/U,GACvB/J,KAAK+e,SAAS9N,QACdjR,KAAKgf,OAAO/N,QAQhBpR,YAKI,MAAMigB,EAAkB,IAAIrlB,IAAI,IAAIuF,KAAK8e,YAAYtS,WAC/CuT,EAAgB,IAAItlB,IAAI,IAAIuF,KAAK6e,UAAU/N,SAEjD,IAAKkP,EAAYF,EAAiBC,GAAgB,CAC9C,IAAItB,EAAUwB,EAAqBH,EAAiBC,GACpD,GAAItB,EAAQvkB,KAAO,EACf,MAAM,IAAIsD,MAAM,4BAA4B,IAAIihB,IAIpD,GADAA,EAAUwB,EAAqBF,EAAeD,GAC1CrB,EAAQvkB,KAAO,EACf,MAAM,IAAIsD,MAAM,8BAA8B,IAAIihB,IAO1D,IAAIR,EAAS,IAAIje,KAAK8e,YAAYtS,UAClC,GAAIyR,EAAO1kB,QAAUumB,EAAgB5lB,KACjC,MAAM,IAAIsD,MAAM,uCAEpB,IAAK,IAAI9D,EAAE,EAAGA,EAAEukB,EAAO1kB,OAAQG,IAC3B,GAAIukB,EAAOvkB,EAAE,IAAMukB,EAAOvkB,GACtB,MAAM,IAAI8D,MAAM,0BAQxB,IAAK,IAAIyhB,KAAShB,EAAQ,CACtB,IAAI7M,EAAOpR,KAAK6e,UAAUpQ,IAAIwQ,GAC9B,IAAK,IAAIpG,KAAOzH,EAEZ,GAAI6N,GAASpG,EAAIpN,SAAS7J,KAEfqd,GAASpG,EAAIpN,SAAS3J,KAK7B,MAFA+L,QAAQC,IAAI,SAAUmR,GACtBpR,QAAQC,IAAI,OAAQ+K,EAAIpN,SAASpM,YAC3B,IAAI7B,MAAM,uBAU5B,IAAK,IAAI0iB,IAAa,IAAIlgB,KAAK6e,UAAUrS,UACrC,IAAK,IAAIqM,KAAOqH,EACZ,IAAK,IAAIpc,IAAK,CAAC+U,EAAIpN,SAAS7J,IAAKiX,EAAIpN,SAAS3J,MAC1C,IAAK9B,KAAK6e,UAAUtkB,IAAIuJ,GACpB,MAAM,IAAItG,MAAM,oDAAoDsG,QAAQ+U,EAAIpN,SAASpM,eAYzG,IAAIkb,EAAQ,GACZ,IAAK,IAAI2F,KAAalgB,KAAK6e,UAAUrS,SACjC,IAAK,IAAIqM,KAAOqH,EACZ3F,EAAMtX,KAAK4V,GAKnB,IAAIsH,EAAS,IAAIrlB,IACjB,IAAK,IAAI+d,KAAO0B,EAAO,CACnB,IAAIxB,EAAOoH,EAAO1R,IAAIoK,EAAI9d,KAC1B,GAAY8D,MAARka,EACAoH,EAAOpiB,IAAI8a,EAAI9d,IAAK8d,QAGpB,GAAIA,IAAQE,EACR,MAAM,IAAIvb,MAAM,gDAI5B,IAAI4T,EAAO,IAAI+O,EAAO3T,UAMtB,IAAK,IAAIqM,KAAOzH,EAAK5E,SAEjB,GAAIqM,EAAIpN,SAASlS,OAASyG,KAAK4e,WAC3B,MAAM,IAAIphB,MAAM,4BAA4BwC,KAAK4e,eAAe/F,EAAIpN,SAASpM,cAIrF,MAAO,CAAC,CACJsf,UAAW3e,KAAK4e,WAChBX,OAAQ,IAAIje,KAAK6e,UAAU/N,QAC3BM,KAAMA,KCxiDlB,MAAMgP,GAAMC,EAEZ,SAASC,GAAShmB,EAAEO,GAChB,OAAO0G,EAAStC,IAAI3E,EAAE4N,WAAYrN,EAAEqN,YAGxC,MAAMqY,GAGF1gB,iBAAmB,EAEnBA,YAAYqa,EAASzI,EAAIjW,GAErBwE,KAAKyR,GAAKA,EAEVzR,KAAK6U,QAAU,IAAIvD,GAAQG,EAAIzR,KAAKwgB,IAAIvO,KAAKjS,OAE7CA,KAAK8E,OAEL9E,KAAK+G,aAEL/G,KAAK+H,YAEL/H,KAAKka,QAAUA,EAEfla,KAAKygB,MAAQ,GAEbzgB,KAAK0gB,UAAY,IAEjBllB,EAAUA,GAAW,IACbmlB,UAAYnlB,EAAQmlB,WAAaJ,GAASK,UAClD5gB,KAAKxE,QAAUA,EAQnBqE,aAAc2b,GACV,IAAIC,EAAS,CACTD,QAASA,GAGb,OADAxb,KAAK0gB,UAAUzd,KAAKwY,GACbA,EAGX5b,aAAc4b,GACV,IAAInR,EAAQtK,KAAK0gB,UAAUhF,QAAQD,GAC/BnR,GAAS,GACTtK,KAAK0gB,UAAU3V,OAAOT,EAAO,GAIrCzK,qBAAsBke,GAClB/d,KAAK0gB,UAAUtY,SAAQ,SAASqT,GAC5BA,EAAOD,WAAWuC,MAW1Ble,UAAUiF,GACN,IAAI8M,EAAM9M,EAAOF,UAEI5E,KAAK8E,OACPjG,MAAfmB,KAAK8E,SACL9E,KAAK6U,QAAQ5D,QACbjR,KAAK+G,kBAAelI,EACpBmB,KAAK+H,iBAAclJ,EACnBmB,KAAKygB,MAAQ,IAGjBzgB,KAAK8E,OAASA,EAEV8R,EAAqB5W,KAAK8E,SAC1B9E,KAAKwgB,IAAI5O,GAYjB/R,KAAKsI,GACDA,EAAWC,SAAQ,SAASC,GACpBrI,KAAK+G,aAAaU,gBAAgBY,EAAKH,aACvClI,KAAKygB,MAAMxd,KAAKoF,KAErBrI,MAEHA,KAAKygB,MAAM1kB,KAAKukB,IAMpBzgB,IAAI+R,GACG,IAAYnL,EAAM,GACXzG,KAAKygB,MAAMlnB,OACrB,KAAOyG,KAAKygB,MAAMlnB,OAAS,GAAKyG,KAAKygB,MAAM,GAAGvY,WAAW,IAAM0J,GAC3DnL,EAAIxD,KAAKjD,KAAKygB,MAAMtkB,SAExB,OAAOsK,EAMX5G,OACI,OAAQG,KAAKygB,MAAMlnB,OAAS,EAAKyG,KAAKygB,MAAM,GAAGvY,WAAW,QAAIrJ,EAYlEgB,QAAQ+R,GACJ,IAAIxV,EAAOkM,EAAQtI,KAAKxE,QAAQmlB,UAC5BE,GAAU,EAed,OAdyBhiB,MAArBmB,KAAK+G,cACL3K,EAAQwV,EACRiP,GAAU,GACHtf,EAAS9B,OAAOO,KAAK+G,aAAatF,aAAcmQ,KACvDxV,EAAQ4D,KAAK+G,aAAajF,KAC1B+e,GAAU,GAEVA,IAEA7gB,KAAK+G,aAAe,IAAIzF,EAASlF,EAAOA,EAAQkM,GAAO,GAAM,GAC7DtI,KAAK+H,YAAcqY,GAAIpgB,KAAK+G,aAAc/G,KAAK8E,QAE/C9E,KAAKygB,MAAQ,IAEVI,EAYXhhB,KAAKihB,EAAWC,GACZ,IAAIjZ,EAAiBkZ,EAA2BhhB,KAAK+G,aACL/G,KAAK+H,YACL/H,KAAK8E,OACLgc,GAS5CG,EAAWC,EAA2BlhB,KAAK8E,OAAQ9E,KAAKyR,GAAGhM,OAAO,GAgDtE,OA9B0B5G,MAAtBkiB,IACAA,EAAqB/gB,KAAK+G,aAAavF,aA6BpCsG,EAAepN,QAAO,SAAS2N,GAElC,GAAI4Y,GAAY5Y,EAAKH,WAAW,GAE5B,OAAO,EAIX,GAAI3G,EAAS9B,OAAO4I,EAAKH,WAAY6Y,GAEjC,OAAO,EAMX,GAAgC,GAA5B/gB,KAAK8E,OAAOJ,aAAqB,CACjC,IAAIC,EAAK0D,EAAKH,WAAW,GACzB,GAAIvD,EAAK3E,KAAK+G,aAAavF,YAAY,GAAI,CACvC,IAAIkE,EAAI8O,EAA4BxU,KAAK8E,OAAQH,GACjD,GAAIe,EAAEnB,UAAY8D,EAAK9G,SAAS,IAAoB,GAAdmE,EAAEjB,SACpC,OAAO,GAInB,OAAO,IACRzE,MAWPH,IAAI+R,GAEA,IAAIuP,EAAYnhB,KAAK+C,IAAI6O,GAEzB,GAAI5R,KAAK6gB,QAAQjP,GAAM,CAEnB,IAAI5J,EAAgBhI,KAAKka,QAAQkH,iBAAiBphB,KAAK+H,aAEvD/H,KAAKiD,KAAKjD,KAAKqhB,KAAKrZ,IAEpBmZ,EAAUle,QAAQjD,KAAK+C,IAAI6O,IAE3BuP,EAAU5nB,OAAS,GACnByG,KAAK0c,kBAAkB9K,EAAKuP,EAAWnhB,MAG3C,IAAI2E,EAAK3E,KAAKgD,QAAUhD,KAAK+G,aAAajF,KAC1C9B,KAAK6U,QAAQ9C,WAAWnY,KAAK8F,IAAIiF,EAAI3E,KAAK+G,aAAajF,QCnR/D,SAASwf,GAAOhZ,GACZ,OAAQA,EAAMmD,UAAYwP,GAAQ/B,MAAM1Q,MAAQF,EAAMuR,MAAQoB,GAAQ/B,MAAM1Q,KA4EhF,MAAM+Y,GAAS9kB,OAAO0D,OAAO,CACzBqhB,MAAO,EACPC,KAAM,EACNC,MAAO,EACPC,WAAY,IAGVC,GAAY,IAAI9mB,IAAI,CACtB,CAAC,MAAOymB,GAAOE,MACf,CAAC,MAAOF,GAAOG,MACf,CAAC,MAAOH,GAAOG,MACf,CAAC,MAAOH,GAAOE,MACf,CAAC,MAAOF,GAAOC,OACf,CAAC,MAAOD,GAAOC,OACf,CAAC,MAAOD,GAAOC,OACf,CAAC,MAAOD,GAAOE,MACf,CAAC,MAAOF,GAAOC,OACf,CAAC,MAAOD,GAAOG,MACf,CAAC,MAAOH,GAAOE,MACf,CAAC,MAAOF,GAAOG,MACf,CAAC,MAAOH,GAAOC,OACf,CAAC,MAAOD,GAAOG,MACf,CAAC,MAAOH,GAAOI,YACf,CAAC,MAAOJ,GAAOG,MACf,CAAC,MAAOH,GAAOC,OACf,CAAC,MAAOD,GAAOI,cASnB,SAASE,GAAkBvR,EAAOG,GAC9B,OAAOnP,EAASsB,OAAO0N,EAAM7E,SAAUgF,EAAMhF,UAGjD,SAASqW,GAAmBxR,EAAOG,GAC/B,OAAQ,EAAInP,EAAS6P,QAAQb,EAAM7E,SAAUgF,EAAMhF,UAGvD,SAASsW,GAAmB3R,EAAQC,GAGhC,OAAOwR,GAFMzR,EAAU,IAAIA,EAAOG,IAAMH,EAAOI,IAClCH,EAAU,IAAIA,EAAOE,IAAMF,EAAOG,KAInD,SAASwR,GAAoB5R,EAAQC,GAGjC,OAAOyR,GAFM1R,EAAU,IAAIA,EAAOG,IAAMH,EAAOI,IAClCH,EAAU,IAAIA,EAAOE,IAAMF,EAAOG,KAanD,MAAMyR,WAAsB/Q,GAExBrR,cAAgB0hB,GAChB1hB,iBAAmB+hB,GAEnB/hB,YAAaqa,EAAS1e,GAClBuE,MAAMvE,GAGNwE,KAAKkb,KAAO,IAAIpgB,IAGhBkF,KAAKma,IAAMD,EACX,IAAIgI,EAAKliB,KAAKmiB,mBAAmBlQ,KAAKjS,MACtCA,KAAKoiB,OAASpiB,KAAKma,IAAIkI,aAAaH,GAMxClS,iBACI,OAAOhQ,KAAKkb,KAOhBhB,cACI,OAAOla,KAAKma,IAWhBta,qBACI,MAAM,IAAIrC,MAAM,mBAKpBqC,WAAWoQ,EAAMzU,EAAQ,IAErB,GAAoB,mBADRwE,KAAKkQ,UAAU1U,GAGvB,OAAOuE,MAAMsR,WAAWpB,EAAMzU,GAC3B,CAEH,IAAI4V,EAAQ9T,MAAMC,QAAQ0S,GAASA,EAAO,IAAIA,GAQ9C,OANgBjQ,KAAKsiB,sBACJ,EACblR,EAAKrV,KAAK8lB,IAEVzQ,EAAKrV,KAAK+lB,IAEP1Q,GAOfvR,UAAUsQ,EAAOjL,GACb,IAAIxJ,EAAQsE,KAAKkQ,YACjB,GAAoB,mBAATxU,EAEP,OAAOqE,MAAM2Q,UAAUP,GAEdtR,MAATnD,IAEiBmD,MAAbqG,IACAA,EAAYlF,KAAKsiB,sBAEjBpd,GAAa,EACbiL,EAAMpU,KAAKgmB,IAEX5R,EAAMpU,KAAKimB,KASvBniB,IAAK9E,EAAKC,GACN,MAAM,IAAIwC,MAAM,mBAGpBqC,OAAQ9E,GACJ,MAAM,IAAIyC,MAAM,mBAGpBqC,MAAO9E,GACH,MAAM,IAAIyC,MAAM,mBASpBqC,mBAAmB0iB,EAAU3G,GACzB,MAAM,IAAIpe,MAAM,mBAOpBqC,2BAA2B0iB,EAAU9W,GACjC,MAAM+W,EAAc,GACdC,EAAe,GACfC,EAAa,GACbxmB,EAA0B,GAAlB8D,KAAKkb,KAAKhhB,KACxB,IAAIyoB,EAAWC,EAAkB9F,EACjC,IAAK,IAAIzU,KAAQka,EAAS/V,SAClB8U,GAAOjZ,EAAKC,SAIhBqa,GAAY,GAAkB3iB,KAAKkb,KAAK3gB,IAAI8N,EAAKtN,KACjD6nB,GAAmB,EACH/jB,MAAZwJ,EAAKkI,KACDlI,EAAKkI,IAAI9E,SAAS+T,MAAM/T,KACxBmX,GAAmB,GAGvBD,IAAcC,GAEd9F,EAAQ,CAAC/hB,IAAIsN,EAAKtN,IAAKwV,SAAI1R,EAAW2R,IAAInI,EAAKmI,KAC/CkS,EAAWzf,KAAK6Z,KACR6F,GAAaC,GAErB9F,EAAQ,CAAC/hB,IAAIsN,EAAKtN,IAAKwV,IAAIlI,EAAKkI,IAAKC,SAAI3R,GACzC2jB,EAAYvf,KAAK6Z,IACV6F,GAAaC,IAEpB9F,EAAQ,CAAC/hB,IAAIsN,EAAKtN,IAAKwV,IAAIlI,EAAKkI,IAAKC,IAAInI,EAAKmI,KAC9CiS,EAAaxf,KAAK6Z,KAG1B,MAAO,CAAC4F,EAAYD,EAAcD,GAOtC3iB,2BAA2B0iB,EAAU9W,GAOjC,MAAMoX,EAAc,IAAI/nB,IAAIkF,KAAKma,IAAIkF,OAAO5T,GAAUhO,KAAI,SAASob,GAC/D,MAAO,CAACA,EAAI9d,IAAK8d,OAGrB,IAoDIiK,EApDAL,EAAe,GACfC,EAAa,GACbxmB,EAA2B,GAAlB8D,KAAKkb,KAAKhhB,KACvB,IAAKgC,EAAM,CAOP,IAAI6mB,EAAa9nB,EAAc+E,KAAKkb,KAAM2H,GAC1C,GAAIE,EAAW7oB,KAAO,EAAG,CAgBrB,IAAI2e,EAAKiE,EACT,IAAK,IAAIzU,KAAQka,EAAS/V,SACtBqM,EAAMkK,EAAWtU,IAAIpG,EAAKtN,KACf8D,MAAPga,GAAqByI,GAAOjZ,EAAKC,SACjCwU,EAAQ,CAAC/hB,IAAIsN,EAAKtN,IAAKwV,IAAIlI,EAAKkI,IAAKC,IAAInI,EAAKmI,KAC9CiS,EAAaxf,KAAK6Z,IAU9B4F,EAAa,IADE9nB,EAAeoF,KAAKkb,KAAM2H,GACfrW,UACrB/O,IAAIob,IACM,CAAC9d,IAAI8d,EAAI9d,IAAKwV,SAAI1R,EAAW2R,IAAIqI,KAmBpD,OATIiK,EADA5mB,EACY2mB,EAEAjoB,EAAeioB,EAAa7iB,KAAKkb,MAO1C,CAACwH,EAAYD,EALF,IAAIK,EAAUtW,UAC3B/O,IAAIob,IACM,CAAC9d,IAAI8d,EAAI9d,IAAKwV,IAAIsI,EAAKrI,SAAI3R,MAY9Cgd,cACI,OAAO7b,KAAKka,QAAQ2B,QAGxBhc,OAAO9E,EAAK0Q,EAAUoO,GAClB,OAAO7Z,KAAKka,QAAQ4B,OAAO/gB,EAAK0Q,EAAUoO,GAG9Cha,UAAU9E,GACN,OAAOiF,KAAKka,QAAQ6B,UAAUhhB,GAGlC8E,QAAQ9E,EAAK0Q,EAAUoO,GACnB,OAAO7Z,KAAKka,QAAQ8I,QAAQjoB,EAAK0Q,EAAUoO,GAG/Cha,WAAW9E,GACP,OAAOiF,KAAKka,QAAQ+I,WAAWloB,GAGnC8E,OAAOuR,EAAM5V,GACT,OAAOwE,KAAKka,QAAQ5F,OAAOlD,EAAM5V,GAGrCqE,QACI,OAAOG,KAAKka,QAAQjJ,QAGxBpR,OAAO9E,GACH,OAAOiF,KAAKka,QAAQ3f,IAAIQ,GAG5B8E,OAAO9E,GACH,OAAOiF,KAAKka,QAAQzL,IAAI1T,GAG5B8E,UACI,OAAOG,KAAKka,QAAQ9I,OAGxBvR,gBACI,MAAO,IAAIG,KAAK8Q,QAGpBjR,gBACI,OAAOG,KAAKoR,OAGhBvR,SAAS9E,GACL,OAAOiF,KAAKzF,IAAIQ,IC5axB,MAAMkO,GAAWyM,EAAwBzM,SACnCC,GAAYwM,EAAwBxM,UACpCqY,GAASU,GAAcV,OACvBK,GAAYK,GAAcL,UAMhC,MAAMsB,WAA2BjB,GAE7BpiB,YAAaqa,EAASzI,EAAIjW,GAEtBuE,MAAMma,EAAS1e,GAGfwE,KAAK8X,IAAMrG,EACXzR,KAAKmY,KAAOnY,KAAK8X,IAAI3I,GAAG,YAAanP,KAAKmjB,kBAAkBlR,KAAKjS,OAGjEA,KAAKojB,OAAS,IAAI7C,GAASvgB,KAAKma,IAAK1I,GACrC,IAAIyQ,EAAKliB,KAAKqjB,oBAAoBpR,KAAKjS,MACvCA,KAAKsjB,UAAYtjB,KAAKojB,OAAOf,aAAaH,GAO9CriB,qBACI,MAAM+R,EAAM5R,KAAK8X,IAAIjG,MAAMD,MAC3B,OAAO2R,EAA+BvjB,KAAK8X,IAAIhT,OAAQ8M,GAY3D/R,mBAAmB0iB,EAAU3G,GAgCzB,IAAK5b,KAAK8X,IAAI1D,UACV,OAGJ,GAAyBvV,MAArB+c,EACA,OAGJ,MAAMhK,EAAM5R,KAAK8X,IAAIjG,MAAMD,MACrBoF,EAAaxC,EAA4BxU,KAAK8X,IAAIhT,OAAQ8M,GAG1D4R,EAAiB,IAAIliB,EAAS0V,EAAWzS,UAE/C,IAAKif,EAAehE,MAAM5D,EAAmBta,EAASN,MAAMC,SAAU,CAKlE,IAAIwiB,EAAYzjB,KAAK0jB,2BAA2BzR,KAAKjS,MAzFtC,IA0FUuiB,EAASroB,MAC1B8F,KAAKkb,KAAKhhB,KA1FD,MA2FTupB,EAAYzjB,KAAK2jB,2BAA2B1R,KAAKjS,OAKzD,MAAO4jB,EAAMC,EAAQC,GAASL,EAAUlB,EAAUiB,GAGlDI,EAAKxb,QAAQC,IACTrI,KAAKkb,KAAKlK,OAAO3I,EAAKtN,OAE1B+oB,EAAM1b,QAAQC,IACVrI,KAAKkb,KAAKnd,IAAIsK,EAAKtN,IAAKsN,EAAKkI,OAIjC,MAAMJ,EAAQ7U,EAAa,CAACsoB,EAAMC,EAAQC,GAAQ,CAACroB,MAAK,EAAMC,OAAM,IAGpE,IAAIwJ,EAAYqe,EAA+BvM,GAC/ChX,KAAK0Q,UAAUP,EAAOjL,GAGtBlF,KAAK+Q,cAAcZ,GAUnBnQ,KAAKojB,OAAOrb,cACP/H,KAAKojB,OAAOrb,YAAYyX,MAAM5D,EAAmBta,EAASN,MAAMC,UAGjEjB,KAAKojB,OAAOW,UAAU/M,IAUlCnX,kBAAmBuN,GAQf,IAAItE,EAGAA,EADAsE,EAAKiH,KACQrU,KAAK8X,IAAIhT,OAGT0P,EAA4BxU,KAAK8X,IAAIhT,OAAQ9E,KAAK8X,IAAIjG,MAAMD,OAM7E,IAAItJ,EAAQ,IAAIoN,EAAwB1V,KAAK8X,IAAIjP,WAAYC,GAQ7D,MAAMqH,EAAQ,GACd,GAAI7H,EAAMqB,UAAYV,GAASR,QAAUH,EAAMsB,WAAaV,GAAUN,KAAM,CAExE,IAAIhH,EAAMkH,EAAWvE,SACjBzC,EAAOgH,EAAWvE,SAClByf,EAAM,IAAI1iB,EAASM,EAAKE,GAAM,GAAM,GAEpCmiB,EAAa,IAAInpB,IAAIkF,KAAKma,IAAIkF,OAAO2E,GAAKvmB,IAAIob,GACvC,CAACA,EAAI9d,IAAK8d,KAGjBqL,EAAWtpB,EAAeoF,KAAKkb,KAAM+I,GAErCnB,EAAYloB,EAAeqpB,EAAYjkB,KAAKkb,MAEhDlb,KAAKkb,KAAO+I,EAEZ,IAAK,IAAIpL,KAAOqL,EAAS1X,SACrB2D,EAAMlN,KAAK,CAAClI,IAAI8d,EAAI9d,IAAKwV,SAAI1R,EAAW2R,IAAIqI,IAEhD,IAAK,IAAIA,KAAOiK,EAAUtW,SACtB2D,EAAMlN,KAAK,CAAClI,IAAI8d,EAAI9d,IAAKwV,IAAIsI,EAAKrI,SAAI3R,IAI1C,IAAIqG,EAAYqe,EAA+Bza,GAC/C9I,KAAK0Q,UAAUP,EAAOjL,GAGtBlF,KAAK+Q,cAAcZ,GAMvBnQ,KAAKojB,OAAOW,UAAUjb,GAQ1BjJ,oBAAsB,SAAS+R,EAAK5J,EAAemc,GAC/C,IAAKnkB,KAAK8X,IAAI1D,UACV,OAGJ,MAAMjE,EAAQ,GACdnI,EAAcI,SAAQ,SAAUC,GAC5B,IAAIwQ,EAAMxQ,EAAKwQ,IACXuL,EAAUpkB,KAAKkb,KAAK3gB,IAAIse,EAAI9d,MAC3BC,EAAOwD,EAAOC,EAAQC,GAAY2J,EAAK9G,SAQxC8iB,EAAUhc,EAAKnD,UAAY,EAAK,IAAM,IAEtCof,EAAU,EAAa,IAAK,EAAU,IAAM,IAE5CC,EAAc3C,GAAUnT,IAAI,IAAa4V,IAASC,KAElDC,GAAehD,GAAOI,WAClByC,GAEAjU,EAAMlN,KAAK,CAAClI,IAAI8d,EAAI9d,IAAKwV,SAAI1R,EAAW2R,IAAIqI,IAC5C7Y,KAAKkb,KAAKlK,OAAO6H,EAAI9d,OAGrBoV,EAAMlN,KAAK,CAAClI,IAAI8d,EAAI9d,IAAKwV,IAAIsI,EAAKrI,SAAI3R,IAEtCsR,EAAMlN,KAAK,CAAClI,IAAI8d,EAAI9d,IAAKwV,SAAI1R,EAAW2R,IAAIqI,KAGzC0L,GAAehD,GAAOC,MACxB4C,IAEDjU,EAAMlN,KAAK,CAAClI,IAAI8d,EAAI9d,IAAKwV,IAAIsI,EAAKrI,SAAI3R,IACtCmB,KAAKkb,KAAKnd,IAAI8a,EAAI9d,IAAK8d,IAEpB0L,GAAehD,GAAOG,MACzB0C,IAEAjU,EAAMlN,KAAK,CAAClI,IAAI8d,EAAI9d,IAAKwV,SAAI1R,EAAW2R,IAAIqI,IAC5C7Y,KAAKkb,KAAKlK,OAAO6H,EAAI9d,QAG9BiF,MAKHA,KAAK+Q,cAAcZ,IC5Q3B,MAAMlH,GAAWyM,EAAwBzM,SACnCC,GAAYwM,EAAwBxM,UACpCqY,GAASU,GAAcV,OACvBK,GAAYK,GAAcL,UAUhC,SAAS4C,GAAoBC,EAAcC,GACvC,IAEIxf,EAFcqe,EAA+BkB,GAC/BlB,EAA+BmB,GAEjD,OAAQxf,EAAY,EAAK,EAAKA,EAAY,GAAM,EAAI,EAIxD,MAAMyf,WAA8B1C,GAEhCpiB,YAAaqa,EAAS0K,EAAKC,EAAKrpB,GAE5BuE,MAAMma,EAAS1e,GAGfwE,KAAK8kB,KAAOF,EACZ5kB,KAAK+kB,YAAa,EAClB/kB,KAAKglB,KAAOH,EACZ7kB,KAAKilB,YAAa,EAClB,IAAIC,EAAQllB,KAAKmjB,kBAAkBlR,KAAKjS,MACxCA,KAAKmlB,MAAQnlB,KAAK8kB,KAAK3V,GAAG,YAAa+V,GACvCllB,KAAKolB,MAAQplB,KAAKglB,KAAK7V,GAAG,YAAa+V,GAGvC,IAAIG,EAAWrlB,KAAKqjB,oBAAoBpR,KAAKjS,MAC7CA,KAAKslB,QAAU,IAAI/E,GAASvgB,KAAKma,IAAKyK,GACtC5kB,KAAKulB,WAAavlB,KAAKslB,QAAQjD,aAAagD,GAC5CrlB,KAAKwlB,QAAU,IAAIjF,GAASvgB,KAAKma,IAAK0K,GACtC7kB,KAAKylB,WAAazlB,KAAKwlB,QAAQnD,aAAagD,GAIhDxlB,WACI,OAAQG,KAAK+kB,YAAc/kB,KAAKilB,WAQpCplB,qBACI,MAAM+R,EAAM5R,KAAK8kB,KAAKjT,MAAMD,MAG5B,OAAO4S,GAFchQ,EAA4BxU,KAAK8kB,KAAKhgB,OAAQ8M,GAC9C4C,EAA4BxU,KAAKglB,KAAKlgB,OAAQ8M,IAWvE/R,mBAAmB0iB,EAAU3G,GACzB,IAAK5b,KAAK0lB,WACN,OAGJ,GAAyB7mB,MAArB+c,EACA,OAIJ,MAAMhK,EAAM5R,KAAK8kB,KAAKjT,MAAMD,MACtB6S,EAAejQ,EAA4BxU,KAAK8kB,KAAKhgB,OAAQ8M,GAC7D8S,EAAelQ,EAA4BxU,KAAKglB,KAAKlgB,OAAQ8M,GAGnE,IAAK+T,EAAOC,GAAS,CAACnB,EAAalgB,SAAUmgB,EAAangB,WACrD3C,EAAKE,GAAS6jB,GAASC,EAAS,CAACD,EAAOC,GAAS,CAACA,EAAOD,GAC9D,MAAMnC,EAAiB,IAAIliB,EAASM,EAAKE,GAAM,GAAM,GAErD,IAAK0hB,EAAehE,MAAM5D,EAAmBta,EAASN,MAAMC,SAAU,CAKlE,IAAIwiB,EAAYzjB,KAAK0jB,2BAA2BzR,KAAKjS,MAvFtC,IAwFUuiB,EAASroB,MAC1B8F,KAAKkb,KAAKhhB,KAxFD,MAyFTupB,EAAYzjB,KAAK2jB,2BAA2B1R,KAAKjS,OAKzD,MAAO4jB,EAAMC,EAAQC,GAASL,EAAUlB,EAAUiB,GAGlDI,EAAKxb,QAAQC,IACTrI,KAAKkb,KAAKlK,OAAO3I,EAAKtN,OAE1B+oB,EAAM1b,QAAQC,IACVrI,KAAKkb,KAAKnd,IAAIsK,EAAKtN,IAAKsN,EAAKkI,OAIjC,MAAMJ,EAAQ7U,EAAa,CAACsoB,EAAMC,EAAQC,GAAQ,CAACroB,MAAK,EAAMC,OAAM,IAGpE,IAAIwJ,EAAYsf,GAAmBC,EAAcC,GACjD1kB,KAAK0Q,UAAUP,EAAOjL,GAGtBlF,KAAK+Q,cAAcZ,EAAOjL,GAY1BlF,KAAKslB,QAAQvd,cACR/H,KAAKslB,QAAQvd,YAAYyX,MAAM5D,EAAmBta,EAASN,MAAMC,UAGlEjB,KAAKslB,QAAQvB,UAAUU,IAI3BzkB,KAAKwlB,QAAQzd,cACR/H,KAAKwlB,QAAQzd,YAAYyX,MAAM5D,EAAmBta,EAASN,MAAMC,UAGlEjB,KAAKwlB,QAAQzB,UAAUW,IAanC7kB,kBAAmBuN,EAAMG,GAKrB,IAAIvE,GAAO,EACX,IAAKhJ,KAAK0lB,WAAY,CAMlB,GALInY,EAAMG,KAAO1N,KAAK8kB,KAClB9kB,KAAK+kB,YAAa,EAElB/kB,KAAKilB,YAAa,GAElBjlB,KAAK0lB,WAGL,OAFA1c,GAAO,EASf,MAAMyI,EAAKlE,EAAMG,IACXmY,EAAYpU,GAAMzR,KAAK8kB,KAAQ9kB,KAAKglB,KAAOhlB,KAAK8kB,KAStD,IAAIhc,EAEAA,EADAsE,EAAKiH,KACQ5C,EAAG3M,OAEH0P,EAA4B/C,EAAG3M,OAAQ2M,EAAGI,MAAMD,OAMjE,MAAMtJ,EAAQ,IAAIoN,EAAwBjE,EAAG5I,WAAYC,GAKzD,IAAInE,EAAKmE,EAAWlE,UAChBkhB,EAAmBtR,EAA4BqR,EAAS/gB,OAAQH,GAQpE,MAAMwL,EAAQ,GACd,GAAI7H,EAAMqB,UAAYV,GAASR,QAAUH,EAAMY,WAAaA,GAAUN,KAAM,CAGxE,IAAIhH,EAAMhI,KAAK8F,IAAIoJ,EAAWvE,SAAUuhB,EAAiBvhB,UACrDzC,EAAOlI,KAAK+F,IAAImJ,EAAWvE,SAAUuhB,EAAiBvhB,UACtDyf,EAAM,IAAI1iB,EAASM,EAAKE,GAAM,GAAM,GAGpCmiB,EAAa,IAAInpB,IAAIkF,KAAKma,IAAIkF,OAAO2E,GAAKvmB,IAAIob,GACvC,CAACA,EAAI9d,IAAK8d,KAGjBqL,EAAWtpB,EAAeoF,KAAKkb,KAAM+I,GAErCnB,EAAYloB,EAAeqpB,EAAYjkB,KAAKkb,MAEhDlb,KAAKkb,KAAO+I,EAEZ,IAAK,IAAIpL,KAAOqL,EAAS1X,SACrB2D,EAAMlN,KAAK,CAAClI,IAAI8d,EAAI9d,IAAKwV,SAAI1R,EAAW2R,IAAIqI,IAEhD,IAAK,IAAIA,KAAOiK,EAAUtW,SACtB2D,EAAMlN,KAAK,CAAClI,IAAI8d,EAAI9d,IAAKwV,IAAIsI,EAAKrI,SAAI3R,IAI1C,IAAIqG,EAAYsf,GAAmB1b,EAAYgd,GAC/C9lB,KAAK0Q,UAAUP,EAAOjL,GAGtBlF,KAAK+Q,cAAcZ,GAOnBsB,GAAMzR,KAAK8kB,KACX9kB,KAAKslB,QAAQvB,UAAUjb,GAChB2I,GAAMzR,KAAKglB,MAClBhlB,KAAKwlB,QAAQzB,UAAUjb,GAEvBE,IACI6c,GAAY7lB,KAAK8kB,KACjB9kB,KAAKslB,QAAQvB,UAAU+B,GAChBD,GAAY7lB,KAAKglB,MACxBhlB,KAAKwlB,QAAQzB,UAAU+B,IAanCjmB,oBAAsB,SAAS+R,EAAK5J,EAAemc,GAC/C,IAAKnkB,KAAK0lB,WACN,OAMJ,MACMG,EADK1B,EAAS1S,IACIzR,KAAK8kB,KAAQ9kB,KAAKglB,KAAOhlB,KAAK8kB,KAEhD3U,EAAQ,GACdnI,EAAcI,SAAQ,SAAUC,GAO5B,IAAK/D,EAAK9F,EAAOC,EAAQC,GAAY2J,EAAK9G,SAEtCoD,EAAK0D,EAAKH,WAAW,GACrB6d,EAAevR,EAA4BqR,EAAS/gB,OAAQH,GAC5DqhB,EAAYD,EAAaxhB,SAMzB0hB,EAAW3hB,EAAM0hB,EAAa,IAAO1hB,GAAO0hB,EAAa,IAAM,IAE/D3B,EAAUhc,EAAKnD,UAAY,EAAK,IAAM,IAEtCof,EAAU,EAAa,IAAK,EAAU,IAAM,IAE5CC,EAAc3C,GAAUnT,IAAI,GAAGwX,IAAU5B,IAASC,KAKlDzL,EAAMxQ,EAAKwQ,IACXuL,EAAUpkB,KAAKkb,KAAK3gB,IAAIse,EAAI9d,KAGhC,GAAIwpB,GAAehD,GAAOI,WAAY,CAYlC,GADmB/K,EAAqBmP,GAIjC,CAGHxB,EADgBhB,EAA+BwC,IACnB1d,EAAKnD,UAAaqc,GAAOC,MAAQD,GAAOG,UAJpE6C,EAAchD,GAAOC,MAOzB+C,GAAehD,GAAOE,OACtB8C,EAAchD,GAAOC,OAErB+C,GAAehD,GAAOC,OAAS4C,IAG/BG,GAAehD,GAAOG,MAAS0C,KAK/BG,GAAehD,GAAOC,OAEtBrR,EAAMlN,KAAK,CAAClI,IAAI8d,EAAI9d,IAAKwV,IAAIsI,EAAKrI,SAAI3R,IACtCmB,KAAKkb,KAAKnd,IAAI8a,EAAI9d,IAAK8d,IAChB0L,GAAehD,GAAOG,OAE7BvR,EAAMlN,KAAK,CAAClI,IAAI8d,EAAI9d,IAAKwV,SAAI1R,EAAW2R,IAAIqI,IAC5C7Y,KAAKkb,KAAKlK,OAAO6H,EAAI9d,SAE1BiF,MAKHA,KAAK+Q,cAAcZ,ICpW3B,MAAM+V,GAEFrmB,wBAAwB0E,EAAUkB,GAC9B,IAAK7D,EAAKE,GAAQ2D,EAIlB,OAAO,KAFMlB,EAAW3C,IACXE,EAAOF,GAIxB/B,wBAAwBsmB,EAAS1gB,GAC7B,IAAK7D,EAAKE,GAAQ2D,EAMlB,OAJA0gB,EAAUvsB,KAAK+F,IAAI,EAAGwmB,GAIfvkB,GAFME,EAAOF,IADpBukB,EAAUvsB,KAAK8F,IAAI,IAAKymB,IAEI,IAIhCtmB,YAAa0R,EAAc6U,EAAe5qB,EAAQ,IAC9CwE,KAAK8X,IAAMvG,EACXvR,KAAKqmB,SAAW7qB,EAAQ8qB,QACxBtmB,KAAKumB,eAAiBH,EACtBpmB,KAAKwmB,OAAQ,EACbxmB,KAAKoa,SAAW5e,EAChBwE,KAAKkT,OAAS1X,EAAQiK,OAASzF,KAAK8X,IAAIrS,MACxC,IAAK7D,EAAKE,GAAQ9B,KAAKkT,OACvB,GAAItR,IAAQjD,EAAAA,GAAYmD,GAAQnD,EAAAA,EAC5B,MAAM,IAAInB,MAAM,gBAAiBwC,KAAKkT,QAI1ClT,KAAKumB,eAAenpB,iBAAiB,QAAS,WAG1C4C,KAAKymB,aAAc,GACrBxU,KAAKjS,OAGPA,KAAKumB,eAAenpB,iBAAiB,SAAU,WAE3C4C,KAAKymB,aAAc,EAEnB,IAAIN,EAAUO,SAAS1mB,KAAKumB,eAAevrB,OACvCuJ,EAAW2hB,GAAeS,iBAAiBR,EAASnmB,KAAKkT,QAC7DlT,KAAK8X,IAAIxD,OAAO,CAAC/P,SAAUA,KAC7B0N,KAAKjS,OAGHA,KAAKqmB,UACLrmB,KAAKqmB,SAASlX,GAAG,SAAUnP,KAAK4mB,QAAQ3U,KAAKjS,OAIrDH,UACI,IAAI0E,EAAWvE,KAAK8X,IAAIxT,IAExB,IAAKtE,KAAKymB,YAAa,CACnB,IAAIN,EAAUD,GAAeW,iBAAiBtiB,EAAUvE,KAAKkT,QAC7D,GAAIlT,KAAKoa,SAAS0M,OAEd,GAAIX,EAAU,GAAO,IAAQA,EAGzB,YADAnmB,KAAKoa,SAAS0M,MAAMC,YAIxBZ,EAAWA,EAAU,EAAO,EAAMA,EAClCA,EAAW,IAAQA,EAAW,IAAOA,EAEzCnmB,KAAKumB,eAAevrB,MAAQ,GAAGmrB,EAC3BnmB,KAAKoa,SAAS0M,OACd9mB,KAAKoa,SAAS0M,MAAME,SCrD7B,SAASC,KAEZ,IAAIC,EAAU,IAAInM,WAAWrgB,OAAQC,GAAOA,aAAasgB,IACrDkM,EAAMD,EAAQ3tB,OAAS,EAAK2tB,EAAQ,GAAK,IAAIjM,GAE7CmM,EAAU,IAAIrM,WAAWrgB,OAAQC,GAAOA,aAAa8Z,IAErD4S,EAAW,IAAItM,WAAWrgB,OAAQC,GAAO8B,OAAO6qB,eAAe3sB,KAAO8B,OAAO+S,WAC7EhU,EAAW6rB,EAAS9tB,OAAS,EAAK8tB,EAAS,GAAK,GACpD,GAAsB,GAAlBD,EAAQ7tB,OACR,MAAM,IAAIiE,MAAM,gCACb,OAAsB,GAAlB4pB,EAAQ7tB,OACR,IAAI2pB,GAAmBiE,EAAIC,EAAQ,GAAI5rB,GAEvC,IAAImpB,GAAsBwC,EAAIC,EAAQ,GAAIA,EAAQ,GAAI5rB,GAKrE0nB,GAAmB1T,UAAU+X,MAAQ,WACjC,IAAIxJ,EAAO,CAAC/d,KAAKka,SAEjB,OADA6D,EAAK9a,KAAKukB,MAAMzJ,EAAM,IAAIhD,YACnBkM,MAAalJ,IAIxB4G,GAAsBnV,UAAU+X,MAAQ,WACpC,IAAIxJ,EAAO,CAAC/d,KAAKka,SAEjB,OADA6D,EAAK9a,KAAKukB,MAAMzJ,EAAM,IAAIhD,YACnBkM,MAAalJ,6EC1DxB,MAEIle,YAAYsnB,EAAIM,GACZznB,KAAKmnB,GAAKA,EACVnnB,KAAKynB,KAAOA,EACZznB,KAAK0nB,MAAQpuB,EAAc,GAC3B0G,KAAKmnB,GAAGhY,GAAG,SAAUnP,KAAK2nB,SAAS1V,KAAKjS,OACxCA,KAAKmnB,GAAGhY,GAAG,SAAUnP,KAAK4nB,SAAS3V,KAAKjS,OAG5CH,WAAWgZ,GACP,IAAImL,EAAOnL,EAAY,SAAIA,EAAIpN,SAASpM,WAAa,YACjDwa,EAAOgO,KAAKC,UAAUjP,EAAIgB,MAC9B,MAAO,GAAGhB,EAAI9d,QAAQipB,MAAQnK,IAGlCha,SAASkoB,GACL,IAAIC,EAAM,GAAGhoB,KAAK0nB,SAASK,EAAMhtB,MAC7BktB,EAAOjoB,KAAKynB,KAAKS,cAAc,IAAIF,GACvC,GAAIC,EAEAA,EAAKE,UAAYnoB,KAAKooB,WAAWL,EAAMxX,SACpC,CAEH,IAAI0X,EAAOlrB,SAASsrB,cAAc,OAClCJ,EAAKE,UAAYnoB,KAAKooB,WAAWL,EAAMxX,KACvC0X,EAAKK,aAAa,KAAMN,GACxBhoB,KAAKynB,KAAKc,YAAYN,IAI9BpoB,SAASkoB,GAEL,IAAIC,EAAM,GAAGhoB,KAAK0nB,SAASK,EAAMhtB,MAC7BktB,EAAOjoB,KAAKynB,KAAKS,cAAc,IAAIF,GACnCC,GACAA,EAAKO,WAAWC,YAAYR,sBCpBxC,cAA6BxT,GAC5B5U,YAAa0R,EAAcO,GAC1B,GAAIA,EAAQ,EAAI,MAAM,IAAItU,MAAO,gCACjC,GAAc,IAAVsU,EAAc,MAAM,IAAItU,MAAO,6CACnCuC,MAAMwR,GAENvR,KAAK0oB,OAAS5W,EAEd9R,KAAK2oB,QAAU,GAEf3oB,KAAK4oB,SAAW,IAAItX,GAAQtR,KAAMA,KAAK6oB,gBAAgB5W,KAAKjS,OACtDA,KAAK0O,eAAe,cAAe,CAAC1F,MAAK,IAI7CnJ,sBAAsBI,GAClB,MAAY,eAARA,EACO,CAACD,KAAK0oB,QAEN3oB,MAAMoN,sBAAsBlN,GAK9CJ,cAAc8R,GAiBb3R,KAAK2oB,QAAQ1lB,KAAK0O,GAEb3R,KAAK4oB,SAAShT,SAClB5V,KAAK6oB,kBAKPhpB,kBAEC,IACI8R,EAAKmX,EADLlX,EAAM5R,KAAK6R,MAAMD,MAErB,KAAO5R,KAAK2oB,QAAQpvB,OAAS,IAC5BuvB,EAAM9oB,KAAK2oB,QAAQ,GAAG/jB,UAAY5E,KAAK0oB,SACnC9W,EAAMkX,KAGTnX,EAAM3R,KAAK2oB,QAAQxsB,QAEnBwV,EAAI/M,UAAYkkB,EAChB9oB,KAAK6V,UAAUlE,GAIb3R,KAAK2oB,QAAQpvB,OAAS,IACzBuvB,EAAM9oB,KAAK2oB,QAAQ,GAAG/jB,UAAY5E,KAAK0oB,OACvC1oB,KAAK4oB,SAAS7W,WAAW+W,IAI3BjpB,OAAO8R,GAEN,MAAM,IAAInU,MAAO,0DAGfsU,YAAa,OAAO9R,KAAK0oB,OAE5B5W,UAAUA,GACCA,GAAS9R,KAAK0oB,SAEd1oB,KAAK0oB,OAAS5W,EACd9R,KAAK4oB,SAAS3X,QACdjR,KAAK6oB,kBACL7oB,KAAK2O,gBAAgB,cAAemD,mCZxEhD,cAA4B2C,GAE3B5U,YAAY6U,EAAWjP,GACtB1F,MAAM2U,EAAW,CAACG,SAAQ,IAC1B7U,KAAKgV,QAAUvP,EAGhB5F,OAAO8R,GAEN,GAAiB9S,MAAb8S,EAAIlM,MAAoB,CAE3B,IAAK7D,EAAKE,GAAQ6P,EAAIlM,MACtB,GAAI7D,GAAOE,EACV,MAAM,IAAItE,MAAM,gBAAiBmU,EAAIlM,OAEtC,GAAI7D,GAAO5B,KAAKgV,QAAQ,IAAMlT,GAAQ9B,KAAKgV,QAAQ,GAAI,CACtDhV,KAAKgV,QAAU,CAACpT,EAAKE,GACrB,IAAIgD,EAAS9E,KAAKmX,kBAAkBtE,QACpC/N,EAAOP,SAAW8S,GAAUvS,EAAOP,SAAUvE,KAAKgV,SAClDhV,KAAK+U,SAAWjQ,EAEhB,IAAIqR,EAAO,CAAC1Q,MAAOzF,KAAKgV,WAAYhV,KAAK+U,SAAUV,MAAK,GACxDrU,KAAKwW,iBAAiBL,GAAM,GAAM,UAE5BxE,EAAIlM,MAGZ,GAAoB5G,MAAhB8S,EAAIpN,SAAuB,CAI9B,IAAIqN,EAAM5R,KAAK6R,MAAMD,MAEjBxS,EADayF,EAAgB7E,KAAK8E,OAAQ8M,GACxBrN,SAAWoN,EAAIpN,SACjCwkB,EAAiBlkB,EAAgB7E,KAAKmX,kBAAkBrS,OAAQ8M,GACpED,EAAIpN,SAAWwkB,EAAexkB,SAAWnF,EAE1C,OAAOW,MAAMuU,OAAO3C,GAIrB9R,iBAAiBiF,GAOhB,OALIA,EAAOP,UAAYvE,KAAKgV,QAAQ,GACnClQ,EAAOP,SAAWvE,KAAKgV,QAAQ,GACrBhV,KAAKgV,QAAQ,IAAMlQ,EAAOP,WACpCO,EAAOP,SAAWvE,KAAKgV,QAAQ,IAEzBlQ,EAIRjF,cAAc8R,GAUP,OATiB9S,MAAb8S,EAAIlM,QAGJkM,EAAIlM,MAAQzF,KAAKgV,SAEDnW,MAAhB8S,EAAIpN,WAEPoN,EAAIpN,SAAW8S,GAAU1F,EAAIpN,SAAUvE,KAAKgV,UAEtCrD,uBGpCf,MAEI9R,YAAa0R,EAAc3E,EAAUpR,EAAQ,IACzCwE,KAAK8X,IAAMvG,EACX,IAAIgH,OAACA,EAAO,EAACnG,OAAEA,EAAO,GAAK5W,EAC3BwE,KAAKgpB,QAAU5W,EACfpS,KAAKipB,QAAU1Q,EACfvY,KAAKmT,UAAYvG,EACjB5M,KAAK4oB,SAAW,IAAItX,GAAQtR,KAAK8X,IAAK9X,KAAKkpB,eAAejX,KAAKjS,OAG/DA,KAAK8X,IAAI3I,GAAG,YAAanP,KAAKoY,UAAUnG,KAAKjS,OAGjDH,UAAUuN,EAAMG,GACZ,IAAIjJ,EAAO8I,EAAS,KAAIA,EAAK7I,SAAWvE,KAAK8X,IAAIxT,IACjDtE,KAAKmpB,cAAc7kB,GAGvBzE,kBAAkBupB,EAAQC,GACtB,IAAIvkB,EAAS9E,KAAK8X,IAAIjF,SACjBvK,EAAOhE,GAAO2S,EAA2BnS,EAAQ,CAACskB,EAAQC,IAC/D,GAAaxqB,MAATyJ,EACA,OAGJ,IAAKghB,EAAMC,GAASvpB,KAAK8X,IAAIrS,MAC7B,OAAInB,EAAMglB,GAAQC,EAAQjlB,EACf,MAACzF,OAAWA,GAEhB,CAACiG,EAAOF,UAAY0D,EAAOhE,GAGtCzE,cAAcyE,GACVtE,KAAK4oB,SAAS3X,QAEd,IAAKuO,EAAO4J,EAAQC,GAlE5B,SAAuB9kB,EAAUgU,EAAQnG,GACrC,IAAKuG,EAAGza,GAAKoa,GAAY/T,EAAUgU,EAAQnG,GACvCiX,EAAQ,CAAC1Q,EAAE,EAAG,GACdyQ,EAAe,GAALlrB,EAAU,CAACya,EAAE,EAAG,GAAI,CAACA,EAAG,GAGtC,OAFAyQ,EAAS1Q,GAAY0Q,EAAQ7Q,EAAQnG,GACrCiX,EAAQ3Q,GAAY2Q,EAAO9Q,EAAQnG,GAC5B,CAAK,GAAHlU,EAAOkrB,EAAQC,GA4DUG,CAAcllB,EACAtE,KAAKipB,QACLjpB,KAAKgpB,SAE7CxJ,GACAxf,KAAKmT,UAAU7O,GAGnB,IAAImC,EAAMzG,KAAKypB,kBAAkBL,EAAQC,GACzC,GAAWxqB,MAAP4H,EACA,OAGJ,IAAI9B,EAAK8B,EAAI,GACbzG,KAAK4oB,SAAS7W,WAAWpN,EAAI8B,GAGjC5G,eAAe+R,EAAKD,GAChB,IAAIrN,EAAMqN,EAAI,GACd3R,KAAKmpB,cAAc7kB,sBF1C3B,cAA6BmQ,GAE5B5U,YAAa0R,EAAc9L,GAC1B1F,MAAMwR,EAAc,CAACsD,SAAQ,IAC7B7U,KAAK0pB,QAAU9jB,KACf5F,KAAKgV,QAAUvP,EAIhB5F,OAAO8R,GACN,MAAMnU,MAAM,oBAuCbqC,cAAc8R,GAMP,GALiB9S,MAAb8S,EAAIlM,cAGGkM,EAAIlM,MAEK5G,MAAhB8S,EAAIpN,SAAuB,CAE9B,IAAIA,SAACA,EAAQE,SAAEA,EAAQC,aAAEA,EAAYE,UAAEA,GAAa+M,EAChD7M,EAAS,CAACP,SAAAA,EAAUE,SAAAA,EAAUC,aAAAA,EAAcE,UAAAA,GAEhD,GADAE,EAAS9E,KAAK2pB,eAAe7kB,GACfjG,MAAViG,EAIT,YADA9E,KAAKyW,eAAezW,KAAKmX,kBAAkBrS,OAAQ9E,KAAKgV,SAIlDrD,EAAIpN,SAAWO,EAAOP,SACtBoN,EAAIlN,SAAWK,EAAOL,SACtBkN,EAAIjN,aAAeI,EAAOJ,aAC1BiN,EAAI/M,UAAYE,EAAOF,UAGzB,OAAO+M,EAId9R,eAAeiF,GACd,IAAIyS,EAAY/R,EAAkBV,EAAQ9E,KAAKgV,SAC3C4U,EAAgB5pB,KAAK0pB,QAAQ3rB,IAAIwZ,EAAWvX,KAAKgV,SACrD,GAAI4U,EAAclS,QAEb1X,KAAK0pB,QAAQjb,QAAUrJ,EAAWlE,SAMrC4D,EAASa,EAAWb,EAAQ9E,KAAKgV,eAKlC,GAAIhV,KAAK0pB,QAAQjb,QAAUrJ,EAAWlE,YAG/B,CAUN,IAAI0oB,EAAcnS,SAGjB,OAFA3S,EAASa,EAAWb,EAAQ9E,KAAKgV,SAMpC,OAAOlQ,qBY3KT,cAA6B2P,GACzB5U,YAAa6U,EAAWmV,GAC1B9pB,MAAM2U,GACN1U,KAAK8pB,QAAUD,EACT7pB,KAAK0O,eAAe,cAAe,CAAC1F,MAAK,IAI7CnJ,sBAAsBI,GAClB,MAAY,eAARA,EACO,CAACD,KAAK8pB,SAEN/pB,MAAMoN,sBAAsBlN,GAK3CJ,cAAc8R,GAaV,OAZiB9S,MAAb8S,EAAIlM,QACJkM,EAAIlM,MAAQ,CAACkM,EAAIlM,MAAM,GAAGzF,KAAK8pB,QAASnY,EAAIlM,MAAM,GAAGzF,KAAK8pB,UAE1CjrB,MAAhB8S,EAAIpN,WACJoN,EAAIpN,UAAYvE,KAAK8pB,SAELjrB,MAAhB8S,EAAIlN,WACJkN,EAAIlN,UAAYzE,KAAK8pB,SAEDjrB,MAApB8S,EAAIjN,eACJiN,EAAIjN,cAAgB1E,KAAK8pB,SAEtBnY,EAGd9R,OAAO8R,GAUN,OAToB9S,MAAhB8S,EAAIpN,WACEoN,EAAIpN,UAAYvE,KAAK8pB,SAEXjrB,MAAhB8S,EAAIlN,WACEkN,EAAIlN,UAAYzE,KAAK8pB,SAEPjrB,MAApB8S,EAAIjN,eACEiN,EAAIjN,cAAgB1E,KAAK8pB,SAE5B/pB,MAAMuU,OAAO3C,GAGlBoY,YAAa,OAAO/pB,KAAK8pB,QAEzBC,UAAUF,GACFA,GAAU7pB,KAAK8pB,UAEf9pB,KAAK8pB,QAAUD,EACf7pB,KAAKkX,cAAc,IACZlX,KAAKmX,kBAAkBrS,OAC1BW,MAAOzF,KAAKmX,kBAAkB1R,QAElCzF,KAAK2O,gBAAgB,cAAekb,qCCvDhD,cAA4BpV,GAE3B5U,YAAa6U,EAAW5B,EAAMtX,GAC7BuE,MAAM2U,EAAWlZ,GACjBwE,KAAKgqB,MAAQlX,EACP9S,KAAK0O,eAAe,aAAc,CAAC1F,MAAK,IAI5CnJ,sBAAsBI,GAClB,MAAY,cAARA,EACO,CAACD,KAAKgqB,OAENjqB,MAAMoN,sBAAsBlN,GAK9CJ,cAAc8R,GAQP,OAPiB9S,MAAb8S,EAAIlM,QACJkM,EAAIlM,MAAM,IAAMzF,KAAKgqB,MACrBrY,EAAIlM,MAAM,IAAMzF,KAAKgqB,OAELnrB,MAAhB8S,EAAIpN,WACboN,EAAIpN,UAAYvE,KAAKgqB,OAETrY,EAId9R,OAAO8R,GAIA,GAHoB9S,MAAhB8S,EAAIpN,WACboN,EAAIpN,UAAYvE,KAAKgqB,OAECnrB,MAAb8S,EAAIlM,MAAoB,CACxB,IAAK7D,EAAKE,GAAQ6P,EAAIlM,MACtBkM,EAAIlM,MAAQ,CAAC7D,EAAM5B,KAAKgqB,MAAOloB,EAAO9B,KAAKgqB,OAErD,OAAOjqB,MAAMuU,OAAO3C,GAGrBmB,WAAY,OAAO9S,KAAKgqB,MAExBlX,SAASA,GACEA,GAAQ9S,KAAKgqB,QAEtBhqB,KAAKgqB,MAAQlX,EACb9S,KAAKkX,cAAc,IACHlX,KAAKmX,kBAAkBrS,OAC1BW,MAAOzF,KAAKmX,kBAAkB1R,QAElCzF,KAAK2O,gBAAgB,aAAcmE,eCrC/C,cAAqB5B,GAEjBrR,YAAYqa,EAAS1e,EAAQ,IACzBuE,MAAMvE,GACNwE,KAAKiqB,YAAczuB,EAAQ0uB,WAC3BlqB,KAAKmqB,aAAe3uB,EAAQ4uB,YAC5BpqB,KAAKqqB,UAAY7uB,EAAQiQ,SACzBzL,KAAKsqB,cAAgB9uB,EAAQ+uB,aAC7BvqB,KAAKwqB,MAAQ,EAGbxqB,KAAKyqB,WAAa,GAGlBzqB,KAAK0qB,QAAUxQ,EACf,IAAIgI,EAAKliB,KAAKmiB,mBAAmBlQ,KAAKjS,MACtCA,KAAK2qB,WAAa3qB,KAAK0qB,QAAQrI,aAAaH,GAQhDlS,iBACI,OAAOhQ,KAAK0qB,QAGhBxQ,cACI,OAAOla,KAAK0qB,QAIhBjf,eACI,OAAOzL,KAAKqqB,UAGhB5e,aAAcuY,GACVhkB,KAAK4qB,aAAa5G,GAQtBnkB,aAAc2b,GACV,IAAIC,EAAS,CACTD,QAASA,GAGb,OADAxb,KAAKyqB,WAAWxnB,KAAKwY,GACdA,EAIX5b,aAAc4b,GACV,IAAInR,EAAQtK,KAAKyqB,WAAW/O,QAAQD,GAChCnR,GAAS,GACTtK,KAAKyqB,WAAW1f,OAAOT,EAAO,GAKtCzK,kBAAmB8b,EAAUC,GACzB5b,KAAKyqB,WAAWriB,SAAQ,SAASqT,GAC7BA,EAAOD,QAAQG,EAAUC,MAajC/b,UAAUgZ,GACN,OAAWha,MAAPga,MAIA7Y,KAAKqqB,YACArqB,KAAKqqB,UAAU7K,MAAM3G,EAAIpN,eAK9BzL,KAAKiqB,cACAjqB,KAAKiqB,YAAYpR,EAAI9d,SAK1BiF,KAAKmqB,eACAnqB,KAAKmqB,aAAatR,EAAIgB,SAUnCha,aAAagZ,GACT,OAAWha,MAAPga,GAAoB7Y,KAAKsqB,cAElB,CACHvvB,IAAK8d,EAAI9d,IACT0Q,SAAUoN,EAAIpN,SACdoO,KAAM7Z,KAAKsqB,cAAczR,EAAIgB,OAG9BhB,EAOXhZ,sBAAsBsQ,GAClB,IAAI0a,EAAS,GACb,IAAK,IAAIxiB,KAAQ8H,EAAO,CACpB,GAAgBtR,MAAZwJ,EAAKkI,KAAgC1R,MAAZwJ,EAAKmI,IAC9B,SAUJ,IAAIsa,EAAQ9qB,KAAK+qB,UAAU1iB,EAAKmI,KAAQnI,EAAKmI,SAAM3R,EAC/CmsB,EAAQhrB,KAAK+qB,UAAU1iB,EAAKkI,KAAQlI,EAAKkI,SAAM1R,EACvCA,MAARisB,GAA6BjsB,MAARmsB,IAIzBF,EAAO9qB,KAAKirB,aAAaH,GACzBE,EAAOhrB,KAAKirB,aAAaD,GAEzBH,EAAO5nB,KAAK,CAAClI,IAAIsN,EAAKtN,IAAKwV,IAAKya,EAAMxa,IAAKsa,KAE/C,OAAOD,EAQXhrB,gBAAgB4L,GACZ,GAAIzL,KAAKqqB,UAEN,GAAI5e,EAAU,CAEV,IAAIyf,EAAa5pB,EAASiB,UAAUkJ,EAAUzL,KAAKqqB,WACnD,GAAyB,GAArBa,EAAW3xB,OAEX,OADAsU,QAAQC,IAAI,6BAA6BrC,EAASpM,0CAA0CW,KAAKqqB,UAAUhrB,cACpG,GAENoM,EAAWyf,EAAW,QAI1Bzf,EAAWzL,KAAKqqB,UAGxB,OAAO5e,EAOX5L,OAAO4L,EAAUzH,GACb,IACIoN,EADAiZ,EAAYrqB,KAAKmrB,gBAAgB1f,GAQrC,OALI2F,EADAiZ,EACOrqB,KAAKgQ,WAAWqP,OAAOgL,EAAWrmB,GAElC,IAAIhE,KAAKgQ,WAAWxD,UAGxB4E,EAAK1W,OAAOsF,KAAK+qB,UAAW/qB,MAC9BvC,IAAIuC,KAAKirB,aAAcjrB,MAQhCH,iBAAiB4L,GACb,IAAI4e,EAAYrqB,KAAKmrB,gBAAgB1f,GAGrC,OAFYzL,KAAKgQ,WAAWoR,iBAAiBiJ,GAEhC3vB,OAAQ2N,GACVrI,KAAK+qB,UAAU1iB,EAAKwQ,KAC5B7Y,MAAMvC,IAAK4K,IACH,CAAC9G,SAAU8G,EAAK9G,SAAUsX,IAAK7Y,KAAKirB,aAAa5iB,EAAKwQ,OAC9D7Y,MAOPH,sBAAsBI,GAClB,GAAY,SAARA,GAA2B,UAARA,EAAkB,CAErC,IAEIkQ,EAFOnQ,KAAKqf,SAEC5hB,IAAKob,IACX,CAAC9d,IAAI8d,EAAI9d,IAAKwV,IAAIsI,EAAKrI,SAAI3R,KAItC,OADAmB,KAAK0Q,UAAUP,GACC,SAARlQ,EAAmB,CAACkQ,GAASA,GAQ7CtQ,mBAAmB0iB,EAAU3G,GACzB,IAAIzL,EAAQ,IAAIoS,EAAS/V,UACzB2D,EAAQnQ,KAAKorB,sBAAsBjb,GAEnC,IAAK,IAAI9H,KAAQ8H,EACGtR,MAAZwJ,EAAKkI,KAAgC1R,MAAZwJ,EAAKmI,IAE9BxQ,KAAKwqB,OAAS,EACK3rB,MAAZwJ,EAAKkI,KAAgC1R,MAAZwJ,EAAKmI,MAErCxQ,KAAKwqB,OAAS,GAItBzqB,MAAMgR,cAAcZ,GAEpB,IAAIwL,EAAW,IAAI7gB,IAAIqV,EAAM1S,IAAK4K,GACvB,CAACA,EAAKtN,IAAKsN,KAElBrI,KAAKqqB,YACLzO,EAAoBta,EAASiB,UAAUvC,KAAKqrB,UAAWzP,IAE3D5b,KAAK0c,kBAAkBf,EAAUC,GAQrC/b,aAAcmkB,GACV,IAAKA,aAAe1iB,EAChB,MAAM,IAAI9D,MAAM,mBAAoBwmB,EAAI3kB,YAE5C,IAAKW,KAAKqqB,YAAcrqB,KAAKqqB,UAAU9qB,OAAOykB,GAAM,CAEhD,IAAIsH,EAAetrB,KAAKqf,SAExBrf,KAAKqqB,UAAYrG,EAEjB,IAAIuH,EAAWvrB,KAAKgQ,WAAWqP,OAAO2E,GAEtCuH,EAAWA,EACN7wB,OAAOsF,KAAK+qB,UAAW/qB,MACvBvC,IAAIuC,KAAKirB,aAAcjrB,MAE5B,IAAIwrB,EAAgB,IAAI1wB,IAAI,IAAIwwB,GAAc7tB,IAAKob,GACxC,CAACA,EAAI9d,IAAK8d,KAEjB4S,EAAY,IAAI3wB,IAAI,IAAIywB,GAAU9tB,IAAKob,GAChC,CAACA,EAAI9d,IAAK8d,KAGjB6S,EAAa9wB,EAAe4wB,EAAeC,GAC3CE,EAAc/wB,EAAe6wB,EAAWD,GAExCI,EAAY,IAAIF,EAAWlf,UAAU/O,IAAKob,IACnC,CAAC9d,IAAK8d,EAAI9d,IAAKwV,SAAI1R,EAAW2R,IAAKqI,KAE1CgT,EAAa,IAAIF,EAAYnf,UAAU/O,IAAKob,IACrC,CAAC9d,IAAK8d,EAAI9d,IAAKwV,IAAIsI,EAAKrI,SAAK3R,KAGxCmB,KAAKwqB,OAASoB,EAAUryB,OACxByG,KAAKwqB,OAASqB,EAAWtyB,OAEzB,MAAM4W,EAAQ7U,EAAa,CAACswB,EAAWC,GAAa,CAACpwB,MAAK,EAAOC,OAAM,IACvEsE,KAAK+Q,cAAcZ,IAQ3BjW,WACI,OAAO8F,KAAKwqB,MAGhB3qB,IAAI9E,GACA,OAAyB8D,MAAjBmB,KAAKyO,IAAI1T,GAGrB8E,IAAI9E,GACA,IAAI8d,EAAM9Y,MAAM0O,IAAI1T,GACpB,GAAW8D,MAAPga,GAAoB7Y,KAAK+qB,UAAUlS,GACnC,OAAO7Y,KAAKirB,aAAapS,GAIjChZ,OACI,OAAOG,KAAKwM,SAAS/O,IAAKob,GACfA,EAAI9d,KAInB8E,SACI,MAAO,IAAIE,MAAMyM,UACZ9R,OAAQme,GACE7Y,KAAK+qB,UAAUlS,GACvB7Y,MACFvC,IAAKob,GACK7Y,KAAKirB,aAAapS,GAC1B7Y,MAGXH,UACI,OAAOG,KAAKwM,SAAS/O,IAAKob,GACf,CAACA,EAAI9d,IAAK8d,IASzBhZ,OAAOuR,EAAM5V,GACT,MAAM,IAAIgC,MAAM,mBAGpBqC,IAAK9E,EAAKC,GACN,MAAM,IAAIwC,MAAM,mBAGpBqC,OAAQ9E,GACJ,MAAM,IAAIyC,MAAM,mBAGpBqC,MAAO9E,GACH,MAAM,IAAIyC,MAAM,uDC1WxB,cAAiCiX,GAE7B5U,YAAa6U,EAAWtC,GAC1BrS,MAAM2U,GACN1U,KAAKgpB,QAAU5W,EACTpS,KAAK0O,eAAe,eAAgB,CAAC1F,MAAK,IAI9CnJ,sBAAsBI,GAClB,MAAY,gBAARA,EACO,CAACD,KAAKgpB,SAENjpB,MAAMoN,sBAAsBlN,GAK3CJ,cAAc8R,GAIV,GAHiB9S,MAAb8S,EAAIlM,QACJkM,EAAIlM,MAAQ,EAAE9G,EAAAA,EAAUA,EAAAA,IAERE,MAAhB8S,EAAIpN,SAAuB,CAE3B,IAAII,EAAKgN,EAAI/M,UACTkE,EAAajE,EAAgB8M,EAAKhN,EAAK3E,KAAKgpB,SAChDrX,EAAIpN,SAAWuE,EAAWvE,SAC1BoN,EAAIlN,SAAWqE,EAAWrE,SAC1BkN,EAAIjN,aAAeoE,EAAWpE,aAC9BiN,EAAI/M,UAAYD,EAEpB,OAAOgN,EAGXS,aAAc,OAAOpS,KAAKgpB,QAE1B5W,WAAWA,GACHA,GAAUpS,KAAKgpB,UAEfhpB,KAAKgpB,QAAU5W,EACfpS,KAAKkX,cAAc,IACZlX,KAAKmX,kBAAkBrS,OAC1BW,MAAOzF,KAAKmX,kBAAkB1R,QAElCzF,KAAK2O,gBAAgB,eAAgByD,8HND1B"}